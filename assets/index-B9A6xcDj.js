var Oy=Object.defineProperty;var Kg=r=>{throw TypeError(r)};var Fy=(r,e,t)=>e in r?Oy(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var fd=(r,e,t)=>Fy(r,typeof e!="symbol"?e+"":e,t),Zg=(r,e,t)=>e.has(r)||Kg("Cannot "+t);var Cs=(r,e,t)=>(Zg(r,e,"read from private field"),t?t.call(r):e.get(r)),pd=(r,e,t)=>e.has(r)?Kg("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),md=(r,e,t,n)=>(Zg(r,e,"write to private field"),n?n.call(r,t):e.set(r,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();function zy(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var gd={exports:{}},Fa={},vd={exports:{}},St={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jg;function ky(){if(Jg)return St;Jg=1;var r=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),n=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),g=Symbol.iterator;function v(F){return F===null||typeof F!="object"?null:(F=g&&F[g]||F["@@iterator"],typeof F=="function"?F:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},M=Object.assign,E={};function S(F,re,ke){this.props=F,this.context=re,this.refs=E,this.updater=ke||y}S.prototype.isReactComponent={},S.prototype.setState=function(F,re){if(typeof F!="object"&&typeof F!="function"&&F!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,F,re,"setState")},S.prototype.forceUpdate=function(F){this.updater.enqueueForceUpdate(this,F,"forceUpdate")};function x(){}x.prototype=S.prototype;function L(F,re,ke){this.props=F,this.context=re,this.refs=E,this.updater=ke||y}var R=L.prototype=new x;R.constructor=L,M(R,S.prototype),R.isPureReactComponent=!0;var w=Array.isArray,z=Object.prototype.hasOwnProperty,U={current:null},O={key:!0,ref:!0,__self:!0,__source:!0};function Y(F,re,ke){var ee,pe={},Re=null,Ee=null;if(re!=null)for(ee in re.ref!==void 0&&(Ee=re.ref),re.key!==void 0&&(Re=""+re.key),re)z.call(re,ee)&&!O.hasOwnProperty(ee)&&(pe[ee]=re[ee]);var Le=arguments.length-2;if(Le===1)pe.children=ke;else if(1<Le){for(var Be=Array(Le),rt=0;rt<Le;rt++)Be[rt]=arguments[rt+2];pe.children=Be}if(F&&F.defaultProps)for(ee in Le=F.defaultProps,Le)pe[ee]===void 0&&(pe[ee]=Le[ee]);return{$$typeof:r,type:F,key:Re,ref:Ee,props:pe,_owner:U.current}}function P(F,re){return{$$typeof:r,type:F.type,key:re,ref:F.ref,props:F.props,_owner:F._owner}}function N(F){return typeof F=="object"&&F!==null&&F.$$typeof===r}function I(F){var re={"=":"=0",":":"=2"};return"$"+F.replace(/[=:]/g,function(ke){return re[ke]})}var se=/\/+/g;function K(F,re){return typeof F=="object"&&F!==null&&F.key!=null?I(""+F.key):re.toString(36)}function fe(F,re,ke,ee,pe){var Re=typeof F;(Re==="undefined"||Re==="boolean")&&(F=null);var Ee=!1;if(F===null)Ee=!0;else switch(Re){case"string":case"number":Ee=!0;break;case"object":switch(F.$$typeof){case r:case e:Ee=!0}}if(Ee)return Ee=F,pe=pe(Ee),F=ee===""?"."+K(Ee,0):ee,w(pe)?(ke="",F!=null&&(ke=F.replace(se,"$&/")+"/"),fe(pe,re,ke,"",function(rt){return rt})):pe!=null&&(N(pe)&&(pe=P(pe,ke+(!pe.key||Ee&&Ee.key===pe.key?"":(""+pe.key).replace(se,"$&/")+"/")+F)),re.push(pe)),1;if(Ee=0,ee=ee===""?".":ee+":",w(F))for(var Le=0;Le<F.length;Le++){Re=F[Le];var Be=ee+K(Re,Le);Ee+=fe(Re,re,ke,Be,pe)}else if(Be=v(F),typeof Be=="function")for(F=Be.call(F),Le=0;!(Re=F.next()).done;)Re=Re.value,Be=ee+K(Re,Le++),Ee+=fe(Re,re,ke,Be,pe);else if(Re==="object")throw re=String(F),Error("Objects are not valid as a React child (found: "+(re==="[object Object]"?"object with keys {"+Object.keys(F).join(", ")+"}":re)+"). If you meant to render a collection of children, use an array instead.");return Ee}function ve(F,re,ke){if(F==null)return F;var ee=[],pe=0;return fe(F,ee,"","",function(Re){return re.call(ke,Re,pe++)}),ee}function ue(F){if(F._status===-1){var re=F._result;re=re(),re.then(function(ke){(F._status===0||F._status===-1)&&(F._status=1,F._result=ke)},function(ke){(F._status===0||F._status===-1)&&(F._status=2,F._result=ke)}),F._status===-1&&(F._status=0,F._result=re)}if(F._status===1)return F._result.default;throw F._result}var de={current:null},V={transition:null},he={ReactCurrentDispatcher:de,ReactCurrentBatchConfig:V,ReactCurrentOwner:U};function ae(){throw Error("act(...) is not supported in production builds of React.")}return St.Children={map:ve,forEach:function(F,re,ke){ve(F,function(){re.apply(this,arguments)},ke)},count:function(F){var re=0;return ve(F,function(){re++}),re},toArray:function(F){return ve(F,function(re){return re})||[]},only:function(F){if(!N(F))throw Error("React.Children.only expected to receive a single React element child.");return F}},St.Component=S,St.Fragment=t,St.Profiler=s,St.PureComponent=L,St.StrictMode=n,St.Suspense=d,St.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=he,St.act=ae,St.cloneElement=function(F,re,ke){if(F==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+F+".");var ee=M({},F.props),pe=F.key,Re=F.ref,Ee=F._owner;if(re!=null){if(re.ref!==void 0&&(Re=re.ref,Ee=U.current),re.key!==void 0&&(pe=""+re.key),F.type&&F.type.defaultProps)var Le=F.type.defaultProps;for(Be in re)z.call(re,Be)&&!O.hasOwnProperty(Be)&&(ee[Be]=re[Be]===void 0&&Le!==void 0?Le[Be]:re[Be])}var Be=arguments.length-2;if(Be===1)ee.children=ke;else if(1<Be){Le=Array(Be);for(var rt=0;rt<Be;rt++)Le[rt]=arguments[rt+2];ee.children=Le}return{$$typeof:r,type:F.type,key:pe,ref:Re,props:ee,_owner:Ee}},St.createContext=function(F){return F={$$typeof:c,_currentValue:F,_currentValue2:F,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},F.Provider={$$typeof:a,_context:F},F.Consumer=F},St.createElement=Y,St.createFactory=function(F){var re=Y.bind(null,F);return re.type=F,re},St.createRef=function(){return{current:null}},St.forwardRef=function(F){return{$$typeof:u,render:F}},St.isValidElement=N,St.lazy=function(F){return{$$typeof:p,_payload:{_status:-1,_result:F},_init:ue}},St.memo=function(F,re){return{$$typeof:f,type:F,compare:re===void 0?null:re}},St.startTransition=function(F){var re=V.transition;V.transition={};try{F()}finally{V.transition=re}},St.unstable_act=ae,St.useCallback=function(F,re){return de.current.useCallback(F,re)},St.useContext=function(F){return de.current.useContext(F)},St.useDebugValue=function(){},St.useDeferredValue=function(F){return de.current.useDeferredValue(F)},St.useEffect=function(F,re){return de.current.useEffect(F,re)},St.useId=function(){return de.current.useId()},St.useImperativeHandle=function(F,re,ke){return de.current.useImperativeHandle(F,re,ke)},St.useInsertionEffect=function(F,re){return de.current.useInsertionEffect(F,re)},St.useLayoutEffect=function(F,re){return de.current.useLayoutEffect(F,re)},St.useMemo=function(F,re){return de.current.useMemo(F,re)},St.useReducer=function(F,re,ke){return de.current.useReducer(F,re,ke)},St.useRef=function(F){return de.current.useRef(F)},St.useState=function(F){return de.current.useState(F)},St.useSyncExternalStore=function(F,re,ke){return de.current.useSyncExternalStore(F,re,ke)},St.useTransition=function(){return de.current.useTransition()},St.version="18.3.1",St}var Qg;function tp(){return Qg||(Qg=1,vd.exports=ky()),vd.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ev;function By(){if(ev)return Fa;ev=1;var r=tp(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),n=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function c(u,d,f){var p,g={},v=null,y=null;f!==void 0&&(v=""+f),d.key!==void 0&&(v=""+d.key),d.ref!==void 0&&(y=d.ref);for(p in d)n.call(d,p)&&!a.hasOwnProperty(p)&&(g[p]=d[p]);if(u&&u.defaultProps)for(p in d=u.defaultProps,d)g[p]===void 0&&(g[p]=d[p]);return{$$typeof:e,type:u,key:v,ref:y,props:g,_owner:s.current}}return Fa.Fragment=t,Fa.jsx=c,Fa.jsxs=c,Fa}var tv;function Vy(){return tv||(tv=1,gd.exports=By()),gd.exports}var Ut=Vy(),yi=tp();const nv=zy(yi);var Rc={},_d={exports:{}},si={},xd={exports:{}},yd={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var iv;function Hy(){return iv||(iv=1,function(r){function e(V,he){var ae=V.length;V.push(he);e:for(;0<ae;){var F=ae-1>>>1,re=V[F];if(0<s(re,he))V[F]=he,V[ae]=re,ae=F;else break e}}function t(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var he=V[0],ae=V.pop();if(ae!==he){V[0]=ae;e:for(var F=0,re=V.length,ke=re>>>1;F<ke;){var ee=2*(F+1)-1,pe=V[ee],Re=ee+1,Ee=V[Re];if(0>s(pe,ae))Re<re&&0>s(Ee,pe)?(V[F]=Ee,V[Re]=ae,F=Re):(V[F]=pe,V[ee]=ae,F=ee);else if(Re<re&&0>s(Ee,ae))V[F]=Ee,V[Re]=ae,F=Re;else break e}}return he}function s(V,he){var ae=V.sortIndex-he.sortIndex;return ae!==0?ae:V.id-he.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;r.unstable_now=function(){return a.now()}}else{var c=Date,u=c.now();r.unstable_now=function(){return c.now()-u}}var d=[],f=[],p=1,g=null,v=3,y=!1,M=!1,E=!1,S=typeof setTimeout=="function"?setTimeout:null,x=typeof clearTimeout=="function"?clearTimeout:null,L=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function R(V){for(var he=t(f);he!==null;){if(he.callback===null)n(f);else if(he.startTime<=V)n(f),he.sortIndex=he.expirationTime,e(d,he);else break;he=t(f)}}function w(V){if(E=!1,R(V),!M)if(t(d)!==null)M=!0,ue(z);else{var he=t(f);he!==null&&de(w,he.startTime-V)}}function z(V,he){M=!1,E&&(E=!1,x(Y),Y=-1),y=!0;var ae=v;try{for(R(he),g=t(d);g!==null&&(!(g.expirationTime>he)||V&&!I());){var F=g.callback;if(typeof F=="function"){g.callback=null,v=g.priorityLevel;var re=F(g.expirationTime<=he);he=r.unstable_now(),typeof re=="function"?g.callback=re:g===t(d)&&n(d),R(he)}else n(d);g=t(d)}if(g!==null)var ke=!0;else{var ee=t(f);ee!==null&&de(w,ee.startTime-he),ke=!1}return ke}finally{g=null,v=ae,y=!1}}var U=!1,O=null,Y=-1,P=5,N=-1;function I(){return!(r.unstable_now()-N<P)}function se(){if(O!==null){var V=r.unstable_now();N=V;var he=!0;try{he=O(!0,V)}finally{he?K():(U=!1,O=null)}}else U=!1}var K;if(typeof L=="function")K=function(){L(se)};else if(typeof MessageChannel<"u"){var fe=new MessageChannel,ve=fe.port2;fe.port1.onmessage=se,K=function(){ve.postMessage(null)}}else K=function(){S(se,0)};function ue(V){O=V,U||(U=!0,K())}function de(V,he){Y=S(function(){V(r.unstable_now())},he)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(V){V.callback=null},r.unstable_continueExecution=function(){M||y||(M=!0,ue(z))},r.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<V?Math.floor(1e3/V):5},r.unstable_getCurrentPriorityLevel=function(){return v},r.unstable_getFirstCallbackNode=function(){return t(d)},r.unstable_next=function(V){switch(v){case 1:case 2:case 3:var he=3;break;default:he=v}var ae=v;v=he;try{return V()}finally{v=ae}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(V,he){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var ae=v;v=V;try{return he()}finally{v=ae}},r.unstable_scheduleCallback=function(V,he,ae){var F=r.unstable_now();switch(typeof ae=="object"&&ae!==null?(ae=ae.delay,ae=typeof ae=="number"&&0<ae?F+ae:F):ae=F,V){case 1:var re=-1;break;case 2:re=250;break;case 5:re=1073741823;break;case 4:re=1e4;break;default:re=5e3}return re=ae+re,V={id:p++,callback:he,priorityLevel:V,startTime:ae,expirationTime:re,sortIndex:-1},ae>F?(V.sortIndex=ae,e(f,V),t(d)===null&&V===t(f)&&(E?(x(Y),Y=-1):E=!0,de(w,ae-F))):(V.sortIndex=re,e(d,V),M||y||(M=!0,ue(z))),V},r.unstable_shouldYield=I,r.unstable_wrapCallback=function(V){var he=v;return function(){var ae=v;v=he;try{return V.apply(this,arguments)}finally{v=ae}}}}(yd)),yd}var rv;function Gy(){return rv||(rv=1,xd.exports=Hy()),xd.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var sv;function Wy(){if(sv)return si;sv=1;var r=tp(),e=Gy();function t(i){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+i,l=1;l<arguments.length;l++)o+="&args[]="+encodeURIComponent(arguments[l]);return"Minified React error #"+i+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var n=new Set,s={};function a(i,o){c(i,o),c(i+"Capture",o)}function c(i,o){for(s[i]=o,i=0;i<o.length;i++)n.add(o[i])}var u=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},g={};function v(i){return d.call(g,i)?!0:d.call(p,i)?!1:f.test(i)?g[i]=!0:(p[i]=!0,!1)}function y(i,o,l,h){if(l!==null&&l.type===0)return!1;switch(typeof o){case"function":case"symbol":return!0;case"boolean":return h?!1:l!==null?!l.acceptsBooleans:(i=i.toLowerCase().slice(0,5),i!=="data-"&&i!=="aria-");default:return!1}}function M(i,o,l,h){if(o===null||typeof o>"u"||y(i,o,l,h))return!0;if(h)return!1;if(l!==null)switch(l.type){case 3:return!o;case 4:return o===!1;case 5:return isNaN(o);case 6:return isNaN(o)||1>o}return!1}function E(i,o,l,h,m,_,T){this.acceptsBooleans=o===2||o===3||o===4,this.attributeName=h,this.attributeNamespace=m,this.mustUseProperty=l,this.propertyName=i,this.type=o,this.sanitizeURL=_,this.removeEmptyString=T}var S={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(i){S[i]=new E(i,0,!1,i,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(i){var o=i[0];S[o]=new E(o,1,!1,i[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(i){S[i]=new E(i,2,!1,i.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(i){S[i]=new E(i,2,!1,i,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(i){S[i]=new E(i,3,!1,i.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(i){S[i]=new E(i,3,!0,i,null,!1,!1)}),["capture","download"].forEach(function(i){S[i]=new E(i,4,!1,i,null,!1,!1)}),["cols","rows","size","span"].forEach(function(i){S[i]=new E(i,6,!1,i,null,!1,!1)}),["rowSpan","start"].forEach(function(i){S[i]=new E(i,5,!1,i.toLowerCase(),null,!1,!1)});var x=/[\-:]([a-z])/g;function L(i){return i[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(i){var o=i.replace(x,L);S[o]=new E(o,1,!1,i,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(i){var o=i.replace(x,L);S[o]=new E(o,1,!1,i,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(i){var o=i.replace(x,L);S[o]=new E(o,1,!1,i,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(i){S[i]=new E(i,1,!1,i.toLowerCase(),null,!1,!1)}),S.xlinkHref=new E("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(i){S[i]=new E(i,1,!1,i.toLowerCase(),null,!0,!0)});function R(i,o,l,h){var m=S.hasOwnProperty(o)?S[o]:null;(m!==null?m.type!==0:h||!(2<o.length)||o[0]!=="o"&&o[0]!=="O"||o[1]!=="n"&&o[1]!=="N")&&(M(o,l,m,h)&&(l=null),h||m===null?v(o)&&(l===null?i.removeAttribute(o):i.setAttribute(o,""+l)):m.mustUseProperty?i[m.propertyName]=l===null?m.type===3?!1:"":l:(o=m.attributeName,h=m.attributeNamespace,l===null?i.removeAttribute(o):(m=m.type,l=m===3||m===4&&l===!0?"":""+l,h?i.setAttributeNS(h,o,l):i.setAttribute(o,l))))}var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,z=Symbol.for("react.element"),U=Symbol.for("react.portal"),O=Symbol.for("react.fragment"),Y=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),I=Symbol.for("react.context"),se=Symbol.for("react.forward_ref"),K=Symbol.for("react.suspense"),fe=Symbol.for("react.suspense_list"),ve=Symbol.for("react.memo"),ue=Symbol.for("react.lazy"),de=Symbol.for("react.offscreen"),V=Symbol.iterator;function he(i){return i===null||typeof i!="object"?null:(i=V&&i[V]||i["@@iterator"],typeof i=="function"?i:null)}var ae=Object.assign,F;function re(i){if(F===void 0)try{throw Error()}catch(l){var o=l.stack.trim().match(/\n( *(at )?)/);F=o&&o[1]||""}return`
`+F+i}var ke=!1;function ee(i,o){if(!i||ke)return"";ke=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(te){var h=te}Reflect.construct(i,[],o)}else{try{o.call()}catch(te){h=te}i.call(o.prototype)}else{try{throw Error()}catch(te){h=te}i()}}catch(te){if(te&&h&&typeof te.stack=="string"){for(var m=te.stack.split(`
`),_=h.stack.split(`
`),T=m.length-1,D=_.length-1;1<=T&&0<=D&&m[T]!==_[D];)D--;for(;1<=T&&0<=D;T--,D--)if(m[T]!==_[D]){if(T!==1||D!==1)do if(T--,D--,0>D||m[T]!==_[D]){var k=`
`+m[T].replace(" at new "," at ");return i.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",i.displayName)),k}while(1<=T&&0<=D);break}}}finally{ke=!1,Error.prepareStackTrace=l}return(i=i?i.displayName||i.name:"")?re(i):""}function pe(i){switch(i.tag){case 5:return re(i.type);case 16:return re("Lazy");case 13:return re("Suspense");case 19:return re("SuspenseList");case 0:case 2:case 15:return i=ee(i.type,!1),i;case 11:return i=ee(i.type.render,!1),i;case 1:return i=ee(i.type,!0),i;default:return""}}function Re(i){if(i==null)return null;if(typeof i=="function")return i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case O:return"Fragment";case U:return"Portal";case P:return"Profiler";case Y:return"StrictMode";case K:return"Suspense";case fe:return"SuspenseList"}if(typeof i=="object")switch(i.$$typeof){case I:return(i.displayName||"Context")+".Consumer";case N:return(i._context.displayName||"Context")+".Provider";case se:var o=i.render;return i=i.displayName,i||(i=o.displayName||o.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case ve:return o=i.displayName||null,o!==null?o:Re(i.type)||"Memo";case ue:o=i._payload,i=i._init;try{return Re(i(o))}catch{}}return null}function Ee(i){var o=i.type;switch(i.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return i=o.render,i=i.displayName||i.name||"",o.displayName||(i!==""?"ForwardRef("+i+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Re(o);case 8:return o===Y?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function Le(i){switch(typeof i){case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function Be(i){var o=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(o==="checkbox"||o==="radio")}function rt(i){var o=Be(i)?"checked":"value",l=Object.getOwnPropertyDescriptor(i.constructor.prototype,o),h=""+i[o];if(!i.hasOwnProperty(o)&&typeof l<"u"&&typeof l.get=="function"&&typeof l.set=="function"){var m=l.get,_=l.set;return Object.defineProperty(i,o,{configurable:!0,get:function(){return m.call(this)},set:function(T){h=""+T,_.call(this,T)}}),Object.defineProperty(i,o,{enumerable:l.enumerable}),{getValue:function(){return h},setValue:function(T){h=""+T},stopTracking:function(){i._valueTracker=null,delete i[o]}}}}function Bt(i){i._valueTracker||(i._valueTracker=rt(i))}function Tt(i){if(!i)return!1;var o=i._valueTracker;if(!o)return!0;var l=o.getValue(),h="";return i&&(h=Be(i)?i.checked?"true":"false":i.value),i=h,i!==l?(o.setValue(i),!0):!1}function Gt(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}function B(i,o){var l=o.checked;return ae({},o,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:l??i._wrapperState.initialChecked})}function Bn(i,o){var l=o.defaultValue==null?"":o.defaultValue,h=o.checked!=null?o.checked:o.defaultChecked;l=Le(o.value!=null?o.value:l),i._wrapperState={initialChecked:h,initialValue:l,controlled:o.type==="checkbox"||o.type==="radio"?o.checked!=null:o.value!=null}}function Mt(i,o){o=o.checked,o!=null&&R(i,"checked",o,!1)}function xt(i,o){Mt(i,o);var l=Le(o.value),h=o.type;if(l!=null)h==="number"?(l===0&&i.value===""||i.value!=l)&&(i.value=""+l):i.value!==""+l&&(i.value=""+l);else if(h==="submit"||h==="reset"){i.removeAttribute("value");return}o.hasOwnProperty("value")?zt(i,o.type,l):o.hasOwnProperty("defaultValue")&&zt(i,o.type,Le(o.defaultValue)),o.checked==null&&o.defaultChecked!=null&&(i.defaultChecked=!!o.defaultChecked)}function Je(i,o,l){if(o.hasOwnProperty("value")||o.hasOwnProperty("defaultValue")){var h=o.type;if(!(h!=="submit"&&h!=="reset"||o.value!==void 0&&o.value!==null))return;o=""+i._wrapperState.initialValue,l||o===i.value||(i.value=o),i.defaultValue=o}l=i.name,l!==""&&(i.name=""),i.defaultChecked=!!i._wrapperState.initialChecked,l!==""&&(i.name=l)}function zt(i,o,l){(o!=="number"||Gt(i.ownerDocument)!==i)&&(l==null?i.defaultValue=""+i._wrapperState.initialValue:i.defaultValue!==""+l&&(i.defaultValue=""+l))}var Ke=Array.isArray;function b(i,o,l,h){if(i=i.options,o){o={};for(var m=0;m<l.length;m++)o["$"+l[m]]=!0;for(l=0;l<i.length;l++)m=o.hasOwnProperty("$"+i[l].value),i[l].selected!==m&&(i[l].selected=m),m&&h&&(i[l].defaultSelected=!0)}else{for(l=""+Le(l),o=null,m=0;m<i.length;m++){if(i[m].value===l){i[m].selected=!0,h&&(i[m].defaultSelected=!0);return}o!==null||i[m].disabled||(o=i[m])}o!==null&&(o.selected=!0)}}function A(i,o){if(o.dangerouslySetInnerHTML!=null)throw Error(t(91));return ae({},o,{value:void 0,defaultValue:void 0,children:""+i._wrapperState.initialValue})}function J(i,o){var l=o.value;if(l==null){if(l=o.children,o=o.defaultValue,l!=null){if(o!=null)throw Error(t(92));if(Ke(l)){if(1<l.length)throw Error(t(93));l=l[0]}o=l}o==null&&(o=""),l=o}i._wrapperState={initialValue:Le(l)}}function _e(i,o){var l=Le(o.value),h=Le(o.defaultValue);l!=null&&(l=""+l,l!==i.value&&(i.value=l),o.defaultValue==null&&i.defaultValue!==l&&(i.defaultValue=l)),h!=null&&(i.defaultValue=""+h)}function ye(i){var o=i.textContent;o===i._wrapperState.initialValue&&o!==""&&o!==null&&(i.value=o)}function me(i){switch(i){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function je(i,o){return i==null||i==="http://www.w3.org/1999/xhtml"?me(o):i==="http://www.w3.org/2000/svg"&&o==="foreignObject"?"http://www.w3.org/1999/xhtml":i}var Pe,Ve=function(i){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(o,l,h,m){MSApp.execUnsafeLocalFunction(function(){return i(o,l,h,m)})}:i}(function(i,o){if(i.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in i)i.innerHTML=o;else{for(Pe=Pe||document.createElement("div"),Pe.innerHTML="<svg>"+o.valueOf().toString()+"</svg>",o=Pe.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;o.firstChild;)i.appendChild(o.firstChild)}});function _t(i,o){if(o){var l=i.firstChild;if(l&&l===i.lastChild&&l.nodeType===3){l.nodeValue=o;return}}i.textContent=o}var Ae={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},We=["Webkit","ms","Moz","O"];Object.keys(Ae).forEach(function(i){We.forEach(function(o){o=o+i.charAt(0).toUpperCase()+i.substring(1),Ae[o]=Ae[i]})});function tt(i,o,l){return o==null||typeof o=="boolean"||o===""?"":l||typeof o!="number"||o===0||Ae.hasOwnProperty(i)&&Ae[i]?(""+o).trim():o+"px"}function ot(i,o){i=i.style;for(var l in o)if(o.hasOwnProperty(l)){var h=l.indexOf("--")===0,m=tt(l,o[l],h);l==="float"&&(l="cssFloat"),h?i.setProperty(l,m):i[l]=m}}var Xe=ae({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function yt(i,o){if(o){if(Xe[i]&&(o.children!=null||o.dangerouslySetInnerHTML!=null))throw Error(t(137,i));if(o.dangerouslySetInnerHTML!=null){if(o.children!=null)throw Error(t(60));if(typeof o.dangerouslySetInnerHTML!="object"||!("__html"in o.dangerouslySetInnerHTML))throw Error(t(61))}if(o.style!=null&&typeof o.style!="object")throw Error(t(62))}}function ut(i,o){if(i.indexOf("-")===-1)return typeof o.is=="string";switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ot=null;function X(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var be=null,oe=null,ge=null;function Oe(i){if(i=Ma(i)){if(typeof be!="function")throw Error(t(280));var o=i.stateNode;o&&(o=Hl(o),be(i.stateNode,i.type,o))}}function Ue(i){oe?ge?ge.push(i):ge=[i]:oe=i}function ht(){if(oe){var i=oe,o=ge;if(ge=oe=null,Oe(i),o)for(i=0;i<o.length;i++)Oe(o[i])}}function Xt(i,o){return i(o)}function fn(){}var Ct=!1;function Qn(i,o,l){if(Ct)return i(o,l);Ct=!0;try{return Xt(i,o,l)}finally{Ct=!1,(oe!==null||ge!==null)&&(fn(),ht())}}function Vn(i,o){var l=i.stateNode;if(l===null)return null;var h=Hl(l);if(h===null)return null;l=h[o];e:switch(o){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(h=!h.disabled)||(i=i.type,h=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!h;break e;default:i=!1}if(i)return null;if(l&&typeof l!="function")throw Error(t(231,o,typeof l));return l}var $s=!1;if(u)try{var Lr={};Object.defineProperty(Lr,"passive",{get:function(){$s=!0}}),window.addEventListener("test",Lr,Lr),window.removeEventListener("test",Lr,Lr)}catch{$s=!1}function cr(i,o,l,h,m,_,T,D,k){var te=Array.prototype.slice.call(arguments,3);try{o.apply(l,te)}catch(Se){this.onError(Se)}}var ur=!1,ds=null,fs=!1,Pr=null,Sl={onError:function(i){ur=!0,ds=i}};function Ks(i,o,l,h,m,_,T,D,k){ur=!1,ds=null,cr.apply(Sl,arguments)}function Ml(i,o,l,h,m,_,T,D,k){if(Ks.apply(this,arguments),ur){if(ur){var te=ds;ur=!1,ds=null}else throw Error(t(198));fs||(fs=!0,Pr=te)}}function Ki(i){var o=i,l=i;if(i.alternate)for(;o.return;)o=o.return;else{i=o;do o=i,o.flags&4098&&(l=o.return),i=o.return;while(i)}return o.tag===3?l:null}function El(i){if(i.tag===13){var o=i.memoizedState;if(o===null&&(i=i.alternate,i!==null&&(o=i.memoizedState)),o!==null)return o.dehydrated}return null}function Tl(i){if(Ki(i)!==i)throw Error(t(188))}function Ou(i){var o=i.alternate;if(!o){if(o=Ki(i),o===null)throw Error(t(188));return o!==i?null:i}for(var l=i,h=o;;){var m=l.return;if(m===null)break;var _=m.alternate;if(_===null){if(h=m.return,h!==null){l=h;continue}break}if(m.child===_.child){for(_=m.child;_;){if(_===l)return Tl(m),i;if(_===h)return Tl(m),o;_=_.sibling}throw Error(t(188))}if(l.return!==h.return)l=m,h=_;else{for(var T=!1,D=m.child;D;){if(D===l){T=!0,l=m,h=_;break}if(D===h){T=!0,h=m,l=_;break}D=D.sibling}if(!T){for(D=_.child;D;){if(D===l){T=!0,l=_,h=m;break}if(D===h){T=!0,h=_,l=m;break}D=D.sibling}if(!T)throw Error(t(189))}}if(l.alternate!==h)throw Error(t(190))}if(l.tag!==3)throw Error(t(188));return l.stateNode.current===l?i:o}function wl(i){return i=Ou(i),i!==null?Al(i):null}function Al(i){if(i.tag===5||i.tag===6)return i;for(i=i.child;i!==null;){var o=Al(i);if(o!==null)return o;i=i.sibling}return null}var C=e.unstable_scheduleCallback,q=e.unstable_cancelCallback,ne=e.unstable_shouldYield,ie=e.unstable_requestPaint,H=e.unstable_now,we=e.unstable_getCurrentPriorityLevel,Ie=e.unstable_ImmediatePriority,ze=e.unstable_UserBlockingPriority,He=e.unstable_NormalPriority,at=e.unstable_LowPriority,lt=e.unstable_IdlePriority,Ze=null,dt=null;function Lt(i){if(dt&&typeof dt.onCommitFiberRoot=="function")try{dt.onCommitFiberRoot(Ze,i,void 0,(i.current.flags&128)===128)}catch{}}var Pt=Math.clz32?Math.clz32:et,Zt=Math.log,At=Math.LN2;function et(i){return i>>>=0,i===0?32:31-(Zt(i)/At|0)|0}var rn=64,wt=4194304;function Rn(i){switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return i&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return i}}function Di(i,o){var l=i.pendingLanes;if(l===0)return 0;var h=0,m=i.suspendedLanes,_=i.pingedLanes,T=l&268435455;if(T!==0){var D=T&~m;D!==0?h=Rn(D):(_&=T,_!==0&&(h=Rn(_)))}else T=l&~m,T!==0?h=Rn(T):_!==0&&(h=Rn(_));if(h===0)return 0;if(o!==0&&o!==h&&!(o&m)&&(m=h&-h,_=o&-o,m>=_||m===16&&(_&4194240)!==0))return o;if(h&4&&(h|=l&16),o=i.entangledLanes,o!==0)for(i=i.entanglements,o&=h;0<o;)l=31-Pt(o),m=1<<l,h|=i[l],o&=~m;return h}function Hn(i,o){switch(i){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function ps(i,o){for(var l=i.suspendedLanes,h=i.pingedLanes,m=i.expirationTimes,_=i.pendingLanes;0<_;){var T=31-Pt(_),D=1<<T,k=m[T];k===-1?(!(D&l)||D&h)&&(m[T]=Hn(D,o)):k<=o&&(i.expiredLanes|=D),_&=~D}}function Vt(i){return i=i.pendingLanes&-1073741825,i!==0?i:i&1073741824?1073741824:0}function Gn(){var i=rn;return rn<<=1,!(rn&4194240)&&(rn=64),i}function bn(i){for(var o=[],l=0;31>l;l++)o.push(i);return o}function on(i,o,l){i.pendingLanes|=o,o!==536870912&&(i.suspendedLanes=0,i.pingedLanes=0),i=i.eventTimes,o=31-Pt(o),i[o]=l}function In(i,o){var l=i.pendingLanes&~o;i.pendingLanes=o,i.suspendedLanes=0,i.pingedLanes=0,i.expiredLanes&=o,i.mutableReadLanes&=o,i.entangledLanes&=o,o=i.entanglements;var h=i.eventTimes;for(i=i.expirationTimes;0<l;){var m=31-Pt(l),_=1<<m;o[m]=0,h[m]=-1,i[m]=-1,l&=~_}}function ms(i,o){var l=i.entangledLanes|=o;for(i=i.entanglements;l;){var h=31-Pt(l),m=1<<h;m&o|i[h]&o&&(i[h]|=o),l&=~m}}var Et=0;function Cp(i){return i&=-i,1<i?4<i?i&268435455?16:536870912:4:1}var Np,Fu,Lp,Pp,bp,zu=!1,Rl=[],br=null,Ir=null,Dr=null,oa=new Map,aa=new Map,Ur=[],rx="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ip(i,o){switch(i){case"focusin":case"focusout":br=null;break;case"dragenter":case"dragleave":Ir=null;break;case"mouseover":case"mouseout":Dr=null;break;case"pointerover":case"pointerout":oa.delete(o.pointerId);break;case"gotpointercapture":case"lostpointercapture":aa.delete(o.pointerId)}}function la(i,o,l,h,m,_){return i===null||i.nativeEvent!==_?(i={blockedOn:o,domEventName:l,eventSystemFlags:h,nativeEvent:_,targetContainers:[m]},o!==null&&(o=Ma(o),o!==null&&Fu(o)),i):(i.eventSystemFlags|=h,o=i.targetContainers,m!==null&&o.indexOf(m)===-1&&o.push(m),i)}function sx(i,o,l,h,m){switch(o){case"focusin":return br=la(br,i,o,l,h,m),!0;case"dragenter":return Ir=la(Ir,i,o,l,h,m),!0;case"mouseover":return Dr=la(Dr,i,o,l,h,m),!0;case"pointerover":var _=m.pointerId;return oa.set(_,la(oa.get(_)||null,i,o,l,h,m)),!0;case"gotpointercapture":return _=m.pointerId,aa.set(_,la(aa.get(_)||null,i,o,l,h,m)),!0}return!1}function Dp(i){var o=gs(i.target);if(o!==null){var l=Ki(o);if(l!==null){if(o=l.tag,o===13){if(o=El(l),o!==null){i.blockedOn=o,bp(i.priority,function(){Lp(l)});return}}else if(o===3&&l.stateNode.current.memoizedState.isDehydrated){i.blockedOn=l.tag===3?l.stateNode.containerInfo:null;return}}}i.blockedOn=null}function Cl(i){if(i.blockedOn!==null)return!1;for(var o=i.targetContainers;0<o.length;){var l=Bu(i.domEventName,i.eventSystemFlags,o[0],i.nativeEvent);if(l===null){l=i.nativeEvent;var h=new l.constructor(l.type,l);Ot=h,l.target.dispatchEvent(h),Ot=null}else return o=Ma(l),o!==null&&Fu(o),i.blockedOn=l,!1;o.shift()}return!0}function Up(i,o,l){Cl(i)&&l.delete(o)}function ox(){zu=!1,br!==null&&Cl(br)&&(br=null),Ir!==null&&Cl(Ir)&&(Ir=null),Dr!==null&&Cl(Dr)&&(Dr=null),oa.forEach(Up),aa.forEach(Up)}function ca(i,o){i.blockedOn===o&&(i.blockedOn=null,zu||(zu=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,ox)))}function ua(i){function o(m){return ca(m,i)}if(0<Rl.length){ca(Rl[0],i);for(var l=1;l<Rl.length;l++){var h=Rl[l];h.blockedOn===i&&(h.blockedOn=null)}}for(br!==null&&ca(br,i),Ir!==null&&ca(Ir,i),Dr!==null&&ca(Dr,i),oa.forEach(o),aa.forEach(o),l=0;l<Ur.length;l++)h=Ur[l],h.blockedOn===i&&(h.blockedOn=null);for(;0<Ur.length&&(l=Ur[0],l.blockedOn===null);)Dp(l),l.blockedOn===null&&Ur.shift()}var Zs=w.ReactCurrentBatchConfig,Nl=!0;function ax(i,o,l,h){var m=Et,_=Zs.transition;Zs.transition=null;try{Et=1,ku(i,o,l,h)}finally{Et=m,Zs.transition=_}}function lx(i,o,l,h){var m=Et,_=Zs.transition;Zs.transition=null;try{Et=4,ku(i,o,l,h)}finally{Et=m,Zs.transition=_}}function ku(i,o,l,h){if(Nl){var m=Bu(i,o,l,h);if(m===null)ih(i,o,h,Ll,l),Ip(i,h);else if(sx(m,i,o,l,h))h.stopPropagation();else if(Ip(i,h),o&4&&-1<rx.indexOf(i)){for(;m!==null;){var _=Ma(m);if(_!==null&&Np(_),_=Bu(i,o,l,h),_===null&&ih(i,o,h,Ll,l),_===m)break;m=_}m!==null&&h.stopPropagation()}else ih(i,o,h,null,l)}}var Ll=null;function Bu(i,o,l,h){if(Ll=null,i=X(h),i=gs(i),i!==null)if(o=Ki(i),o===null)i=null;else if(l=o.tag,l===13){if(i=El(o),i!==null)return i;i=null}else if(l===3){if(o.stateNode.current.memoizedState.isDehydrated)return o.tag===3?o.stateNode.containerInfo:null;i=null}else o!==i&&(i=null);return Ll=i,null}function Op(i){switch(i){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(we()){case Ie:return 1;case ze:return 4;case He:case at:return 16;case lt:return 536870912;default:return 16}default:return 16}}var Or=null,Vu=null,Pl=null;function Fp(){if(Pl)return Pl;var i,o=Vu,l=o.length,h,m="value"in Or?Or.value:Or.textContent,_=m.length;for(i=0;i<l&&o[i]===m[i];i++);var T=l-i;for(h=1;h<=T&&o[l-h]===m[_-h];h++);return Pl=m.slice(i,1<h?1-h:void 0)}function bl(i){var o=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&o===13&&(i=13)):i=o,i===10&&(i=13),32<=i||i===13?i:0}function Il(){return!0}function zp(){return!1}function fi(i){function o(l,h,m,_,T){this._reactName=l,this._targetInst=m,this.type=h,this.nativeEvent=_,this.target=T,this.currentTarget=null;for(var D in i)i.hasOwnProperty(D)&&(l=i[D],this[D]=l?l(_):_[D]);return this.isDefaultPrevented=(_.defaultPrevented!=null?_.defaultPrevented:_.returnValue===!1)?Il:zp,this.isPropagationStopped=zp,this}return ae(o.prototype,{preventDefault:function(){this.defaultPrevented=!0;var l=this.nativeEvent;l&&(l.preventDefault?l.preventDefault():typeof l.returnValue!="unknown"&&(l.returnValue=!1),this.isDefaultPrevented=Il)},stopPropagation:function(){var l=this.nativeEvent;l&&(l.stopPropagation?l.stopPropagation():typeof l.cancelBubble!="unknown"&&(l.cancelBubble=!0),this.isPropagationStopped=Il)},persist:function(){},isPersistent:Il}),o}var Js={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Hu=fi(Js),ha=ae({},Js,{view:0,detail:0}),cx=fi(ha),Gu,Wu,da,Dl=ae({},ha,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Yu,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==da&&(da&&i.type==="mousemove"?(Gu=i.screenX-da.screenX,Wu=i.screenY-da.screenY):Wu=Gu=0,da=i),Gu)},movementY:function(i){return"movementY"in i?i.movementY:Wu}}),kp=fi(Dl),ux=ae({},Dl,{dataTransfer:0}),hx=fi(ux),dx=ae({},ha,{relatedTarget:0}),Xu=fi(dx),fx=ae({},Js,{animationName:0,elapsedTime:0,pseudoElement:0}),px=fi(fx),mx=ae({},Js,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),gx=fi(mx),vx=ae({},Js,{data:0}),Bp=fi(vx),_x={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xx={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},yx={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sx(i){var o=this.nativeEvent;return o.getModifierState?o.getModifierState(i):(i=yx[i])?!!o[i]:!1}function Yu(){return Sx}var Mx=ae({},ha,{key:function(i){if(i.key){var o=_x[i.key]||i.key;if(o!=="Unidentified")return o}return i.type==="keypress"?(i=bl(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?xx[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Yu,charCode:function(i){return i.type==="keypress"?bl(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?bl(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),Ex=fi(Mx),Tx=ae({},Dl,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Vp=fi(Tx),wx=ae({},ha,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Yu}),Ax=fi(wx),Rx=ae({},Js,{propertyName:0,elapsedTime:0,pseudoElement:0}),Cx=fi(Rx),Nx=ae({},Dl,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),Lx=fi(Nx),Px=[9,13,27,32],qu=u&&"CompositionEvent"in window,fa=null;u&&"documentMode"in document&&(fa=document.documentMode);var bx=u&&"TextEvent"in window&&!fa,Hp=u&&(!qu||fa&&8<fa&&11>=fa),Gp=" ",Wp=!1;function Xp(i,o){switch(i){case"keyup":return Px.indexOf(o.keyCode)!==-1;case"keydown":return o.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Yp(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var Qs=!1;function Ix(i,o){switch(i){case"compositionend":return Yp(o);case"keypress":return o.which!==32?null:(Wp=!0,Gp);case"textInput":return i=o.data,i===Gp&&Wp?null:i;default:return null}}function Dx(i,o){if(Qs)return i==="compositionend"||!qu&&Xp(i,o)?(i=Fp(),Pl=Vu=Or=null,Qs=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(o.ctrlKey||o.altKey||o.metaKey)||o.ctrlKey&&o.altKey){if(o.char&&1<o.char.length)return o.char;if(o.which)return String.fromCharCode(o.which)}return null;case"compositionend":return Hp&&o.locale!=="ko"?null:o.data;default:return null}}var Ux={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qp(i){var o=i&&i.nodeName&&i.nodeName.toLowerCase();return o==="input"?!!Ux[i.type]:o==="textarea"}function jp(i,o,l,h){Ue(h),o=kl(o,"onChange"),0<o.length&&(l=new Hu("onChange","change",null,l,h),i.push({event:l,listeners:o}))}var pa=null,ma=null;function Ox(i){dm(i,0)}function Ul(i){var o=ro(i);if(Tt(o))return i}function Fx(i,o){if(i==="change")return o}var $p=!1;if(u){var ju;if(u){var $u="oninput"in document;if(!$u){var Kp=document.createElement("div");Kp.setAttribute("oninput","return;"),$u=typeof Kp.oninput=="function"}ju=$u}else ju=!1;$p=ju&&(!document.documentMode||9<document.documentMode)}function Zp(){pa&&(pa.detachEvent("onpropertychange",Jp),ma=pa=null)}function Jp(i){if(i.propertyName==="value"&&Ul(ma)){var o=[];jp(o,ma,i,X(i)),Qn(Ox,o)}}function zx(i,o,l){i==="focusin"?(Zp(),pa=o,ma=l,pa.attachEvent("onpropertychange",Jp)):i==="focusout"&&Zp()}function kx(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return Ul(ma)}function Bx(i,o){if(i==="click")return Ul(o)}function Vx(i,o){if(i==="input"||i==="change")return Ul(o)}function Hx(i,o){return i===o&&(i!==0||1/i===1/o)||i!==i&&o!==o}var Ui=typeof Object.is=="function"?Object.is:Hx;function ga(i,o){if(Ui(i,o))return!0;if(typeof i!="object"||i===null||typeof o!="object"||o===null)return!1;var l=Object.keys(i),h=Object.keys(o);if(l.length!==h.length)return!1;for(h=0;h<l.length;h++){var m=l[h];if(!d.call(o,m)||!Ui(i[m],o[m]))return!1}return!0}function Qp(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function em(i,o){var l=Qp(i);i=0;for(var h;l;){if(l.nodeType===3){if(h=i+l.textContent.length,i<=o&&h>=o)return{node:l,offset:o-i};i=h}e:{for(;l;){if(l.nextSibling){l=l.nextSibling;break e}l=l.parentNode}l=void 0}l=Qp(l)}}function tm(i,o){return i&&o?i===o?!0:i&&i.nodeType===3?!1:o&&o.nodeType===3?tm(i,o.parentNode):"contains"in i?i.contains(o):i.compareDocumentPosition?!!(i.compareDocumentPosition(o)&16):!1:!1}function nm(){for(var i=window,o=Gt();o instanceof i.HTMLIFrameElement;){try{var l=typeof o.contentWindow.location.href=="string"}catch{l=!1}if(l)i=o.contentWindow;else break;o=Gt(i.document)}return o}function Ku(i){var o=i&&i.nodeName&&i.nodeName.toLowerCase();return o&&(o==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||o==="textarea"||i.contentEditable==="true")}function Gx(i){var o=nm(),l=i.focusedElem,h=i.selectionRange;if(o!==l&&l&&l.ownerDocument&&tm(l.ownerDocument.documentElement,l)){if(h!==null&&Ku(l)){if(o=h.start,i=h.end,i===void 0&&(i=o),"selectionStart"in l)l.selectionStart=o,l.selectionEnd=Math.min(i,l.value.length);else if(i=(o=l.ownerDocument||document)&&o.defaultView||window,i.getSelection){i=i.getSelection();var m=l.textContent.length,_=Math.min(h.start,m);h=h.end===void 0?_:Math.min(h.end,m),!i.extend&&_>h&&(m=h,h=_,_=m),m=em(l,_);var T=em(l,h);m&&T&&(i.rangeCount!==1||i.anchorNode!==m.node||i.anchorOffset!==m.offset||i.focusNode!==T.node||i.focusOffset!==T.offset)&&(o=o.createRange(),o.setStart(m.node,m.offset),i.removeAllRanges(),_>h?(i.addRange(o),i.extend(T.node,T.offset)):(o.setEnd(T.node,T.offset),i.addRange(o)))}}for(o=[],i=l;i=i.parentNode;)i.nodeType===1&&o.push({element:i,left:i.scrollLeft,top:i.scrollTop});for(typeof l.focus=="function"&&l.focus(),l=0;l<o.length;l++)i=o[l],i.element.scrollLeft=i.left,i.element.scrollTop=i.top}}var Wx=u&&"documentMode"in document&&11>=document.documentMode,eo=null,Zu=null,va=null,Ju=!1;function im(i,o,l){var h=l.window===l?l.document:l.nodeType===9?l:l.ownerDocument;Ju||eo==null||eo!==Gt(h)||(h=eo,"selectionStart"in h&&Ku(h)?h={start:h.selectionStart,end:h.selectionEnd}:(h=(h.ownerDocument&&h.ownerDocument.defaultView||window).getSelection(),h={anchorNode:h.anchorNode,anchorOffset:h.anchorOffset,focusNode:h.focusNode,focusOffset:h.focusOffset}),va&&ga(va,h)||(va=h,h=kl(Zu,"onSelect"),0<h.length&&(o=new Hu("onSelect","select",null,o,l),i.push({event:o,listeners:h}),o.target=eo)))}function Ol(i,o){var l={};return l[i.toLowerCase()]=o.toLowerCase(),l["Webkit"+i]="webkit"+o,l["Moz"+i]="moz"+o,l}var to={animationend:Ol("Animation","AnimationEnd"),animationiteration:Ol("Animation","AnimationIteration"),animationstart:Ol("Animation","AnimationStart"),transitionend:Ol("Transition","TransitionEnd")},Qu={},rm={};u&&(rm=document.createElement("div").style,"AnimationEvent"in window||(delete to.animationend.animation,delete to.animationiteration.animation,delete to.animationstart.animation),"TransitionEvent"in window||delete to.transitionend.transition);function Fl(i){if(Qu[i])return Qu[i];if(!to[i])return i;var o=to[i],l;for(l in o)if(o.hasOwnProperty(l)&&l in rm)return Qu[i]=o[l];return i}var sm=Fl("animationend"),om=Fl("animationiteration"),am=Fl("animationstart"),lm=Fl("transitionend"),cm=new Map,um="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fr(i,o){cm.set(i,o),a(o,[i])}for(var eh=0;eh<um.length;eh++){var th=um[eh],Xx=th.toLowerCase(),Yx=th[0].toUpperCase()+th.slice(1);Fr(Xx,"on"+Yx)}Fr(sm,"onAnimationEnd"),Fr(om,"onAnimationIteration"),Fr(am,"onAnimationStart"),Fr("dblclick","onDoubleClick"),Fr("focusin","onFocus"),Fr("focusout","onBlur"),Fr(lm,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),a("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),a("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),a("onBeforeInput",["compositionend","keypress","textInput","paste"]),a("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _a="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),qx=new Set("cancel close invalid load scroll toggle".split(" ").concat(_a));function hm(i,o,l){var h=i.type||"unknown-event";i.currentTarget=l,Ml(h,o,void 0,i),i.currentTarget=null}function dm(i,o){o=(o&4)!==0;for(var l=0;l<i.length;l++){var h=i[l],m=h.event;h=h.listeners;e:{var _=void 0;if(o)for(var T=h.length-1;0<=T;T--){var D=h[T],k=D.instance,te=D.currentTarget;if(D=D.listener,k!==_&&m.isPropagationStopped())break e;hm(m,D,te),_=k}else for(T=0;T<h.length;T++){if(D=h[T],k=D.instance,te=D.currentTarget,D=D.listener,k!==_&&m.isPropagationStopped())break e;hm(m,D,te),_=k}}}if(fs)throw i=Pr,fs=!1,Pr=null,i}function Yt(i,o){var l=o[ch];l===void 0&&(l=o[ch]=new Set);var h=i+"__bubble";l.has(h)||(fm(o,i,2,!1),l.add(h))}function nh(i,o,l){var h=0;o&&(h|=4),fm(l,i,h,o)}var zl="_reactListening"+Math.random().toString(36).slice(2);function xa(i){if(!i[zl]){i[zl]=!0,n.forEach(function(l){l!=="selectionchange"&&(qx.has(l)||nh(l,!1,i),nh(l,!0,i))});var o=i.nodeType===9?i:i.ownerDocument;o===null||o[zl]||(o[zl]=!0,nh("selectionchange",!1,o))}}function fm(i,o,l,h){switch(Op(o)){case 1:var m=ax;break;case 4:m=lx;break;default:m=ku}l=m.bind(null,o,l,i),m=void 0,!$s||o!=="touchstart"&&o!=="touchmove"&&o!=="wheel"||(m=!0),h?m!==void 0?i.addEventListener(o,l,{capture:!0,passive:m}):i.addEventListener(o,l,!0):m!==void 0?i.addEventListener(o,l,{passive:m}):i.addEventListener(o,l,!1)}function ih(i,o,l,h,m){var _=h;if(!(o&1)&&!(o&2)&&h!==null)e:for(;;){if(h===null)return;var T=h.tag;if(T===3||T===4){var D=h.stateNode.containerInfo;if(D===m||D.nodeType===8&&D.parentNode===m)break;if(T===4)for(T=h.return;T!==null;){var k=T.tag;if((k===3||k===4)&&(k=T.stateNode.containerInfo,k===m||k.nodeType===8&&k.parentNode===m))return;T=T.return}for(;D!==null;){if(T=gs(D),T===null)return;if(k=T.tag,k===5||k===6){h=_=T;continue e}D=D.parentNode}}h=h.return}Qn(function(){var te=_,Se=X(l),Te=[];e:{var xe=cm.get(i);if(xe!==void 0){var Fe=Hu,Ye=i;switch(i){case"keypress":if(bl(l)===0)break e;case"keydown":case"keyup":Fe=Ex;break;case"focusin":Ye="focus",Fe=Xu;break;case"focusout":Ye="blur",Fe=Xu;break;case"beforeblur":case"afterblur":Fe=Xu;break;case"click":if(l.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Fe=kp;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Fe=hx;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Fe=Ax;break;case sm:case om:case am:Fe=px;break;case lm:Fe=Cx;break;case"scroll":Fe=cx;break;case"wheel":Fe=Lx;break;case"copy":case"cut":case"paste":Fe=gx;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Fe=Vp}var qe=(o&4)!==0,an=!qe&&i==="scroll",$=qe?xe!==null?xe+"Capture":null:xe;qe=[];for(var G=te,Z;G!==null;){Z=G;var Ce=Z.stateNode;if(Z.tag===5&&Ce!==null&&(Z=Ce,$!==null&&(Ce=Vn(G,$),Ce!=null&&qe.push(ya(G,Ce,Z)))),an)break;G=G.return}0<qe.length&&(xe=new Fe(xe,Ye,null,l,Se),Te.push({event:xe,listeners:qe}))}}if(!(o&7)){e:{if(xe=i==="mouseover"||i==="pointerover",Fe=i==="mouseout"||i==="pointerout",xe&&l!==Ot&&(Ye=l.relatedTarget||l.fromElement)&&(gs(Ye)||Ye[hr]))break e;if((Fe||xe)&&(xe=Se.window===Se?Se:(xe=Se.ownerDocument)?xe.defaultView||xe.parentWindow:window,Fe?(Ye=l.relatedTarget||l.toElement,Fe=te,Ye=Ye?gs(Ye):null,Ye!==null&&(an=Ki(Ye),Ye!==an||Ye.tag!==5&&Ye.tag!==6)&&(Ye=null)):(Fe=null,Ye=te),Fe!==Ye)){if(qe=kp,Ce="onMouseLeave",$="onMouseEnter",G="mouse",(i==="pointerout"||i==="pointerover")&&(qe=Vp,Ce="onPointerLeave",$="onPointerEnter",G="pointer"),an=Fe==null?xe:ro(Fe),Z=Ye==null?xe:ro(Ye),xe=new qe(Ce,G+"leave",Fe,l,Se),xe.target=an,xe.relatedTarget=Z,Ce=null,gs(Se)===te&&(qe=new qe($,G+"enter",Ye,l,Se),qe.target=Z,qe.relatedTarget=an,Ce=qe),an=Ce,Fe&&Ye)t:{for(qe=Fe,$=Ye,G=0,Z=qe;Z;Z=no(Z))G++;for(Z=0,Ce=$;Ce;Ce=no(Ce))Z++;for(;0<G-Z;)qe=no(qe),G--;for(;0<Z-G;)$=no($),Z--;for(;G--;){if(qe===$||$!==null&&qe===$.alternate)break t;qe=no(qe),$=no($)}qe=null}else qe=null;Fe!==null&&pm(Te,xe,Fe,qe,!1),Ye!==null&&an!==null&&pm(Te,an,Ye,qe,!0)}}e:{if(xe=te?ro(te):window,Fe=xe.nodeName&&xe.nodeName.toLowerCase(),Fe==="select"||Fe==="input"&&xe.type==="file")var $e=Fx;else if(qp(xe))if($p)$e=Vx;else{$e=kx;var nt=zx}else(Fe=xe.nodeName)&&Fe.toLowerCase()==="input"&&(xe.type==="checkbox"||xe.type==="radio")&&($e=Bx);if($e&&($e=$e(i,te))){jp(Te,$e,l,Se);break e}nt&&nt(i,xe,te),i==="focusout"&&(nt=xe._wrapperState)&&nt.controlled&&xe.type==="number"&&zt(xe,"number",xe.value)}switch(nt=te?ro(te):window,i){case"focusin":(qp(nt)||nt.contentEditable==="true")&&(eo=nt,Zu=te,va=null);break;case"focusout":va=Zu=eo=null;break;case"mousedown":Ju=!0;break;case"contextmenu":case"mouseup":case"dragend":Ju=!1,im(Te,l,Se);break;case"selectionchange":if(Wx)break;case"keydown":case"keyup":im(Te,l,Se)}var it;if(qu)e:{switch(i){case"compositionstart":var ct="onCompositionStart";break e;case"compositionend":ct="onCompositionEnd";break e;case"compositionupdate":ct="onCompositionUpdate";break e}ct=void 0}else Qs?Xp(i,l)&&(ct="onCompositionEnd"):i==="keydown"&&l.keyCode===229&&(ct="onCompositionStart");ct&&(Hp&&l.locale!=="ko"&&(Qs||ct!=="onCompositionStart"?ct==="onCompositionEnd"&&Qs&&(it=Fp()):(Or=Se,Vu="value"in Or?Or.value:Or.textContent,Qs=!0)),nt=kl(te,ct),0<nt.length&&(ct=new Bp(ct,i,null,l,Se),Te.push({event:ct,listeners:nt}),it?ct.data=it:(it=Yp(l),it!==null&&(ct.data=it)))),(it=bx?Ix(i,l):Dx(i,l))&&(te=kl(te,"onBeforeInput"),0<te.length&&(Se=new Bp("onBeforeInput","beforeinput",null,l,Se),Te.push({event:Se,listeners:te}),Se.data=it))}dm(Te,o)})}function ya(i,o,l){return{instance:i,listener:o,currentTarget:l}}function kl(i,o){for(var l=o+"Capture",h=[];i!==null;){var m=i,_=m.stateNode;m.tag===5&&_!==null&&(m=_,_=Vn(i,l),_!=null&&h.unshift(ya(i,_,m)),_=Vn(i,o),_!=null&&h.push(ya(i,_,m))),i=i.return}return h}function no(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5);return i||null}function pm(i,o,l,h,m){for(var _=o._reactName,T=[];l!==null&&l!==h;){var D=l,k=D.alternate,te=D.stateNode;if(k!==null&&k===h)break;D.tag===5&&te!==null&&(D=te,m?(k=Vn(l,_),k!=null&&T.unshift(ya(l,k,D))):m||(k=Vn(l,_),k!=null&&T.push(ya(l,k,D)))),l=l.return}T.length!==0&&i.push({event:o,listeners:T})}var jx=/\r\n?/g,$x=/\u0000|\uFFFD/g;function mm(i){return(typeof i=="string"?i:""+i).replace(jx,`
`).replace($x,"")}function Bl(i,o,l){if(o=mm(o),mm(i)!==o&&l)throw Error(t(425))}function Vl(){}var rh=null,sh=null;function oh(i,o){return i==="textarea"||i==="noscript"||typeof o.children=="string"||typeof o.children=="number"||typeof o.dangerouslySetInnerHTML=="object"&&o.dangerouslySetInnerHTML!==null&&o.dangerouslySetInnerHTML.__html!=null}var ah=typeof setTimeout=="function"?setTimeout:void 0,Kx=typeof clearTimeout=="function"?clearTimeout:void 0,gm=typeof Promise=="function"?Promise:void 0,Zx=typeof queueMicrotask=="function"?queueMicrotask:typeof gm<"u"?function(i){return gm.resolve(null).then(i).catch(Jx)}:ah;function Jx(i){setTimeout(function(){throw i})}function lh(i,o){var l=o,h=0;do{var m=l.nextSibling;if(i.removeChild(l),m&&m.nodeType===8)if(l=m.data,l==="/$"){if(h===0){i.removeChild(m),ua(o);return}h--}else l!=="$"&&l!=="$?"&&l!=="$!"||h++;l=m}while(l);ua(o)}function zr(i){for(;i!=null;i=i.nextSibling){var o=i.nodeType;if(o===1||o===3)break;if(o===8){if(o=i.data,o==="$"||o==="$!"||o==="$?")break;if(o==="/$")return null}}return i}function vm(i){i=i.previousSibling;for(var o=0;i;){if(i.nodeType===8){var l=i.data;if(l==="$"||l==="$!"||l==="$?"){if(o===0)return i;o--}else l==="/$"&&o++}i=i.previousSibling}return null}var io=Math.random().toString(36).slice(2),Zi="__reactFiber$"+io,Sa="__reactProps$"+io,hr="__reactContainer$"+io,ch="__reactEvents$"+io,Qx="__reactListeners$"+io,ey="__reactHandles$"+io;function gs(i){var o=i[Zi];if(o)return o;for(var l=i.parentNode;l;){if(o=l[hr]||l[Zi]){if(l=o.alternate,o.child!==null||l!==null&&l.child!==null)for(i=vm(i);i!==null;){if(l=i[Zi])return l;i=vm(i)}return o}i=l,l=i.parentNode}return null}function Ma(i){return i=i[Zi]||i[hr],!i||i.tag!==5&&i.tag!==6&&i.tag!==13&&i.tag!==3?null:i}function ro(i){if(i.tag===5||i.tag===6)return i.stateNode;throw Error(t(33))}function Hl(i){return i[Sa]||null}var uh=[],so=-1;function kr(i){return{current:i}}function qt(i){0>so||(i.current=uh[so],uh[so]=null,so--)}function Wt(i,o){so++,uh[so]=i.current,i.current=o}var Br={},Dn=kr(Br),ei=kr(!1),vs=Br;function oo(i,o){var l=i.type.contextTypes;if(!l)return Br;var h=i.stateNode;if(h&&h.__reactInternalMemoizedUnmaskedChildContext===o)return h.__reactInternalMemoizedMaskedChildContext;var m={},_;for(_ in l)m[_]=o[_];return h&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=o,i.__reactInternalMemoizedMaskedChildContext=m),m}function ti(i){return i=i.childContextTypes,i!=null}function Gl(){qt(ei),qt(Dn)}function _m(i,o,l){if(Dn.current!==Br)throw Error(t(168));Wt(Dn,o),Wt(ei,l)}function xm(i,o,l){var h=i.stateNode;if(o=o.childContextTypes,typeof h.getChildContext!="function")return l;h=h.getChildContext();for(var m in h)if(!(m in o))throw Error(t(108,Ee(i)||"Unknown",m));return ae({},l,h)}function Wl(i){return i=(i=i.stateNode)&&i.__reactInternalMemoizedMergedChildContext||Br,vs=Dn.current,Wt(Dn,i),Wt(ei,ei.current),!0}function ym(i,o,l){var h=i.stateNode;if(!h)throw Error(t(169));l?(i=xm(i,o,vs),h.__reactInternalMemoizedMergedChildContext=i,qt(ei),qt(Dn),Wt(Dn,i)):qt(ei),Wt(ei,l)}var dr=null,Xl=!1,hh=!1;function Sm(i){dr===null?dr=[i]:dr.push(i)}function ty(i){Xl=!0,Sm(i)}function Vr(){if(!hh&&dr!==null){hh=!0;var i=0,o=Et;try{var l=dr;for(Et=1;i<l.length;i++){var h=l[i];do h=h(!0);while(h!==null)}dr=null,Xl=!1}catch(m){throw dr!==null&&(dr=dr.slice(i+1)),C(Ie,Vr),m}finally{Et=o,hh=!1}}return null}var ao=[],lo=0,Yl=null,ql=0,Ei=[],Ti=0,_s=null,fr=1,pr="";function xs(i,o){ao[lo++]=ql,ao[lo++]=Yl,Yl=i,ql=o}function Mm(i,o,l){Ei[Ti++]=fr,Ei[Ti++]=pr,Ei[Ti++]=_s,_s=i;var h=fr;i=pr;var m=32-Pt(h)-1;h&=~(1<<m),l+=1;var _=32-Pt(o)+m;if(30<_){var T=m-m%5;_=(h&(1<<T)-1).toString(32),h>>=T,m-=T,fr=1<<32-Pt(o)+m|l<<m|h,pr=_+i}else fr=1<<_|l<<m|h,pr=i}function dh(i){i.return!==null&&(xs(i,1),Mm(i,1,0))}function fh(i){for(;i===Yl;)Yl=ao[--lo],ao[lo]=null,ql=ao[--lo],ao[lo]=null;for(;i===_s;)_s=Ei[--Ti],Ei[Ti]=null,pr=Ei[--Ti],Ei[Ti]=null,fr=Ei[--Ti],Ei[Ti]=null}var pi=null,mi=null,Jt=!1,Oi=null;function Em(i,o){var l=Ci(5,null,null,0);l.elementType="DELETED",l.stateNode=o,l.return=i,o=i.deletions,o===null?(i.deletions=[l],i.flags|=16):o.push(l)}function Tm(i,o){switch(i.tag){case 5:var l=i.type;return o=o.nodeType!==1||l.toLowerCase()!==o.nodeName.toLowerCase()?null:o,o!==null?(i.stateNode=o,pi=i,mi=zr(o.firstChild),!0):!1;case 6:return o=i.pendingProps===""||o.nodeType!==3?null:o,o!==null?(i.stateNode=o,pi=i,mi=null,!0):!1;case 13:return o=o.nodeType!==8?null:o,o!==null?(l=_s!==null?{id:fr,overflow:pr}:null,i.memoizedState={dehydrated:o,treeContext:l,retryLane:1073741824},l=Ci(18,null,null,0),l.stateNode=o,l.return=i,i.child=l,pi=i,mi=null,!0):!1;default:return!1}}function ph(i){return(i.mode&1)!==0&&(i.flags&128)===0}function mh(i){if(Jt){var o=mi;if(o){var l=o;if(!Tm(i,o)){if(ph(i))throw Error(t(418));o=zr(l.nextSibling);var h=pi;o&&Tm(i,o)?Em(h,l):(i.flags=i.flags&-4097|2,Jt=!1,pi=i)}}else{if(ph(i))throw Error(t(418));i.flags=i.flags&-4097|2,Jt=!1,pi=i}}}function wm(i){for(i=i.return;i!==null&&i.tag!==5&&i.tag!==3&&i.tag!==13;)i=i.return;pi=i}function jl(i){if(i!==pi)return!1;if(!Jt)return wm(i),Jt=!0,!1;var o;if((o=i.tag!==3)&&!(o=i.tag!==5)&&(o=i.type,o=o!=="head"&&o!=="body"&&!oh(i.type,i.memoizedProps)),o&&(o=mi)){if(ph(i))throw Am(),Error(t(418));for(;o;)Em(i,o),o=zr(o.nextSibling)}if(wm(i),i.tag===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(t(317));e:{for(i=i.nextSibling,o=0;i;){if(i.nodeType===8){var l=i.data;if(l==="/$"){if(o===0){mi=zr(i.nextSibling);break e}o--}else l!=="$"&&l!=="$!"&&l!=="$?"||o++}i=i.nextSibling}mi=null}}else mi=pi?zr(i.stateNode.nextSibling):null;return!0}function Am(){for(var i=mi;i;)i=zr(i.nextSibling)}function co(){mi=pi=null,Jt=!1}function gh(i){Oi===null?Oi=[i]:Oi.push(i)}var ny=w.ReactCurrentBatchConfig;function Ea(i,o,l){if(i=l.ref,i!==null&&typeof i!="function"&&typeof i!="object"){if(l._owner){if(l=l._owner,l){if(l.tag!==1)throw Error(t(309));var h=l.stateNode}if(!h)throw Error(t(147,i));var m=h,_=""+i;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===_?o.ref:(o=function(T){var D=m.refs;T===null?delete D[_]:D[_]=T},o._stringRef=_,o)}if(typeof i!="string")throw Error(t(284));if(!l._owner)throw Error(t(290,i))}return i}function $l(i,o){throw i=Object.prototype.toString.call(o),Error(t(31,i==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":i))}function Rm(i){var o=i._init;return o(i._payload)}function Cm(i){function o($,G){if(i){var Z=$.deletions;Z===null?($.deletions=[G],$.flags|=16):Z.push(G)}}function l($,G){if(!i)return null;for(;G!==null;)o($,G),G=G.sibling;return null}function h($,G){for($=new Map;G!==null;)G.key!==null?$.set(G.key,G):$.set(G.index,G),G=G.sibling;return $}function m($,G){return $=$r($,G),$.index=0,$.sibling=null,$}function _($,G,Z){return $.index=Z,i?(Z=$.alternate,Z!==null?(Z=Z.index,Z<G?($.flags|=2,G):Z):($.flags|=2,G)):($.flags|=1048576,G)}function T($){return i&&$.alternate===null&&($.flags|=2),$}function D($,G,Z,Ce){return G===null||G.tag!==6?(G=ad(Z,$.mode,Ce),G.return=$,G):(G=m(G,Z),G.return=$,G)}function k($,G,Z,Ce){var $e=Z.type;return $e===O?Se($,G,Z.props.children,Ce,Z.key):G!==null&&(G.elementType===$e||typeof $e=="object"&&$e!==null&&$e.$$typeof===ue&&Rm($e)===G.type)?(Ce=m(G,Z.props),Ce.ref=Ea($,G,Z),Ce.return=$,Ce):(Ce=xc(Z.type,Z.key,Z.props,null,$.mode,Ce),Ce.ref=Ea($,G,Z),Ce.return=$,Ce)}function te($,G,Z,Ce){return G===null||G.tag!==4||G.stateNode.containerInfo!==Z.containerInfo||G.stateNode.implementation!==Z.implementation?(G=ld(Z,$.mode,Ce),G.return=$,G):(G=m(G,Z.children||[]),G.return=$,G)}function Se($,G,Z,Ce,$e){return G===null||G.tag!==7?(G=Rs(Z,$.mode,Ce,$e),G.return=$,G):(G=m(G,Z),G.return=$,G)}function Te($,G,Z){if(typeof G=="string"&&G!==""||typeof G=="number")return G=ad(""+G,$.mode,Z),G.return=$,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case z:return Z=xc(G.type,G.key,G.props,null,$.mode,Z),Z.ref=Ea($,null,G),Z.return=$,Z;case U:return G=ld(G,$.mode,Z),G.return=$,G;case ue:var Ce=G._init;return Te($,Ce(G._payload),Z)}if(Ke(G)||he(G))return G=Rs(G,$.mode,Z,null),G.return=$,G;$l($,G)}return null}function xe($,G,Z,Ce){var $e=G!==null?G.key:null;if(typeof Z=="string"&&Z!==""||typeof Z=="number")return $e!==null?null:D($,G,""+Z,Ce);if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case z:return Z.key===$e?k($,G,Z,Ce):null;case U:return Z.key===$e?te($,G,Z,Ce):null;case ue:return $e=Z._init,xe($,G,$e(Z._payload),Ce)}if(Ke(Z)||he(Z))return $e!==null?null:Se($,G,Z,Ce,null);$l($,Z)}return null}function Fe($,G,Z,Ce,$e){if(typeof Ce=="string"&&Ce!==""||typeof Ce=="number")return $=$.get(Z)||null,D(G,$,""+Ce,$e);if(typeof Ce=="object"&&Ce!==null){switch(Ce.$$typeof){case z:return $=$.get(Ce.key===null?Z:Ce.key)||null,k(G,$,Ce,$e);case U:return $=$.get(Ce.key===null?Z:Ce.key)||null,te(G,$,Ce,$e);case ue:var nt=Ce._init;return Fe($,G,Z,nt(Ce._payload),$e)}if(Ke(Ce)||he(Ce))return $=$.get(Z)||null,Se(G,$,Ce,$e,null);$l(G,Ce)}return null}function Ye($,G,Z,Ce){for(var $e=null,nt=null,it=G,ct=G=0,Tn=null;it!==null&&ct<Z.length;ct++){it.index>ct?(Tn=it,it=null):Tn=it.sibling;var bt=xe($,it,Z[ct],Ce);if(bt===null){it===null&&(it=Tn);break}i&&it&&bt.alternate===null&&o($,it),G=_(bt,G,ct),nt===null?$e=bt:nt.sibling=bt,nt=bt,it=Tn}if(ct===Z.length)return l($,it),Jt&&xs($,ct),$e;if(it===null){for(;ct<Z.length;ct++)it=Te($,Z[ct],Ce),it!==null&&(G=_(it,G,ct),nt===null?$e=it:nt.sibling=it,nt=it);return Jt&&xs($,ct),$e}for(it=h($,it);ct<Z.length;ct++)Tn=Fe(it,$,ct,Z[ct],Ce),Tn!==null&&(i&&Tn.alternate!==null&&it.delete(Tn.key===null?ct:Tn.key),G=_(Tn,G,ct),nt===null?$e=Tn:nt.sibling=Tn,nt=Tn);return i&&it.forEach(function(Kr){return o($,Kr)}),Jt&&xs($,ct),$e}function qe($,G,Z,Ce){var $e=he(Z);if(typeof $e!="function")throw Error(t(150));if(Z=$e.call(Z),Z==null)throw Error(t(151));for(var nt=$e=null,it=G,ct=G=0,Tn=null,bt=Z.next();it!==null&&!bt.done;ct++,bt=Z.next()){it.index>ct?(Tn=it,it=null):Tn=it.sibling;var Kr=xe($,it,bt.value,Ce);if(Kr===null){it===null&&(it=Tn);break}i&&it&&Kr.alternate===null&&o($,it),G=_(Kr,G,ct),nt===null?$e=Kr:nt.sibling=Kr,nt=Kr,it=Tn}if(bt.done)return l($,it),Jt&&xs($,ct),$e;if(it===null){for(;!bt.done;ct++,bt=Z.next())bt=Te($,bt.value,Ce),bt!==null&&(G=_(bt,G,ct),nt===null?$e=bt:nt.sibling=bt,nt=bt);return Jt&&xs($,ct),$e}for(it=h($,it);!bt.done;ct++,bt=Z.next())bt=Fe(it,$,ct,bt.value,Ce),bt!==null&&(i&&bt.alternate!==null&&it.delete(bt.key===null?ct:bt.key),G=_(bt,G,ct),nt===null?$e=bt:nt.sibling=bt,nt=bt);return i&&it.forEach(function(Uy){return o($,Uy)}),Jt&&xs($,ct),$e}function an($,G,Z,Ce){if(typeof Z=="object"&&Z!==null&&Z.type===O&&Z.key===null&&(Z=Z.props.children),typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case z:e:{for(var $e=Z.key,nt=G;nt!==null;){if(nt.key===$e){if($e=Z.type,$e===O){if(nt.tag===7){l($,nt.sibling),G=m(nt,Z.props.children),G.return=$,$=G;break e}}else if(nt.elementType===$e||typeof $e=="object"&&$e!==null&&$e.$$typeof===ue&&Rm($e)===nt.type){l($,nt.sibling),G=m(nt,Z.props),G.ref=Ea($,nt,Z),G.return=$,$=G;break e}l($,nt);break}else o($,nt);nt=nt.sibling}Z.type===O?(G=Rs(Z.props.children,$.mode,Ce,Z.key),G.return=$,$=G):(Ce=xc(Z.type,Z.key,Z.props,null,$.mode,Ce),Ce.ref=Ea($,G,Z),Ce.return=$,$=Ce)}return T($);case U:e:{for(nt=Z.key;G!==null;){if(G.key===nt)if(G.tag===4&&G.stateNode.containerInfo===Z.containerInfo&&G.stateNode.implementation===Z.implementation){l($,G.sibling),G=m(G,Z.children||[]),G.return=$,$=G;break e}else{l($,G);break}else o($,G);G=G.sibling}G=ld(Z,$.mode,Ce),G.return=$,$=G}return T($);case ue:return nt=Z._init,an($,G,nt(Z._payload),Ce)}if(Ke(Z))return Ye($,G,Z,Ce);if(he(Z))return qe($,G,Z,Ce);$l($,Z)}return typeof Z=="string"&&Z!==""||typeof Z=="number"?(Z=""+Z,G!==null&&G.tag===6?(l($,G.sibling),G=m(G,Z),G.return=$,$=G):(l($,G),G=ad(Z,$.mode,Ce),G.return=$,$=G),T($)):l($,G)}return an}var uo=Cm(!0),Nm=Cm(!1),Kl=kr(null),Zl=null,ho=null,vh=null;function _h(){vh=ho=Zl=null}function xh(i){var o=Kl.current;qt(Kl),i._currentValue=o}function yh(i,o,l){for(;i!==null;){var h=i.alternate;if((i.childLanes&o)!==o?(i.childLanes|=o,h!==null&&(h.childLanes|=o)):h!==null&&(h.childLanes&o)!==o&&(h.childLanes|=o),i===l)break;i=i.return}}function fo(i,o){Zl=i,vh=ho=null,i=i.dependencies,i!==null&&i.firstContext!==null&&(i.lanes&o&&(ni=!0),i.firstContext=null)}function wi(i){var o=i._currentValue;if(vh!==i)if(i={context:i,memoizedValue:o,next:null},ho===null){if(Zl===null)throw Error(t(308));ho=i,Zl.dependencies={lanes:0,firstContext:i}}else ho=ho.next=i;return o}var ys=null;function Sh(i){ys===null?ys=[i]:ys.push(i)}function Lm(i,o,l,h){var m=o.interleaved;return m===null?(l.next=l,Sh(o)):(l.next=m.next,m.next=l),o.interleaved=l,mr(i,h)}function mr(i,o){i.lanes|=o;var l=i.alternate;for(l!==null&&(l.lanes|=o),l=i,i=i.return;i!==null;)i.childLanes|=o,l=i.alternate,l!==null&&(l.childLanes|=o),l=i,i=i.return;return l.tag===3?l.stateNode:null}var Hr=!1;function Mh(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Pm(i,o){i=i.updateQueue,o.updateQueue===i&&(o.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,effects:i.effects})}function gr(i,o){return{eventTime:i,lane:o,tag:0,payload:null,callback:null,next:null}}function Gr(i,o,l){var h=i.updateQueue;if(h===null)return null;if(h=h.shared,Nt&2){var m=h.pending;return m===null?o.next=o:(o.next=m.next,m.next=o),h.pending=o,mr(i,l)}return m=h.interleaved,m===null?(o.next=o,Sh(h)):(o.next=m.next,m.next=o),h.interleaved=o,mr(i,l)}function Jl(i,o,l){if(o=o.updateQueue,o!==null&&(o=o.shared,(l&4194240)!==0)){var h=o.lanes;h&=i.pendingLanes,l|=h,o.lanes=l,ms(i,l)}}function bm(i,o){var l=i.updateQueue,h=i.alternate;if(h!==null&&(h=h.updateQueue,l===h)){var m=null,_=null;if(l=l.firstBaseUpdate,l!==null){do{var T={eventTime:l.eventTime,lane:l.lane,tag:l.tag,payload:l.payload,callback:l.callback,next:null};_===null?m=_=T:_=_.next=T,l=l.next}while(l!==null);_===null?m=_=o:_=_.next=o}else m=_=o;l={baseState:h.baseState,firstBaseUpdate:m,lastBaseUpdate:_,shared:h.shared,effects:h.effects},i.updateQueue=l;return}i=l.lastBaseUpdate,i===null?l.firstBaseUpdate=o:i.next=o,l.lastBaseUpdate=o}function Ql(i,o,l,h){var m=i.updateQueue;Hr=!1;var _=m.firstBaseUpdate,T=m.lastBaseUpdate,D=m.shared.pending;if(D!==null){m.shared.pending=null;var k=D,te=k.next;k.next=null,T===null?_=te:T.next=te,T=k;var Se=i.alternate;Se!==null&&(Se=Se.updateQueue,D=Se.lastBaseUpdate,D!==T&&(D===null?Se.firstBaseUpdate=te:D.next=te,Se.lastBaseUpdate=k))}if(_!==null){var Te=m.baseState;T=0,Se=te=k=null,D=_;do{var xe=D.lane,Fe=D.eventTime;if((h&xe)===xe){Se!==null&&(Se=Se.next={eventTime:Fe,lane:0,tag:D.tag,payload:D.payload,callback:D.callback,next:null});e:{var Ye=i,qe=D;switch(xe=o,Fe=l,qe.tag){case 1:if(Ye=qe.payload,typeof Ye=="function"){Te=Ye.call(Fe,Te,xe);break e}Te=Ye;break e;case 3:Ye.flags=Ye.flags&-65537|128;case 0:if(Ye=qe.payload,xe=typeof Ye=="function"?Ye.call(Fe,Te,xe):Ye,xe==null)break e;Te=ae({},Te,xe);break e;case 2:Hr=!0}}D.callback!==null&&D.lane!==0&&(i.flags|=64,xe=m.effects,xe===null?m.effects=[D]:xe.push(D))}else Fe={eventTime:Fe,lane:xe,tag:D.tag,payload:D.payload,callback:D.callback,next:null},Se===null?(te=Se=Fe,k=Te):Se=Se.next=Fe,T|=xe;if(D=D.next,D===null){if(D=m.shared.pending,D===null)break;xe=D,D=xe.next,xe.next=null,m.lastBaseUpdate=xe,m.shared.pending=null}}while(!0);if(Se===null&&(k=Te),m.baseState=k,m.firstBaseUpdate=te,m.lastBaseUpdate=Se,o=m.shared.interleaved,o!==null){m=o;do T|=m.lane,m=m.next;while(m!==o)}else _===null&&(m.shared.lanes=0);Es|=T,i.lanes=T,i.memoizedState=Te}}function Im(i,o,l){if(i=o.effects,o.effects=null,i!==null)for(o=0;o<i.length;o++){var h=i[o],m=h.callback;if(m!==null){if(h.callback=null,h=l,typeof m!="function")throw Error(t(191,m));m.call(h)}}}var Ta={},Ji=kr(Ta),wa=kr(Ta),Aa=kr(Ta);function Ss(i){if(i===Ta)throw Error(t(174));return i}function Eh(i,o){switch(Wt(Aa,o),Wt(wa,i),Wt(Ji,Ta),i=o.nodeType,i){case 9:case 11:o=(o=o.documentElement)?o.namespaceURI:je(null,"");break;default:i=i===8?o.parentNode:o,o=i.namespaceURI||null,i=i.tagName,o=je(o,i)}qt(Ji),Wt(Ji,o)}function po(){qt(Ji),qt(wa),qt(Aa)}function Dm(i){Ss(Aa.current);var o=Ss(Ji.current),l=je(o,i.type);o!==l&&(Wt(wa,i),Wt(Ji,l))}function Th(i){wa.current===i&&(qt(Ji),qt(wa))}var en=kr(0);function ec(i){for(var o=i;o!==null;){if(o.tag===13){var l=o.memoizedState;if(l!==null&&(l=l.dehydrated,l===null||l.data==="$?"||l.data==="$!"))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if(o.flags&128)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===i)break;for(;o.sibling===null;){if(o.return===null||o.return===i)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var wh=[];function Ah(){for(var i=0;i<wh.length;i++)wh[i]._workInProgressVersionPrimary=null;wh.length=0}var tc=w.ReactCurrentDispatcher,Rh=w.ReactCurrentBatchConfig,Ms=0,tn=null,pn=null,Mn=null,nc=!1,Ra=!1,Ca=0,iy=0;function Un(){throw Error(t(321))}function Ch(i,o){if(o===null)return!1;for(var l=0;l<o.length&&l<i.length;l++)if(!Ui(i[l],o[l]))return!1;return!0}function Nh(i,o,l,h,m,_){if(Ms=_,tn=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,tc.current=i===null||i.memoizedState===null?ay:ly,i=l(h,m),Ra){_=0;do{if(Ra=!1,Ca=0,25<=_)throw Error(t(301));_+=1,Mn=pn=null,o.updateQueue=null,tc.current=cy,i=l(h,m)}while(Ra)}if(tc.current=sc,o=pn!==null&&pn.next!==null,Ms=0,Mn=pn=tn=null,nc=!1,o)throw Error(t(300));return i}function Lh(){var i=Ca!==0;return Ca=0,i}function Qi(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Mn===null?tn.memoizedState=Mn=i:Mn=Mn.next=i,Mn}function Ai(){if(pn===null){var i=tn.alternate;i=i!==null?i.memoizedState:null}else i=pn.next;var o=Mn===null?tn.memoizedState:Mn.next;if(o!==null)Mn=o,pn=i;else{if(i===null)throw Error(t(310));pn=i,i={memoizedState:pn.memoizedState,baseState:pn.baseState,baseQueue:pn.baseQueue,queue:pn.queue,next:null},Mn===null?tn.memoizedState=Mn=i:Mn=Mn.next=i}return Mn}function Na(i,o){return typeof o=="function"?o(i):o}function Ph(i){var o=Ai(),l=o.queue;if(l===null)throw Error(t(311));l.lastRenderedReducer=i;var h=pn,m=h.baseQueue,_=l.pending;if(_!==null){if(m!==null){var T=m.next;m.next=_.next,_.next=T}h.baseQueue=m=_,l.pending=null}if(m!==null){_=m.next,h=h.baseState;var D=T=null,k=null,te=_;do{var Se=te.lane;if((Ms&Se)===Se)k!==null&&(k=k.next={lane:0,action:te.action,hasEagerState:te.hasEagerState,eagerState:te.eagerState,next:null}),h=te.hasEagerState?te.eagerState:i(h,te.action);else{var Te={lane:Se,action:te.action,hasEagerState:te.hasEagerState,eagerState:te.eagerState,next:null};k===null?(D=k=Te,T=h):k=k.next=Te,tn.lanes|=Se,Es|=Se}te=te.next}while(te!==null&&te!==_);k===null?T=h:k.next=D,Ui(h,o.memoizedState)||(ni=!0),o.memoizedState=h,o.baseState=T,o.baseQueue=k,l.lastRenderedState=h}if(i=l.interleaved,i!==null){m=i;do _=m.lane,tn.lanes|=_,Es|=_,m=m.next;while(m!==i)}else m===null&&(l.lanes=0);return[o.memoizedState,l.dispatch]}function bh(i){var o=Ai(),l=o.queue;if(l===null)throw Error(t(311));l.lastRenderedReducer=i;var h=l.dispatch,m=l.pending,_=o.memoizedState;if(m!==null){l.pending=null;var T=m=m.next;do _=i(_,T.action),T=T.next;while(T!==m);Ui(_,o.memoizedState)||(ni=!0),o.memoizedState=_,o.baseQueue===null&&(o.baseState=_),l.lastRenderedState=_}return[_,h]}function Um(){}function Om(i,o){var l=tn,h=Ai(),m=o(),_=!Ui(h.memoizedState,m);if(_&&(h.memoizedState=m,ni=!0),h=h.queue,Ih(km.bind(null,l,h,i),[i]),h.getSnapshot!==o||_||Mn!==null&&Mn.memoizedState.tag&1){if(l.flags|=2048,La(9,zm.bind(null,l,h,m,o),void 0,null),En===null)throw Error(t(349));Ms&30||Fm(l,o,m)}return m}function Fm(i,o,l){i.flags|=16384,i={getSnapshot:o,value:l},o=tn.updateQueue,o===null?(o={lastEffect:null,stores:null},tn.updateQueue=o,o.stores=[i]):(l=o.stores,l===null?o.stores=[i]:l.push(i))}function zm(i,o,l,h){o.value=l,o.getSnapshot=h,Bm(o)&&Vm(i)}function km(i,o,l){return l(function(){Bm(o)&&Vm(i)})}function Bm(i){var o=i.getSnapshot;i=i.value;try{var l=o();return!Ui(i,l)}catch{return!0}}function Vm(i){var o=mr(i,1);o!==null&&Bi(o,i,1,-1)}function Hm(i){var o=Qi();return typeof i=="function"&&(i=i()),o.memoizedState=o.baseState=i,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Na,lastRenderedState:i},o.queue=i,i=i.dispatch=oy.bind(null,tn,i),[o.memoizedState,i]}function La(i,o,l,h){return i={tag:i,create:o,destroy:l,deps:h,next:null},o=tn.updateQueue,o===null?(o={lastEffect:null,stores:null},tn.updateQueue=o,o.lastEffect=i.next=i):(l=o.lastEffect,l===null?o.lastEffect=i.next=i:(h=l.next,l.next=i,i.next=h,o.lastEffect=i)),i}function Gm(){return Ai().memoizedState}function ic(i,o,l,h){var m=Qi();tn.flags|=i,m.memoizedState=La(1|o,l,void 0,h===void 0?null:h)}function rc(i,o,l,h){var m=Ai();h=h===void 0?null:h;var _=void 0;if(pn!==null){var T=pn.memoizedState;if(_=T.destroy,h!==null&&Ch(h,T.deps)){m.memoizedState=La(o,l,_,h);return}}tn.flags|=i,m.memoizedState=La(1|o,l,_,h)}function Wm(i,o){return ic(8390656,8,i,o)}function Ih(i,o){return rc(2048,8,i,o)}function Xm(i,o){return rc(4,2,i,o)}function Ym(i,o){return rc(4,4,i,o)}function qm(i,o){if(typeof o=="function")return i=i(),o(i),function(){o(null)};if(o!=null)return i=i(),o.current=i,function(){o.current=null}}function jm(i,o,l){return l=l!=null?l.concat([i]):null,rc(4,4,qm.bind(null,o,i),l)}function Dh(){}function $m(i,o){var l=Ai();o=o===void 0?null:o;var h=l.memoizedState;return h!==null&&o!==null&&Ch(o,h[1])?h[0]:(l.memoizedState=[i,o],i)}function Km(i,o){var l=Ai();o=o===void 0?null:o;var h=l.memoizedState;return h!==null&&o!==null&&Ch(o,h[1])?h[0]:(i=i(),l.memoizedState=[i,o],i)}function Zm(i,o,l){return Ms&21?(Ui(l,o)||(l=Gn(),tn.lanes|=l,Es|=l,i.baseState=!0),o):(i.baseState&&(i.baseState=!1,ni=!0),i.memoizedState=l)}function ry(i,o){var l=Et;Et=l!==0&&4>l?l:4,i(!0);var h=Rh.transition;Rh.transition={};try{i(!1),o()}finally{Et=l,Rh.transition=h}}function Jm(){return Ai().memoizedState}function sy(i,o,l){var h=qr(i);if(l={lane:h,action:l,hasEagerState:!1,eagerState:null,next:null},Qm(i))eg(o,l);else if(l=Lm(i,o,l,h),l!==null){var m=Xn();Bi(l,i,h,m),tg(l,o,h)}}function oy(i,o,l){var h=qr(i),m={lane:h,action:l,hasEagerState:!1,eagerState:null,next:null};if(Qm(i))eg(o,m);else{var _=i.alternate;if(i.lanes===0&&(_===null||_.lanes===0)&&(_=o.lastRenderedReducer,_!==null))try{var T=o.lastRenderedState,D=_(T,l);if(m.hasEagerState=!0,m.eagerState=D,Ui(D,T)){var k=o.interleaved;k===null?(m.next=m,Sh(o)):(m.next=k.next,k.next=m),o.interleaved=m;return}}catch{}finally{}l=Lm(i,o,m,h),l!==null&&(m=Xn(),Bi(l,i,h,m),tg(l,o,h))}}function Qm(i){var o=i.alternate;return i===tn||o!==null&&o===tn}function eg(i,o){Ra=nc=!0;var l=i.pending;l===null?o.next=o:(o.next=l.next,l.next=o),i.pending=o}function tg(i,o,l){if(l&4194240){var h=o.lanes;h&=i.pendingLanes,l|=h,o.lanes=l,ms(i,l)}}var sc={readContext:wi,useCallback:Un,useContext:Un,useEffect:Un,useImperativeHandle:Un,useInsertionEffect:Un,useLayoutEffect:Un,useMemo:Un,useReducer:Un,useRef:Un,useState:Un,useDebugValue:Un,useDeferredValue:Un,useTransition:Un,useMutableSource:Un,useSyncExternalStore:Un,useId:Un,unstable_isNewReconciler:!1},ay={readContext:wi,useCallback:function(i,o){return Qi().memoizedState=[i,o===void 0?null:o],i},useContext:wi,useEffect:Wm,useImperativeHandle:function(i,o,l){return l=l!=null?l.concat([i]):null,ic(4194308,4,qm.bind(null,o,i),l)},useLayoutEffect:function(i,o){return ic(4194308,4,i,o)},useInsertionEffect:function(i,o){return ic(4,2,i,o)},useMemo:function(i,o){var l=Qi();return o=o===void 0?null:o,i=i(),l.memoizedState=[i,o],i},useReducer:function(i,o,l){var h=Qi();return o=l!==void 0?l(o):o,h.memoizedState=h.baseState=o,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:o},h.queue=i,i=i.dispatch=sy.bind(null,tn,i),[h.memoizedState,i]},useRef:function(i){var o=Qi();return i={current:i},o.memoizedState=i},useState:Hm,useDebugValue:Dh,useDeferredValue:function(i){return Qi().memoizedState=i},useTransition:function(){var i=Hm(!1),o=i[0];return i=ry.bind(null,i[1]),Qi().memoizedState=i,[o,i]},useMutableSource:function(){},useSyncExternalStore:function(i,o,l){var h=tn,m=Qi();if(Jt){if(l===void 0)throw Error(t(407));l=l()}else{if(l=o(),En===null)throw Error(t(349));Ms&30||Fm(h,o,l)}m.memoizedState=l;var _={value:l,getSnapshot:o};return m.queue=_,Wm(km.bind(null,h,_,i),[i]),h.flags|=2048,La(9,zm.bind(null,h,_,l,o),void 0,null),l},useId:function(){var i=Qi(),o=En.identifierPrefix;if(Jt){var l=pr,h=fr;l=(h&~(1<<32-Pt(h)-1)).toString(32)+l,o=":"+o+"R"+l,l=Ca++,0<l&&(o+="H"+l.toString(32)),o+=":"}else l=iy++,o=":"+o+"r"+l.toString(32)+":";return i.memoizedState=o},unstable_isNewReconciler:!1},ly={readContext:wi,useCallback:$m,useContext:wi,useEffect:Ih,useImperativeHandle:jm,useInsertionEffect:Xm,useLayoutEffect:Ym,useMemo:Km,useReducer:Ph,useRef:Gm,useState:function(){return Ph(Na)},useDebugValue:Dh,useDeferredValue:function(i){var o=Ai();return Zm(o,pn.memoizedState,i)},useTransition:function(){var i=Ph(Na)[0],o=Ai().memoizedState;return[i,o]},useMutableSource:Um,useSyncExternalStore:Om,useId:Jm,unstable_isNewReconciler:!1},cy={readContext:wi,useCallback:$m,useContext:wi,useEffect:Ih,useImperativeHandle:jm,useInsertionEffect:Xm,useLayoutEffect:Ym,useMemo:Km,useReducer:bh,useRef:Gm,useState:function(){return bh(Na)},useDebugValue:Dh,useDeferredValue:function(i){var o=Ai();return pn===null?o.memoizedState=i:Zm(o,pn.memoizedState,i)},useTransition:function(){var i=bh(Na)[0],o=Ai().memoizedState;return[i,o]},useMutableSource:Um,useSyncExternalStore:Om,useId:Jm,unstable_isNewReconciler:!1};function Fi(i,o){if(i&&i.defaultProps){o=ae({},o),i=i.defaultProps;for(var l in i)o[l]===void 0&&(o[l]=i[l]);return o}return o}function Uh(i,o,l,h){o=i.memoizedState,l=l(h,o),l=l==null?o:ae({},o,l),i.memoizedState=l,i.lanes===0&&(i.updateQueue.baseState=l)}var oc={isMounted:function(i){return(i=i._reactInternals)?Ki(i)===i:!1},enqueueSetState:function(i,o,l){i=i._reactInternals;var h=Xn(),m=qr(i),_=gr(h,m);_.payload=o,l!=null&&(_.callback=l),o=Gr(i,_,m),o!==null&&(Bi(o,i,m,h),Jl(o,i,m))},enqueueReplaceState:function(i,o,l){i=i._reactInternals;var h=Xn(),m=qr(i),_=gr(h,m);_.tag=1,_.payload=o,l!=null&&(_.callback=l),o=Gr(i,_,m),o!==null&&(Bi(o,i,m,h),Jl(o,i,m))},enqueueForceUpdate:function(i,o){i=i._reactInternals;var l=Xn(),h=qr(i),m=gr(l,h);m.tag=2,o!=null&&(m.callback=o),o=Gr(i,m,h),o!==null&&(Bi(o,i,h,l),Jl(o,i,h))}};function ng(i,o,l,h,m,_,T){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(h,_,T):o.prototype&&o.prototype.isPureReactComponent?!ga(l,h)||!ga(m,_):!0}function ig(i,o,l){var h=!1,m=Br,_=o.contextType;return typeof _=="object"&&_!==null?_=wi(_):(m=ti(o)?vs:Dn.current,h=o.contextTypes,_=(h=h!=null)?oo(i,m):Br),o=new o(l,_),i.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=oc,i.stateNode=o,o._reactInternals=i,h&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=m,i.__reactInternalMemoizedMaskedChildContext=_),o}function rg(i,o,l,h){i=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(l,h),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(l,h),o.state!==i&&oc.enqueueReplaceState(o,o.state,null)}function Oh(i,o,l,h){var m=i.stateNode;m.props=l,m.state=i.memoizedState,m.refs={},Mh(i);var _=o.contextType;typeof _=="object"&&_!==null?m.context=wi(_):(_=ti(o)?vs:Dn.current,m.context=oo(i,_)),m.state=i.memoizedState,_=o.getDerivedStateFromProps,typeof _=="function"&&(Uh(i,o,_,l),m.state=i.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof m.getSnapshotBeforeUpdate=="function"||typeof m.UNSAFE_componentWillMount!="function"&&typeof m.componentWillMount!="function"||(o=m.state,typeof m.componentWillMount=="function"&&m.componentWillMount(),typeof m.UNSAFE_componentWillMount=="function"&&m.UNSAFE_componentWillMount(),o!==m.state&&oc.enqueueReplaceState(m,m.state,null),Ql(i,l,m,h),m.state=i.memoizedState),typeof m.componentDidMount=="function"&&(i.flags|=4194308)}function mo(i,o){try{var l="",h=o;do l+=pe(h),h=h.return;while(h);var m=l}catch(_){m=`
Error generating stack: `+_.message+`
`+_.stack}return{value:i,source:o,stack:m,digest:null}}function Fh(i,o,l){return{value:i,source:null,stack:l??null,digest:o??null}}function zh(i,o){try{console.error(o.value)}catch(l){setTimeout(function(){throw l})}}var uy=typeof WeakMap=="function"?WeakMap:Map;function sg(i,o,l){l=gr(-1,l),l.tag=3,l.payload={element:null};var h=o.value;return l.callback=function(){fc||(fc=!0,Qh=h),zh(i,o)},l}function og(i,o,l){l=gr(-1,l),l.tag=3;var h=i.type.getDerivedStateFromError;if(typeof h=="function"){var m=o.value;l.payload=function(){return h(m)},l.callback=function(){zh(i,o)}}var _=i.stateNode;return _!==null&&typeof _.componentDidCatch=="function"&&(l.callback=function(){zh(i,o),typeof h!="function"&&(Xr===null?Xr=new Set([this]):Xr.add(this));var T=o.stack;this.componentDidCatch(o.value,{componentStack:T!==null?T:""})}),l}function ag(i,o,l){var h=i.pingCache;if(h===null){h=i.pingCache=new uy;var m=new Set;h.set(o,m)}else m=h.get(o),m===void 0&&(m=new Set,h.set(o,m));m.has(l)||(m.add(l),i=Ty.bind(null,i,o,l),o.then(i,i))}function lg(i){do{var o;if((o=i.tag===13)&&(o=i.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return i;i=i.return}while(i!==null);return null}function cg(i,o,l,h,m){return i.mode&1?(i.flags|=65536,i.lanes=m,i):(i===o?i.flags|=65536:(i.flags|=128,l.flags|=131072,l.flags&=-52805,l.tag===1&&(l.alternate===null?l.tag=17:(o=gr(-1,1),o.tag=2,Gr(l,o,1))),l.lanes|=1),i)}var hy=w.ReactCurrentOwner,ni=!1;function Wn(i,o,l,h){o.child=i===null?Nm(o,null,l,h):uo(o,i.child,l,h)}function ug(i,o,l,h,m){l=l.render;var _=o.ref;return fo(o,m),h=Nh(i,o,l,h,_,m),l=Lh(),i!==null&&!ni?(o.updateQueue=i.updateQueue,o.flags&=-2053,i.lanes&=~m,vr(i,o,m)):(Jt&&l&&dh(o),o.flags|=1,Wn(i,o,h,m),o.child)}function hg(i,o,l,h,m){if(i===null){var _=l.type;return typeof _=="function"&&!od(_)&&_.defaultProps===void 0&&l.compare===null&&l.defaultProps===void 0?(o.tag=15,o.type=_,dg(i,o,_,h,m)):(i=xc(l.type,null,h,o,o.mode,m),i.ref=o.ref,i.return=o,o.child=i)}if(_=i.child,!(i.lanes&m)){var T=_.memoizedProps;if(l=l.compare,l=l!==null?l:ga,l(T,h)&&i.ref===o.ref)return vr(i,o,m)}return o.flags|=1,i=$r(_,h),i.ref=o.ref,i.return=o,o.child=i}function dg(i,o,l,h,m){if(i!==null){var _=i.memoizedProps;if(ga(_,h)&&i.ref===o.ref)if(ni=!1,o.pendingProps=h=_,(i.lanes&m)!==0)i.flags&131072&&(ni=!0);else return o.lanes=i.lanes,vr(i,o,m)}return kh(i,o,l,h,m)}function fg(i,o,l){var h=o.pendingProps,m=h.children,_=i!==null?i.memoizedState:null;if(h.mode==="hidden")if(!(o.mode&1))o.memoizedState={baseLanes:0,cachePool:null,transitions:null},Wt(vo,gi),gi|=l;else{if(!(l&1073741824))return i=_!==null?_.baseLanes|l:l,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:i,cachePool:null,transitions:null},o.updateQueue=null,Wt(vo,gi),gi|=i,null;o.memoizedState={baseLanes:0,cachePool:null,transitions:null},h=_!==null?_.baseLanes:l,Wt(vo,gi),gi|=h}else _!==null?(h=_.baseLanes|l,o.memoizedState=null):h=l,Wt(vo,gi),gi|=h;return Wn(i,o,m,l),o.child}function pg(i,o){var l=o.ref;(i===null&&l!==null||i!==null&&i.ref!==l)&&(o.flags|=512,o.flags|=2097152)}function kh(i,o,l,h,m){var _=ti(l)?vs:Dn.current;return _=oo(o,_),fo(o,m),l=Nh(i,o,l,h,_,m),h=Lh(),i!==null&&!ni?(o.updateQueue=i.updateQueue,o.flags&=-2053,i.lanes&=~m,vr(i,o,m)):(Jt&&h&&dh(o),o.flags|=1,Wn(i,o,l,m),o.child)}function mg(i,o,l,h,m){if(ti(l)){var _=!0;Wl(o)}else _=!1;if(fo(o,m),o.stateNode===null)lc(i,o),ig(o,l,h),Oh(o,l,h,m),h=!0;else if(i===null){var T=o.stateNode,D=o.memoizedProps;T.props=D;var k=T.context,te=l.contextType;typeof te=="object"&&te!==null?te=wi(te):(te=ti(l)?vs:Dn.current,te=oo(o,te));var Se=l.getDerivedStateFromProps,Te=typeof Se=="function"||typeof T.getSnapshotBeforeUpdate=="function";Te||typeof T.UNSAFE_componentWillReceiveProps!="function"&&typeof T.componentWillReceiveProps!="function"||(D!==h||k!==te)&&rg(o,T,h,te),Hr=!1;var xe=o.memoizedState;T.state=xe,Ql(o,h,T,m),k=o.memoizedState,D!==h||xe!==k||ei.current||Hr?(typeof Se=="function"&&(Uh(o,l,Se,h),k=o.memoizedState),(D=Hr||ng(o,l,D,h,xe,k,te))?(Te||typeof T.UNSAFE_componentWillMount!="function"&&typeof T.componentWillMount!="function"||(typeof T.componentWillMount=="function"&&T.componentWillMount(),typeof T.UNSAFE_componentWillMount=="function"&&T.UNSAFE_componentWillMount()),typeof T.componentDidMount=="function"&&(o.flags|=4194308)):(typeof T.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=h,o.memoizedState=k),T.props=h,T.state=k,T.context=te,h=D):(typeof T.componentDidMount=="function"&&(o.flags|=4194308),h=!1)}else{T=o.stateNode,Pm(i,o),D=o.memoizedProps,te=o.type===o.elementType?D:Fi(o.type,D),T.props=te,Te=o.pendingProps,xe=T.context,k=l.contextType,typeof k=="object"&&k!==null?k=wi(k):(k=ti(l)?vs:Dn.current,k=oo(o,k));var Fe=l.getDerivedStateFromProps;(Se=typeof Fe=="function"||typeof T.getSnapshotBeforeUpdate=="function")||typeof T.UNSAFE_componentWillReceiveProps!="function"&&typeof T.componentWillReceiveProps!="function"||(D!==Te||xe!==k)&&rg(o,T,h,k),Hr=!1,xe=o.memoizedState,T.state=xe,Ql(o,h,T,m);var Ye=o.memoizedState;D!==Te||xe!==Ye||ei.current||Hr?(typeof Fe=="function"&&(Uh(o,l,Fe,h),Ye=o.memoizedState),(te=Hr||ng(o,l,te,h,xe,Ye,k)||!1)?(Se||typeof T.UNSAFE_componentWillUpdate!="function"&&typeof T.componentWillUpdate!="function"||(typeof T.componentWillUpdate=="function"&&T.componentWillUpdate(h,Ye,k),typeof T.UNSAFE_componentWillUpdate=="function"&&T.UNSAFE_componentWillUpdate(h,Ye,k)),typeof T.componentDidUpdate=="function"&&(o.flags|=4),typeof T.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof T.componentDidUpdate!="function"||D===i.memoizedProps&&xe===i.memoizedState||(o.flags|=4),typeof T.getSnapshotBeforeUpdate!="function"||D===i.memoizedProps&&xe===i.memoizedState||(o.flags|=1024),o.memoizedProps=h,o.memoizedState=Ye),T.props=h,T.state=Ye,T.context=k,h=te):(typeof T.componentDidUpdate!="function"||D===i.memoizedProps&&xe===i.memoizedState||(o.flags|=4),typeof T.getSnapshotBeforeUpdate!="function"||D===i.memoizedProps&&xe===i.memoizedState||(o.flags|=1024),h=!1)}return Bh(i,o,l,h,_,m)}function Bh(i,o,l,h,m,_){pg(i,o);var T=(o.flags&128)!==0;if(!h&&!T)return m&&ym(o,l,!1),vr(i,o,_);h=o.stateNode,hy.current=o;var D=T&&typeof l.getDerivedStateFromError!="function"?null:h.render();return o.flags|=1,i!==null&&T?(o.child=uo(o,i.child,null,_),o.child=uo(o,null,D,_)):Wn(i,o,D,_),o.memoizedState=h.state,m&&ym(o,l,!0),o.child}function gg(i){var o=i.stateNode;o.pendingContext?_m(i,o.pendingContext,o.pendingContext!==o.context):o.context&&_m(i,o.context,!1),Eh(i,o.containerInfo)}function vg(i,o,l,h,m){return co(),gh(m),o.flags|=256,Wn(i,o,l,h),o.child}var Vh={dehydrated:null,treeContext:null,retryLane:0};function Hh(i){return{baseLanes:i,cachePool:null,transitions:null}}function _g(i,o,l){var h=o.pendingProps,m=en.current,_=!1,T=(o.flags&128)!==0,D;if((D=T)||(D=i!==null&&i.memoizedState===null?!1:(m&2)!==0),D?(_=!0,o.flags&=-129):(i===null||i.memoizedState!==null)&&(m|=1),Wt(en,m&1),i===null)return mh(o),i=o.memoizedState,i!==null&&(i=i.dehydrated,i!==null)?(o.mode&1?i.data==="$!"?o.lanes=8:o.lanes=1073741824:o.lanes=1,null):(T=h.children,i=h.fallback,_?(h=o.mode,_=o.child,T={mode:"hidden",children:T},!(h&1)&&_!==null?(_.childLanes=0,_.pendingProps=T):_=yc(T,h,0,null),i=Rs(i,h,l,null),_.return=o,i.return=o,_.sibling=i,o.child=_,o.child.memoizedState=Hh(l),o.memoizedState=Vh,i):Gh(o,T));if(m=i.memoizedState,m!==null&&(D=m.dehydrated,D!==null))return dy(i,o,T,h,D,m,l);if(_){_=h.fallback,T=o.mode,m=i.child,D=m.sibling;var k={mode:"hidden",children:h.children};return!(T&1)&&o.child!==m?(h=o.child,h.childLanes=0,h.pendingProps=k,o.deletions=null):(h=$r(m,k),h.subtreeFlags=m.subtreeFlags&14680064),D!==null?_=$r(D,_):(_=Rs(_,T,l,null),_.flags|=2),_.return=o,h.return=o,h.sibling=_,o.child=h,h=_,_=o.child,T=i.child.memoizedState,T=T===null?Hh(l):{baseLanes:T.baseLanes|l,cachePool:null,transitions:T.transitions},_.memoizedState=T,_.childLanes=i.childLanes&~l,o.memoizedState=Vh,h}return _=i.child,i=_.sibling,h=$r(_,{mode:"visible",children:h.children}),!(o.mode&1)&&(h.lanes=l),h.return=o,h.sibling=null,i!==null&&(l=o.deletions,l===null?(o.deletions=[i],o.flags|=16):l.push(i)),o.child=h,o.memoizedState=null,h}function Gh(i,o){return o=yc({mode:"visible",children:o},i.mode,0,null),o.return=i,i.child=o}function ac(i,o,l,h){return h!==null&&gh(h),uo(o,i.child,null,l),i=Gh(o,o.pendingProps.children),i.flags|=2,o.memoizedState=null,i}function dy(i,o,l,h,m,_,T){if(l)return o.flags&256?(o.flags&=-257,h=Fh(Error(t(422))),ac(i,o,T,h)):o.memoizedState!==null?(o.child=i.child,o.flags|=128,null):(_=h.fallback,m=o.mode,h=yc({mode:"visible",children:h.children},m,0,null),_=Rs(_,m,T,null),_.flags|=2,h.return=o,_.return=o,h.sibling=_,o.child=h,o.mode&1&&uo(o,i.child,null,T),o.child.memoizedState=Hh(T),o.memoizedState=Vh,_);if(!(o.mode&1))return ac(i,o,T,null);if(m.data==="$!"){if(h=m.nextSibling&&m.nextSibling.dataset,h)var D=h.dgst;return h=D,_=Error(t(419)),h=Fh(_,h,void 0),ac(i,o,T,h)}if(D=(T&i.childLanes)!==0,ni||D){if(h=En,h!==null){switch(T&-T){case 4:m=2;break;case 16:m=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:m=32;break;case 536870912:m=268435456;break;default:m=0}m=m&(h.suspendedLanes|T)?0:m,m!==0&&m!==_.retryLane&&(_.retryLane=m,mr(i,m),Bi(h,i,m,-1))}return sd(),h=Fh(Error(t(421))),ac(i,o,T,h)}return m.data==="$?"?(o.flags|=128,o.child=i.child,o=wy.bind(null,i),m._reactRetry=o,null):(i=_.treeContext,mi=zr(m.nextSibling),pi=o,Jt=!0,Oi=null,i!==null&&(Ei[Ti++]=fr,Ei[Ti++]=pr,Ei[Ti++]=_s,fr=i.id,pr=i.overflow,_s=o),o=Gh(o,h.children),o.flags|=4096,o)}function xg(i,o,l){i.lanes|=o;var h=i.alternate;h!==null&&(h.lanes|=o),yh(i.return,o,l)}function Wh(i,o,l,h,m){var _=i.memoizedState;_===null?i.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:h,tail:l,tailMode:m}:(_.isBackwards=o,_.rendering=null,_.renderingStartTime=0,_.last=h,_.tail=l,_.tailMode=m)}function yg(i,o,l){var h=o.pendingProps,m=h.revealOrder,_=h.tail;if(Wn(i,o,h.children,l),h=en.current,h&2)h=h&1|2,o.flags|=128;else{if(i!==null&&i.flags&128)e:for(i=o.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&xg(i,l,o);else if(i.tag===19)xg(i,l,o);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===o)break e;for(;i.sibling===null;){if(i.return===null||i.return===o)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}h&=1}if(Wt(en,h),!(o.mode&1))o.memoizedState=null;else switch(m){case"forwards":for(l=o.child,m=null;l!==null;)i=l.alternate,i!==null&&ec(i)===null&&(m=l),l=l.sibling;l=m,l===null?(m=o.child,o.child=null):(m=l.sibling,l.sibling=null),Wh(o,!1,m,l,_);break;case"backwards":for(l=null,m=o.child,o.child=null;m!==null;){if(i=m.alternate,i!==null&&ec(i)===null){o.child=m;break}i=m.sibling,m.sibling=l,l=m,m=i}Wh(o,!0,l,null,_);break;case"together":Wh(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function lc(i,o){!(o.mode&1)&&i!==null&&(i.alternate=null,o.alternate=null,o.flags|=2)}function vr(i,o,l){if(i!==null&&(o.dependencies=i.dependencies),Es|=o.lanes,!(l&o.childLanes))return null;if(i!==null&&o.child!==i.child)throw Error(t(153));if(o.child!==null){for(i=o.child,l=$r(i,i.pendingProps),o.child=l,l.return=o;i.sibling!==null;)i=i.sibling,l=l.sibling=$r(i,i.pendingProps),l.return=o;l.sibling=null}return o.child}function fy(i,o,l){switch(o.tag){case 3:gg(o),co();break;case 5:Dm(o);break;case 1:ti(o.type)&&Wl(o);break;case 4:Eh(o,o.stateNode.containerInfo);break;case 10:var h=o.type._context,m=o.memoizedProps.value;Wt(Kl,h._currentValue),h._currentValue=m;break;case 13:if(h=o.memoizedState,h!==null)return h.dehydrated!==null?(Wt(en,en.current&1),o.flags|=128,null):l&o.child.childLanes?_g(i,o,l):(Wt(en,en.current&1),i=vr(i,o,l),i!==null?i.sibling:null);Wt(en,en.current&1);break;case 19:if(h=(l&o.childLanes)!==0,i.flags&128){if(h)return yg(i,o,l);o.flags|=128}if(m=o.memoizedState,m!==null&&(m.rendering=null,m.tail=null,m.lastEffect=null),Wt(en,en.current),h)break;return null;case 22:case 23:return o.lanes=0,fg(i,o,l)}return vr(i,o,l)}var Sg,Xh,Mg,Eg;Sg=function(i,o){for(var l=o.child;l!==null;){if(l.tag===5||l.tag===6)i.appendChild(l.stateNode);else if(l.tag!==4&&l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return;l=l.return}l.sibling.return=l.return,l=l.sibling}},Xh=function(){},Mg=function(i,o,l,h){var m=i.memoizedProps;if(m!==h){i=o.stateNode,Ss(Ji.current);var _=null;switch(l){case"input":m=B(i,m),h=B(i,h),_=[];break;case"select":m=ae({},m,{value:void 0}),h=ae({},h,{value:void 0}),_=[];break;case"textarea":m=A(i,m),h=A(i,h),_=[];break;default:typeof m.onClick!="function"&&typeof h.onClick=="function"&&(i.onclick=Vl)}yt(l,h);var T;l=null;for(te in m)if(!h.hasOwnProperty(te)&&m.hasOwnProperty(te)&&m[te]!=null)if(te==="style"){var D=m[te];for(T in D)D.hasOwnProperty(T)&&(l||(l={}),l[T]="")}else te!=="dangerouslySetInnerHTML"&&te!=="children"&&te!=="suppressContentEditableWarning"&&te!=="suppressHydrationWarning"&&te!=="autoFocus"&&(s.hasOwnProperty(te)?_||(_=[]):(_=_||[]).push(te,null));for(te in h){var k=h[te];if(D=m!=null?m[te]:void 0,h.hasOwnProperty(te)&&k!==D&&(k!=null||D!=null))if(te==="style")if(D){for(T in D)!D.hasOwnProperty(T)||k&&k.hasOwnProperty(T)||(l||(l={}),l[T]="");for(T in k)k.hasOwnProperty(T)&&D[T]!==k[T]&&(l||(l={}),l[T]=k[T])}else l||(_||(_=[]),_.push(te,l)),l=k;else te==="dangerouslySetInnerHTML"?(k=k?k.__html:void 0,D=D?D.__html:void 0,k!=null&&D!==k&&(_=_||[]).push(te,k)):te==="children"?typeof k!="string"&&typeof k!="number"||(_=_||[]).push(te,""+k):te!=="suppressContentEditableWarning"&&te!=="suppressHydrationWarning"&&(s.hasOwnProperty(te)?(k!=null&&te==="onScroll"&&Yt("scroll",i),_||D===k||(_=[])):(_=_||[]).push(te,k))}l&&(_=_||[]).push("style",l);var te=_;(o.updateQueue=te)&&(o.flags|=4)}},Eg=function(i,o,l,h){l!==h&&(o.flags|=4)};function Pa(i,o){if(!Jt)switch(i.tailMode){case"hidden":o=i.tail;for(var l=null;o!==null;)o.alternate!==null&&(l=o),o=o.sibling;l===null?i.tail=null:l.sibling=null;break;case"collapsed":l=i.tail;for(var h=null;l!==null;)l.alternate!==null&&(h=l),l=l.sibling;h===null?o||i.tail===null?i.tail=null:i.tail.sibling=null:h.sibling=null}}function On(i){var o=i.alternate!==null&&i.alternate.child===i.child,l=0,h=0;if(o)for(var m=i.child;m!==null;)l|=m.lanes|m.childLanes,h|=m.subtreeFlags&14680064,h|=m.flags&14680064,m.return=i,m=m.sibling;else for(m=i.child;m!==null;)l|=m.lanes|m.childLanes,h|=m.subtreeFlags,h|=m.flags,m.return=i,m=m.sibling;return i.subtreeFlags|=h,i.childLanes=l,o}function py(i,o,l){var h=o.pendingProps;switch(fh(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return On(o),null;case 1:return ti(o.type)&&Gl(),On(o),null;case 3:return h=o.stateNode,po(),qt(ei),qt(Dn),Ah(),h.pendingContext&&(h.context=h.pendingContext,h.pendingContext=null),(i===null||i.child===null)&&(jl(o)?o.flags|=4:i===null||i.memoizedState.isDehydrated&&!(o.flags&256)||(o.flags|=1024,Oi!==null&&(nd(Oi),Oi=null))),Xh(i,o),On(o),null;case 5:Th(o);var m=Ss(Aa.current);if(l=o.type,i!==null&&o.stateNode!=null)Mg(i,o,l,h,m),i.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!h){if(o.stateNode===null)throw Error(t(166));return On(o),null}if(i=Ss(Ji.current),jl(o)){h=o.stateNode,l=o.type;var _=o.memoizedProps;switch(h[Zi]=o,h[Sa]=_,i=(o.mode&1)!==0,l){case"dialog":Yt("cancel",h),Yt("close",h);break;case"iframe":case"object":case"embed":Yt("load",h);break;case"video":case"audio":for(m=0;m<_a.length;m++)Yt(_a[m],h);break;case"source":Yt("error",h);break;case"img":case"image":case"link":Yt("error",h),Yt("load",h);break;case"details":Yt("toggle",h);break;case"input":Bn(h,_),Yt("invalid",h);break;case"select":h._wrapperState={wasMultiple:!!_.multiple},Yt("invalid",h);break;case"textarea":J(h,_),Yt("invalid",h)}yt(l,_),m=null;for(var T in _)if(_.hasOwnProperty(T)){var D=_[T];T==="children"?typeof D=="string"?h.textContent!==D&&(_.suppressHydrationWarning!==!0&&Bl(h.textContent,D,i),m=["children",D]):typeof D=="number"&&h.textContent!==""+D&&(_.suppressHydrationWarning!==!0&&Bl(h.textContent,D,i),m=["children",""+D]):s.hasOwnProperty(T)&&D!=null&&T==="onScroll"&&Yt("scroll",h)}switch(l){case"input":Bt(h),Je(h,_,!0);break;case"textarea":Bt(h),ye(h);break;case"select":case"option":break;default:typeof _.onClick=="function"&&(h.onclick=Vl)}h=m,o.updateQueue=h,h!==null&&(o.flags|=4)}else{T=m.nodeType===9?m:m.ownerDocument,i==="http://www.w3.org/1999/xhtml"&&(i=me(l)),i==="http://www.w3.org/1999/xhtml"?l==="script"?(i=T.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild)):typeof h.is=="string"?i=T.createElement(l,{is:h.is}):(i=T.createElement(l),l==="select"&&(T=i,h.multiple?T.multiple=!0:h.size&&(T.size=h.size))):i=T.createElementNS(i,l),i[Zi]=o,i[Sa]=h,Sg(i,o,!1,!1),o.stateNode=i;e:{switch(T=ut(l,h),l){case"dialog":Yt("cancel",i),Yt("close",i),m=h;break;case"iframe":case"object":case"embed":Yt("load",i),m=h;break;case"video":case"audio":for(m=0;m<_a.length;m++)Yt(_a[m],i);m=h;break;case"source":Yt("error",i),m=h;break;case"img":case"image":case"link":Yt("error",i),Yt("load",i),m=h;break;case"details":Yt("toggle",i),m=h;break;case"input":Bn(i,h),m=B(i,h),Yt("invalid",i);break;case"option":m=h;break;case"select":i._wrapperState={wasMultiple:!!h.multiple},m=ae({},h,{value:void 0}),Yt("invalid",i);break;case"textarea":J(i,h),m=A(i,h),Yt("invalid",i);break;default:m=h}yt(l,m),D=m;for(_ in D)if(D.hasOwnProperty(_)){var k=D[_];_==="style"?ot(i,k):_==="dangerouslySetInnerHTML"?(k=k?k.__html:void 0,k!=null&&Ve(i,k)):_==="children"?typeof k=="string"?(l!=="textarea"||k!=="")&&_t(i,k):typeof k=="number"&&_t(i,""+k):_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&_!=="autoFocus"&&(s.hasOwnProperty(_)?k!=null&&_==="onScroll"&&Yt("scroll",i):k!=null&&R(i,_,k,T))}switch(l){case"input":Bt(i),Je(i,h,!1);break;case"textarea":Bt(i),ye(i);break;case"option":h.value!=null&&i.setAttribute("value",""+Le(h.value));break;case"select":i.multiple=!!h.multiple,_=h.value,_!=null?b(i,!!h.multiple,_,!1):h.defaultValue!=null&&b(i,!!h.multiple,h.defaultValue,!0);break;default:typeof m.onClick=="function"&&(i.onclick=Vl)}switch(l){case"button":case"input":case"select":case"textarea":h=!!h.autoFocus;break e;case"img":h=!0;break e;default:h=!1}}h&&(o.flags|=4)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return On(o),null;case 6:if(i&&o.stateNode!=null)Eg(i,o,i.memoizedProps,h);else{if(typeof h!="string"&&o.stateNode===null)throw Error(t(166));if(l=Ss(Aa.current),Ss(Ji.current),jl(o)){if(h=o.stateNode,l=o.memoizedProps,h[Zi]=o,(_=h.nodeValue!==l)&&(i=pi,i!==null))switch(i.tag){case 3:Bl(h.nodeValue,l,(i.mode&1)!==0);break;case 5:i.memoizedProps.suppressHydrationWarning!==!0&&Bl(h.nodeValue,l,(i.mode&1)!==0)}_&&(o.flags|=4)}else h=(l.nodeType===9?l:l.ownerDocument).createTextNode(h),h[Zi]=o,o.stateNode=h}return On(o),null;case 13:if(qt(en),h=o.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(Jt&&mi!==null&&o.mode&1&&!(o.flags&128))Am(),co(),o.flags|=98560,_=!1;else if(_=jl(o),h!==null&&h.dehydrated!==null){if(i===null){if(!_)throw Error(t(318));if(_=o.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(t(317));_[Zi]=o}else co(),!(o.flags&128)&&(o.memoizedState=null),o.flags|=4;On(o),_=!1}else Oi!==null&&(nd(Oi),Oi=null),_=!0;if(!_)return o.flags&65536?o:null}return o.flags&128?(o.lanes=l,o):(h=h!==null,h!==(i!==null&&i.memoizedState!==null)&&h&&(o.child.flags|=8192,o.mode&1&&(i===null||en.current&1?mn===0&&(mn=3):sd())),o.updateQueue!==null&&(o.flags|=4),On(o),null);case 4:return po(),Xh(i,o),i===null&&xa(o.stateNode.containerInfo),On(o),null;case 10:return xh(o.type._context),On(o),null;case 17:return ti(o.type)&&Gl(),On(o),null;case 19:if(qt(en),_=o.memoizedState,_===null)return On(o),null;if(h=(o.flags&128)!==0,T=_.rendering,T===null)if(h)Pa(_,!1);else{if(mn!==0||i!==null&&i.flags&128)for(i=o.child;i!==null;){if(T=ec(i),T!==null){for(o.flags|=128,Pa(_,!1),h=T.updateQueue,h!==null&&(o.updateQueue=h,o.flags|=4),o.subtreeFlags=0,h=l,l=o.child;l!==null;)_=l,i=h,_.flags&=14680066,T=_.alternate,T===null?(_.childLanes=0,_.lanes=i,_.child=null,_.subtreeFlags=0,_.memoizedProps=null,_.memoizedState=null,_.updateQueue=null,_.dependencies=null,_.stateNode=null):(_.childLanes=T.childLanes,_.lanes=T.lanes,_.child=T.child,_.subtreeFlags=0,_.deletions=null,_.memoizedProps=T.memoizedProps,_.memoizedState=T.memoizedState,_.updateQueue=T.updateQueue,_.type=T.type,i=T.dependencies,_.dependencies=i===null?null:{lanes:i.lanes,firstContext:i.firstContext}),l=l.sibling;return Wt(en,en.current&1|2),o.child}i=i.sibling}_.tail!==null&&H()>_o&&(o.flags|=128,h=!0,Pa(_,!1),o.lanes=4194304)}else{if(!h)if(i=ec(T),i!==null){if(o.flags|=128,h=!0,l=i.updateQueue,l!==null&&(o.updateQueue=l,o.flags|=4),Pa(_,!0),_.tail===null&&_.tailMode==="hidden"&&!T.alternate&&!Jt)return On(o),null}else 2*H()-_.renderingStartTime>_o&&l!==1073741824&&(o.flags|=128,h=!0,Pa(_,!1),o.lanes=4194304);_.isBackwards?(T.sibling=o.child,o.child=T):(l=_.last,l!==null?l.sibling=T:o.child=T,_.last=T)}return _.tail!==null?(o=_.tail,_.rendering=o,_.tail=o.sibling,_.renderingStartTime=H(),o.sibling=null,l=en.current,Wt(en,h?l&1|2:l&1),o):(On(o),null);case 22:case 23:return rd(),h=o.memoizedState!==null,i!==null&&i.memoizedState!==null!==h&&(o.flags|=8192),h&&o.mode&1?gi&1073741824&&(On(o),o.subtreeFlags&6&&(o.flags|=8192)):On(o),null;case 24:return null;case 25:return null}throw Error(t(156,o.tag))}function my(i,o){switch(fh(o),o.tag){case 1:return ti(o.type)&&Gl(),i=o.flags,i&65536?(o.flags=i&-65537|128,o):null;case 3:return po(),qt(ei),qt(Dn),Ah(),i=o.flags,i&65536&&!(i&128)?(o.flags=i&-65537|128,o):null;case 5:return Th(o),null;case 13:if(qt(en),i=o.memoizedState,i!==null&&i.dehydrated!==null){if(o.alternate===null)throw Error(t(340));co()}return i=o.flags,i&65536?(o.flags=i&-65537|128,o):null;case 19:return qt(en),null;case 4:return po(),null;case 10:return xh(o.type._context),null;case 22:case 23:return rd(),null;case 24:return null;default:return null}}var cc=!1,Fn=!1,gy=typeof WeakSet=="function"?WeakSet:Set,Ge=null;function go(i,o){var l=i.ref;if(l!==null)if(typeof l=="function")try{l(null)}catch(h){sn(i,o,h)}else l.current=null}function Yh(i,o,l){try{l()}catch(h){sn(i,o,h)}}var Tg=!1;function vy(i,o){if(rh=Nl,i=nm(),Ku(i)){if("selectionStart"in i)var l={start:i.selectionStart,end:i.selectionEnd};else e:{l=(l=i.ownerDocument)&&l.defaultView||window;var h=l.getSelection&&l.getSelection();if(h&&h.rangeCount!==0){l=h.anchorNode;var m=h.anchorOffset,_=h.focusNode;h=h.focusOffset;try{l.nodeType,_.nodeType}catch{l=null;break e}var T=0,D=-1,k=-1,te=0,Se=0,Te=i,xe=null;t:for(;;){for(var Fe;Te!==l||m!==0&&Te.nodeType!==3||(D=T+m),Te!==_||h!==0&&Te.nodeType!==3||(k=T+h),Te.nodeType===3&&(T+=Te.nodeValue.length),(Fe=Te.firstChild)!==null;)xe=Te,Te=Fe;for(;;){if(Te===i)break t;if(xe===l&&++te===m&&(D=T),xe===_&&++Se===h&&(k=T),(Fe=Te.nextSibling)!==null)break;Te=xe,xe=Te.parentNode}Te=Fe}l=D===-1||k===-1?null:{start:D,end:k}}else l=null}l=l||{start:0,end:0}}else l=null;for(sh={focusedElem:i,selectionRange:l},Nl=!1,Ge=o;Ge!==null;)if(o=Ge,i=o.child,(o.subtreeFlags&1028)!==0&&i!==null)i.return=o,Ge=i;else for(;Ge!==null;){o=Ge;try{var Ye=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(Ye!==null){var qe=Ye.memoizedProps,an=Ye.memoizedState,$=o.stateNode,G=$.getSnapshotBeforeUpdate(o.elementType===o.type?qe:Fi(o.type,qe),an);$.__reactInternalSnapshotBeforeUpdate=G}break;case 3:var Z=o.stateNode.containerInfo;Z.nodeType===1?Z.textContent="":Z.nodeType===9&&Z.documentElement&&Z.removeChild(Z.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(Ce){sn(o,o.return,Ce)}if(i=o.sibling,i!==null){i.return=o.return,Ge=i;break}Ge=o.return}return Ye=Tg,Tg=!1,Ye}function ba(i,o,l){var h=o.updateQueue;if(h=h!==null?h.lastEffect:null,h!==null){var m=h=h.next;do{if((m.tag&i)===i){var _=m.destroy;m.destroy=void 0,_!==void 0&&Yh(o,l,_)}m=m.next}while(m!==h)}}function uc(i,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var l=o=o.next;do{if((l.tag&i)===i){var h=l.create;l.destroy=h()}l=l.next}while(l!==o)}}function qh(i){var o=i.ref;if(o!==null){var l=i.stateNode;switch(i.tag){case 5:i=l;break;default:i=l}typeof o=="function"?o(i):o.current=i}}function wg(i){var o=i.alternate;o!==null&&(i.alternate=null,wg(o)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(o=i.stateNode,o!==null&&(delete o[Zi],delete o[Sa],delete o[ch],delete o[Qx],delete o[ey])),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}function Ag(i){return i.tag===5||i.tag===3||i.tag===4}function Rg(i){e:for(;;){for(;i.sibling===null;){if(i.return===null||Ag(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue e;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function jh(i,o,l){var h=i.tag;if(h===5||h===6)i=i.stateNode,o?l.nodeType===8?l.parentNode.insertBefore(i,o):l.insertBefore(i,o):(l.nodeType===8?(o=l.parentNode,o.insertBefore(i,l)):(o=l,o.appendChild(i)),l=l._reactRootContainer,l!=null||o.onclick!==null||(o.onclick=Vl));else if(h!==4&&(i=i.child,i!==null))for(jh(i,o,l),i=i.sibling;i!==null;)jh(i,o,l),i=i.sibling}function $h(i,o,l){var h=i.tag;if(h===5||h===6)i=i.stateNode,o?l.insertBefore(i,o):l.appendChild(i);else if(h!==4&&(i=i.child,i!==null))for($h(i,o,l),i=i.sibling;i!==null;)$h(i,o,l),i=i.sibling}var Cn=null,zi=!1;function Wr(i,o,l){for(l=l.child;l!==null;)Cg(i,o,l),l=l.sibling}function Cg(i,o,l){if(dt&&typeof dt.onCommitFiberUnmount=="function")try{dt.onCommitFiberUnmount(Ze,l)}catch{}switch(l.tag){case 5:Fn||go(l,o);case 6:var h=Cn,m=zi;Cn=null,Wr(i,o,l),Cn=h,zi=m,Cn!==null&&(zi?(i=Cn,l=l.stateNode,i.nodeType===8?i.parentNode.removeChild(l):i.removeChild(l)):Cn.removeChild(l.stateNode));break;case 18:Cn!==null&&(zi?(i=Cn,l=l.stateNode,i.nodeType===8?lh(i.parentNode,l):i.nodeType===1&&lh(i,l),ua(i)):lh(Cn,l.stateNode));break;case 4:h=Cn,m=zi,Cn=l.stateNode.containerInfo,zi=!0,Wr(i,o,l),Cn=h,zi=m;break;case 0:case 11:case 14:case 15:if(!Fn&&(h=l.updateQueue,h!==null&&(h=h.lastEffect,h!==null))){m=h=h.next;do{var _=m,T=_.destroy;_=_.tag,T!==void 0&&(_&2||_&4)&&Yh(l,o,T),m=m.next}while(m!==h)}Wr(i,o,l);break;case 1:if(!Fn&&(go(l,o),h=l.stateNode,typeof h.componentWillUnmount=="function"))try{h.props=l.memoizedProps,h.state=l.memoizedState,h.componentWillUnmount()}catch(D){sn(l,o,D)}Wr(i,o,l);break;case 21:Wr(i,o,l);break;case 22:l.mode&1?(Fn=(h=Fn)||l.memoizedState!==null,Wr(i,o,l),Fn=h):Wr(i,o,l);break;default:Wr(i,o,l)}}function Ng(i){var o=i.updateQueue;if(o!==null){i.updateQueue=null;var l=i.stateNode;l===null&&(l=i.stateNode=new gy),o.forEach(function(h){var m=Ay.bind(null,i,h);l.has(h)||(l.add(h),h.then(m,m))})}}function ki(i,o){var l=o.deletions;if(l!==null)for(var h=0;h<l.length;h++){var m=l[h];try{var _=i,T=o,D=T;e:for(;D!==null;){switch(D.tag){case 5:Cn=D.stateNode,zi=!1;break e;case 3:Cn=D.stateNode.containerInfo,zi=!0;break e;case 4:Cn=D.stateNode.containerInfo,zi=!0;break e}D=D.return}if(Cn===null)throw Error(t(160));Cg(_,T,m),Cn=null,zi=!1;var k=m.alternate;k!==null&&(k.return=null),m.return=null}catch(te){sn(m,o,te)}}if(o.subtreeFlags&12854)for(o=o.child;o!==null;)Lg(o,i),o=o.sibling}function Lg(i,o){var l=i.alternate,h=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:if(ki(o,i),er(i),h&4){try{ba(3,i,i.return),uc(3,i)}catch(qe){sn(i,i.return,qe)}try{ba(5,i,i.return)}catch(qe){sn(i,i.return,qe)}}break;case 1:ki(o,i),er(i),h&512&&l!==null&&go(l,l.return);break;case 5:if(ki(o,i),er(i),h&512&&l!==null&&go(l,l.return),i.flags&32){var m=i.stateNode;try{_t(m,"")}catch(qe){sn(i,i.return,qe)}}if(h&4&&(m=i.stateNode,m!=null)){var _=i.memoizedProps,T=l!==null?l.memoizedProps:_,D=i.type,k=i.updateQueue;if(i.updateQueue=null,k!==null)try{D==="input"&&_.type==="radio"&&_.name!=null&&Mt(m,_),ut(D,T);var te=ut(D,_);for(T=0;T<k.length;T+=2){var Se=k[T],Te=k[T+1];Se==="style"?ot(m,Te):Se==="dangerouslySetInnerHTML"?Ve(m,Te):Se==="children"?_t(m,Te):R(m,Se,Te,te)}switch(D){case"input":xt(m,_);break;case"textarea":_e(m,_);break;case"select":var xe=m._wrapperState.wasMultiple;m._wrapperState.wasMultiple=!!_.multiple;var Fe=_.value;Fe!=null?b(m,!!_.multiple,Fe,!1):xe!==!!_.multiple&&(_.defaultValue!=null?b(m,!!_.multiple,_.defaultValue,!0):b(m,!!_.multiple,_.multiple?[]:"",!1))}m[Sa]=_}catch(qe){sn(i,i.return,qe)}}break;case 6:if(ki(o,i),er(i),h&4){if(i.stateNode===null)throw Error(t(162));m=i.stateNode,_=i.memoizedProps;try{m.nodeValue=_}catch(qe){sn(i,i.return,qe)}}break;case 3:if(ki(o,i),er(i),h&4&&l!==null&&l.memoizedState.isDehydrated)try{ua(o.containerInfo)}catch(qe){sn(i,i.return,qe)}break;case 4:ki(o,i),er(i);break;case 13:ki(o,i),er(i),m=i.child,m.flags&8192&&(_=m.memoizedState!==null,m.stateNode.isHidden=_,!_||m.alternate!==null&&m.alternate.memoizedState!==null||(Jh=H())),h&4&&Ng(i);break;case 22:if(Se=l!==null&&l.memoizedState!==null,i.mode&1?(Fn=(te=Fn)||Se,ki(o,i),Fn=te):ki(o,i),er(i),h&8192){if(te=i.memoizedState!==null,(i.stateNode.isHidden=te)&&!Se&&i.mode&1)for(Ge=i,Se=i.child;Se!==null;){for(Te=Ge=Se;Ge!==null;){switch(xe=Ge,Fe=xe.child,xe.tag){case 0:case 11:case 14:case 15:ba(4,xe,xe.return);break;case 1:go(xe,xe.return);var Ye=xe.stateNode;if(typeof Ye.componentWillUnmount=="function"){h=xe,l=xe.return;try{o=h,Ye.props=o.memoizedProps,Ye.state=o.memoizedState,Ye.componentWillUnmount()}catch(qe){sn(h,l,qe)}}break;case 5:go(xe,xe.return);break;case 22:if(xe.memoizedState!==null){Ig(Te);continue}}Fe!==null?(Fe.return=xe,Ge=Fe):Ig(Te)}Se=Se.sibling}e:for(Se=null,Te=i;;){if(Te.tag===5){if(Se===null){Se=Te;try{m=Te.stateNode,te?(_=m.style,typeof _.setProperty=="function"?_.setProperty("display","none","important"):_.display="none"):(D=Te.stateNode,k=Te.memoizedProps.style,T=k!=null&&k.hasOwnProperty("display")?k.display:null,D.style.display=tt("display",T))}catch(qe){sn(i,i.return,qe)}}}else if(Te.tag===6){if(Se===null)try{Te.stateNode.nodeValue=te?"":Te.memoizedProps}catch(qe){sn(i,i.return,qe)}}else if((Te.tag!==22&&Te.tag!==23||Te.memoizedState===null||Te===i)&&Te.child!==null){Te.child.return=Te,Te=Te.child;continue}if(Te===i)break e;for(;Te.sibling===null;){if(Te.return===null||Te.return===i)break e;Se===Te&&(Se=null),Te=Te.return}Se===Te&&(Se=null),Te.sibling.return=Te.return,Te=Te.sibling}}break;case 19:ki(o,i),er(i),h&4&&Ng(i);break;case 21:break;default:ki(o,i),er(i)}}function er(i){var o=i.flags;if(o&2){try{e:{for(var l=i.return;l!==null;){if(Ag(l)){var h=l;break e}l=l.return}throw Error(t(160))}switch(h.tag){case 5:var m=h.stateNode;h.flags&32&&(_t(m,""),h.flags&=-33);var _=Rg(i);$h(i,_,m);break;case 3:case 4:var T=h.stateNode.containerInfo,D=Rg(i);jh(i,D,T);break;default:throw Error(t(161))}}catch(k){sn(i,i.return,k)}i.flags&=-3}o&4096&&(i.flags&=-4097)}function _y(i,o,l){Ge=i,Pg(i)}function Pg(i,o,l){for(var h=(i.mode&1)!==0;Ge!==null;){var m=Ge,_=m.child;if(m.tag===22&&h){var T=m.memoizedState!==null||cc;if(!T){var D=m.alternate,k=D!==null&&D.memoizedState!==null||Fn;D=cc;var te=Fn;if(cc=T,(Fn=k)&&!te)for(Ge=m;Ge!==null;)T=Ge,k=T.child,T.tag===22&&T.memoizedState!==null?Dg(m):k!==null?(k.return=T,Ge=k):Dg(m);for(;_!==null;)Ge=_,Pg(_),_=_.sibling;Ge=m,cc=D,Fn=te}bg(i)}else m.subtreeFlags&8772&&_!==null?(_.return=m,Ge=_):bg(i)}}function bg(i){for(;Ge!==null;){var o=Ge;if(o.flags&8772){var l=o.alternate;try{if(o.flags&8772)switch(o.tag){case 0:case 11:case 15:Fn||uc(5,o);break;case 1:var h=o.stateNode;if(o.flags&4&&!Fn)if(l===null)h.componentDidMount();else{var m=o.elementType===o.type?l.memoizedProps:Fi(o.type,l.memoizedProps);h.componentDidUpdate(m,l.memoizedState,h.__reactInternalSnapshotBeforeUpdate)}var _=o.updateQueue;_!==null&&Im(o,_,h);break;case 3:var T=o.updateQueue;if(T!==null){if(l=null,o.child!==null)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}Im(o,T,l)}break;case 5:var D=o.stateNode;if(l===null&&o.flags&4){l=D;var k=o.memoizedProps;switch(o.type){case"button":case"input":case"select":case"textarea":k.autoFocus&&l.focus();break;case"img":k.src&&(l.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(o.memoizedState===null){var te=o.alternate;if(te!==null){var Se=te.memoizedState;if(Se!==null){var Te=Se.dehydrated;Te!==null&&ua(Te)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}Fn||o.flags&512&&qh(o)}catch(xe){sn(o,o.return,xe)}}if(o===i){Ge=null;break}if(l=o.sibling,l!==null){l.return=o.return,Ge=l;break}Ge=o.return}}function Ig(i){for(;Ge!==null;){var o=Ge;if(o===i){Ge=null;break}var l=o.sibling;if(l!==null){l.return=o.return,Ge=l;break}Ge=o.return}}function Dg(i){for(;Ge!==null;){var o=Ge;try{switch(o.tag){case 0:case 11:case 15:var l=o.return;try{uc(4,o)}catch(k){sn(o,l,k)}break;case 1:var h=o.stateNode;if(typeof h.componentDidMount=="function"){var m=o.return;try{h.componentDidMount()}catch(k){sn(o,m,k)}}var _=o.return;try{qh(o)}catch(k){sn(o,_,k)}break;case 5:var T=o.return;try{qh(o)}catch(k){sn(o,T,k)}}}catch(k){sn(o,o.return,k)}if(o===i){Ge=null;break}var D=o.sibling;if(D!==null){D.return=o.return,Ge=D;break}Ge=o.return}}var xy=Math.ceil,hc=w.ReactCurrentDispatcher,Kh=w.ReactCurrentOwner,Ri=w.ReactCurrentBatchConfig,Nt=0,En=null,cn=null,Nn=0,gi=0,vo=kr(0),mn=0,Ia=null,Es=0,dc=0,Zh=0,Da=null,ii=null,Jh=0,_o=1/0,_r=null,fc=!1,Qh=null,Xr=null,pc=!1,Yr=null,mc=0,Ua=0,ed=null,gc=-1,vc=0;function Xn(){return Nt&6?H():gc!==-1?gc:gc=H()}function qr(i){return i.mode&1?Nt&2&&Nn!==0?Nn&-Nn:ny.transition!==null?(vc===0&&(vc=Gn()),vc):(i=Et,i!==0||(i=window.event,i=i===void 0?16:Op(i.type)),i):1}function Bi(i,o,l,h){if(50<Ua)throw Ua=0,ed=null,Error(t(185));on(i,l,h),(!(Nt&2)||i!==En)&&(i===En&&(!(Nt&2)&&(dc|=l),mn===4&&jr(i,Nn)),ri(i,h),l===1&&Nt===0&&!(o.mode&1)&&(_o=H()+500,Xl&&Vr()))}function ri(i,o){var l=i.callbackNode;ps(i,o);var h=Di(i,i===En?Nn:0);if(h===0)l!==null&&q(l),i.callbackNode=null,i.callbackPriority=0;else if(o=h&-h,i.callbackPriority!==o){if(l!=null&&q(l),o===1)i.tag===0?ty(Og.bind(null,i)):Sm(Og.bind(null,i)),Zx(function(){!(Nt&6)&&Vr()}),l=null;else{switch(Cp(h)){case 1:l=Ie;break;case 4:l=ze;break;case 16:l=He;break;case 536870912:l=lt;break;default:l=He}l=Wg(l,Ug.bind(null,i))}i.callbackPriority=o,i.callbackNode=l}}function Ug(i,o){if(gc=-1,vc=0,Nt&6)throw Error(t(327));var l=i.callbackNode;if(xo()&&i.callbackNode!==l)return null;var h=Di(i,i===En?Nn:0);if(h===0)return null;if(h&30||h&i.expiredLanes||o)o=_c(i,h);else{o=h;var m=Nt;Nt|=2;var _=zg();(En!==i||Nn!==o)&&(_r=null,_o=H()+500,ws(i,o));do try{My();break}catch(D){Fg(i,D)}while(!0);_h(),hc.current=_,Nt=m,cn!==null?o=0:(En=null,Nn=0,o=mn)}if(o!==0){if(o===2&&(m=Vt(i),m!==0&&(h=m,o=td(i,m))),o===1)throw l=Ia,ws(i,0),jr(i,h),ri(i,H()),l;if(o===6)jr(i,h);else{if(m=i.current.alternate,!(h&30)&&!yy(m)&&(o=_c(i,h),o===2&&(_=Vt(i),_!==0&&(h=_,o=td(i,_))),o===1))throw l=Ia,ws(i,0),jr(i,h),ri(i,H()),l;switch(i.finishedWork=m,i.finishedLanes=h,o){case 0:case 1:throw Error(t(345));case 2:As(i,ii,_r);break;case 3:if(jr(i,h),(h&130023424)===h&&(o=Jh+500-H(),10<o)){if(Di(i,0)!==0)break;if(m=i.suspendedLanes,(m&h)!==h){Xn(),i.pingedLanes|=i.suspendedLanes&m;break}i.timeoutHandle=ah(As.bind(null,i,ii,_r),o);break}As(i,ii,_r);break;case 4:if(jr(i,h),(h&4194240)===h)break;for(o=i.eventTimes,m=-1;0<h;){var T=31-Pt(h);_=1<<T,T=o[T],T>m&&(m=T),h&=~_}if(h=m,h=H()-h,h=(120>h?120:480>h?480:1080>h?1080:1920>h?1920:3e3>h?3e3:4320>h?4320:1960*xy(h/1960))-h,10<h){i.timeoutHandle=ah(As.bind(null,i,ii,_r),h);break}As(i,ii,_r);break;case 5:As(i,ii,_r);break;default:throw Error(t(329))}}}return ri(i,H()),i.callbackNode===l?Ug.bind(null,i):null}function td(i,o){var l=Da;return i.current.memoizedState.isDehydrated&&(ws(i,o).flags|=256),i=_c(i,o),i!==2&&(o=ii,ii=l,o!==null&&nd(o)),i}function nd(i){ii===null?ii=i:ii.push.apply(ii,i)}function yy(i){for(var o=i;;){if(o.flags&16384){var l=o.updateQueue;if(l!==null&&(l=l.stores,l!==null))for(var h=0;h<l.length;h++){var m=l[h],_=m.getSnapshot;m=m.value;try{if(!Ui(_(),m))return!1}catch{return!1}}}if(l=o.child,o.subtreeFlags&16384&&l!==null)l.return=o,o=l;else{if(o===i)break;for(;o.sibling===null;){if(o.return===null||o.return===i)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function jr(i,o){for(o&=~Zh,o&=~dc,i.suspendedLanes|=o,i.pingedLanes&=~o,i=i.expirationTimes;0<o;){var l=31-Pt(o),h=1<<l;i[l]=-1,o&=~h}}function Og(i){if(Nt&6)throw Error(t(327));xo();var o=Di(i,0);if(!(o&1))return ri(i,H()),null;var l=_c(i,o);if(i.tag!==0&&l===2){var h=Vt(i);h!==0&&(o=h,l=td(i,h))}if(l===1)throw l=Ia,ws(i,0),jr(i,o),ri(i,H()),l;if(l===6)throw Error(t(345));return i.finishedWork=i.current.alternate,i.finishedLanes=o,As(i,ii,_r),ri(i,H()),null}function id(i,o){var l=Nt;Nt|=1;try{return i(o)}finally{Nt=l,Nt===0&&(_o=H()+500,Xl&&Vr())}}function Ts(i){Yr!==null&&Yr.tag===0&&!(Nt&6)&&xo();var o=Nt;Nt|=1;var l=Ri.transition,h=Et;try{if(Ri.transition=null,Et=1,i)return i()}finally{Et=h,Ri.transition=l,Nt=o,!(Nt&6)&&Vr()}}function rd(){gi=vo.current,qt(vo)}function ws(i,o){i.finishedWork=null,i.finishedLanes=0;var l=i.timeoutHandle;if(l!==-1&&(i.timeoutHandle=-1,Kx(l)),cn!==null)for(l=cn.return;l!==null;){var h=l;switch(fh(h),h.tag){case 1:h=h.type.childContextTypes,h!=null&&Gl();break;case 3:po(),qt(ei),qt(Dn),Ah();break;case 5:Th(h);break;case 4:po();break;case 13:qt(en);break;case 19:qt(en);break;case 10:xh(h.type._context);break;case 22:case 23:rd()}l=l.return}if(En=i,cn=i=$r(i.current,null),Nn=gi=o,mn=0,Ia=null,Zh=dc=Es=0,ii=Da=null,ys!==null){for(o=0;o<ys.length;o++)if(l=ys[o],h=l.interleaved,h!==null){l.interleaved=null;var m=h.next,_=l.pending;if(_!==null){var T=_.next;_.next=m,h.next=T}l.pending=h}ys=null}return i}function Fg(i,o){do{var l=cn;try{if(_h(),tc.current=sc,nc){for(var h=tn.memoizedState;h!==null;){var m=h.queue;m!==null&&(m.pending=null),h=h.next}nc=!1}if(Ms=0,Mn=pn=tn=null,Ra=!1,Ca=0,Kh.current=null,l===null||l.return===null){mn=1,Ia=o,cn=null;break}e:{var _=i,T=l.return,D=l,k=o;if(o=Nn,D.flags|=32768,k!==null&&typeof k=="object"&&typeof k.then=="function"){var te=k,Se=D,Te=Se.tag;if(!(Se.mode&1)&&(Te===0||Te===11||Te===15)){var xe=Se.alternate;xe?(Se.updateQueue=xe.updateQueue,Se.memoizedState=xe.memoizedState,Se.lanes=xe.lanes):(Se.updateQueue=null,Se.memoizedState=null)}var Fe=lg(T);if(Fe!==null){Fe.flags&=-257,cg(Fe,T,D,_,o),Fe.mode&1&&ag(_,te,o),o=Fe,k=te;var Ye=o.updateQueue;if(Ye===null){var qe=new Set;qe.add(k),o.updateQueue=qe}else Ye.add(k);break e}else{if(!(o&1)){ag(_,te,o),sd();break e}k=Error(t(426))}}else if(Jt&&D.mode&1){var an=lg(T);if(an!==null){!(an.flags&65536)&&(an.flags|=256),cg(an,T,D,_,o),gh(mo(k,D));break e}}_=k=mo(k,D),mn!==4&&(mn=2),Da===null?Da=[_]:Da.push(_),_=T;do{switch(_.tag){case 3:_.flags|=65536,o&=-o,_.lanes|=o;var $=sg(_,k,o);bm(_,$);break e;case 1:D=k;var G=_.type,Z=_.stateNode;if(!(_.flags&128)&&(typeof G.getDerivedStateFromError=="function"||Z!==null&&typeof Z.componentDidCatch=="function"&&(Xr===null||!Xr.has(Z)))){_.flags|=65536,o&=-o,_.lanes|=o;var Ce=og(_,D,o);bm(_,Ce);break e}}_=_.return}while(_!==null)}Bg(l)}catch($e){o=$e,cn===l&&l!==null&&(cn=l=l.return);continue}break}while(!0)}function zg(){var i=hc.current;return hc.current=sc,i===null?sc:i}function sd(){(mn===0||mn===3||mn===2)&&(mn=4),En===null||!(Es&268435455)&&!(dc&268435455)||jr(En,Nn)}function _c(i,o){var l=Nt;Nt|=2;var h=zg();(En!==i||Nn!==o)&&(_r=null,ws(i,o));do try{Sy();break}catch(m){Fg(i,m)}while(!0);if(_h(),Nt=l,hc.current=h,cn!==null)throw Error(t(261));return En=null,Nn=0,mn}function Sy(){for(;cn!==null;)kg(cn)}function My(){for(;cn!==null&&!ne();)kg(cn)}function kg(i){var o=Gg(i.alternate,i,gi);i.memoizedProps=i.pendingProps,o===null?Bg(i):cn=o,Kh.current=null}function Bg(i){var o=i;do{var l=o.alternate;if(i=o.return,o.flags&32768){if(l=my(l,o),l!==null){l.flags&=32767,cn=l;return}if(i!==null)i.flags|=32768,i.subtreeFlags=0,i.deletions=null;else{mn=6,cn=null;return}}else if(l=py(l,o,gi),l!==null){cn=l;return}if(o=o.sibling,o!==null){cn=o;return}cn=o=i}while(o!==null);mn===0&&(mn=5)}function As(i,o,l){var h=Et,m=Ri.transition;try{Ri.transition=null,Et=1,Ey(i,o,l,h)}finally{Ri.transition=m,Et=h}return null}function Ey(i,o,l,h){do xo();while(Yr!==null);if(Nt&6)throw Error(t(327));l=i.finishedWork;var m=i.finishedLanes;if(l===null)return null;if(i.finishedWork=null,i.finishedLanes=0,l===i.current)throw Error(t(177));i.callbackNode=null,i.callbackPriority=0;var _=l.lanes|l.childLanes;if(In(i,_),i===En&&(cn=En=null,Nn=0),!(l.subtreeFlags&2064)&&!(l.flags&2064)||pc||(pc=!0,Wg(He,function(){return xo(),null})),_=(l.flags&15990)!==0,l.subtreeFlags&15990||_){_=Ri.transition,Ri.transition=null;var T=Et;Et=1;var D=Nt;Nt|=4,Kh.current=null,vy(i,l),Lg(l,i),Gx(sh),Nl=!!rh,sh=rh=null,i.current=l,_y(l),ie(),Nt=D,Et=T,Ri.transition=_}else i.current=l;if(pc&&(pc=!1,Yr=i,mc=m),_=i.pendingLanes,_===0&&(Xr=null),Lt(l.stateNode),ri(i,H()),o!==null)for(h=i.onRecoverableError,l=0;l<o.length;l++)m=o[l],h(m.value,{componentStack:m.stack,digest:m.digest});if(fc)throw fc=!1,i=Qh,Qh=null,i;return mc&1&&i.tag!==0&&xo(),_=i.pendingLanes,_&1?i===ed?Ua++:(Ua=0,ed=i):Ua=0,Vr(),null}function xo(){if(Yr!==null){var i=Cp(mc),o=Ri.transition,l=Et;try{if(Ri.transition=null,Et=16>i?16:i,Yr===null)var h=!1;else{if(i=Yr,Yr=null,mc=0,Nt&6)throw Error(t(331));var m=Nt;for(Nt|=4,Ge=i.current;Ge!==null;){var _=Ge,T=_.child;if(Ge.flags&16){var D=_.deletions;if(D!==null){for(var k=0;k<D.length;k++){var te=D[k];for(Ge=te;Ge!==null;){var Se=Ge;switch(Se.tag){case 0:case 11:case 15:ba(8,Se,_)}var Te=Se.child;if(Te!==null)Te.return=Se,Ge=Te;else for(;Ge!==null;){Se=Ge;var xe=Se.sibling,Fe=Se.return;if(wg(Se),Se===te){Ge=null;break}if(xe!==null){xe.return=Fe,Ge=xe;break}Ge=Fe}}}var Ye=_.alternate;if(Ye!==null){var qe=Ye.child;if(qe!==null){Ye.child=null;do{var an=qe.sibling;qe.sibling=null,qe=an}while(qe!==null)}}Ge=_}}if(_.subtreeFlags&2064&&T!==null)T.return=_,Ge=T;else e:for(;Ge!==null;){if(_=Ge,_.flags&2048)switch(_.tag){case 0:case 11:case 15:ba(9,_,_.return)}var $=_.sibling;if($!==null){$.return=_.return,Ge=$;break e}Ge=_.return}}var G=i.current;for(Ge=G;Ge!==null;){T=Ge;var Z=T.child;if(T.subtreeFlags&2064&&Z!==null)Z.return=T,Ge=Z;else e:for(T=G;Ge!==null;){if(D=Ge,D.flags&2048)try{switch(D.tag){case 0:case 11:case 15:uc(9,D)}}catch($e){sn(D,D.return,$e)}if(D===T){Ge=null;break e}var Ce=D.sibling;if(Ce!==null){Ce.return=D.return,Ge=Ce;break e}Ge=D.return}}if(Nt=m,Vr(),dt&&typeof dt.onPostCommitFiberRoot=="function")try{dt.onPostCommitFiberRoot(Ze,i)}catch{}h=!0}return h}finally{Et=l,Ri.transition=o}}return!1}function Vg(i,o,l){o=mo(l,o),o=sg(i,o,1),i=Gr(i,o,1),o=Xn(),i!==null&&(on(i,1,o),ri(i,o))}function sn(i,o,l){if(i.tag===3)Vg(i,i,l);else for(;o!==null;){if(o.tag===3){Vg(o,i,l);break}else if(o.tag===1){var h=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof h.componentDidCatch=="function"&&(Xr===null||!Xr.has(h))){i=mo(l,i),i=og(o,i,1),o=Gr(o,i,1),i=Xn(),o!==null&&(on(o,1,i),ri(o,i));break}}o=o.return}}function Ty(i,o,l){var h=i.pingCache;h!==null&&h.delete(o),o=Xn(),i.pingedLanes|=i.suspendedLanes&l,En===i&&(Nn&l)===l&&(mn===4||mn===3&&(Nn&130023424)===Nn&&500>H()-Jh?ws(i,0):Zh|=l),ri(i,o)}function Hg(i,o){o===0&&(i.mode&1?(o=wt,wt<<=1,!(wt&130023424)&&(wt=4194304)):o=1);var l=Xn();i=mr(i,o),i!==null&&(on(i,o,l),ri(i,l))}function wy(i){var o=i.memoizedState,l=0;o!==null&&(l=o.retryLane),Hg(i,l)}function Ay(i,o){var l=0;switch(i.tag){case 13:var h=i.stateNode,m=i.memoizedState;m!==null&&(l=m.retryLane);break;case 19:h=i.stateNode;break;default:throw Error(t(314))}h!==null&&h.delete(o),Hg(i,l)}var Gg;Gg=function(i,o,l){if(i!==null)if(i.memoizedProps!==o.pendingProps||ei.current)ni=!0;else{if(!(i.lanes&l)&&!(o.flags&128))return ni=!1,fy(i,o,l);ni=!!(i.flags&131072)}else ni=!1,Jt&&o.flags&1048576&&Mm(o,ql,o.index);switch(o.lanes=0,o.tag){case 2:var h=o.type;lc(i,o),i=o.pendingProps;var m=oo(o,Dn.current);fo(o,l),m=Nh(null,o,h,i,m,l);var _=Lh();return o.flags|=1,typeof m=="object"&&m!==null&&typeof m.render=="function"&&m.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,ti(h)?(_=!0,Wl(o)):_=!1,o.memoizedState=m.state!==null&&m.state!==void 0?m.state:null,Mh(o),m.updater=oc,o.stateNode=m,m._reactInternals=o,Oh(o,h,i,l),o=Bh(null,o,h,!0,_,l)):(o.tag=0,Jt&&_&&dh(o),Wn(null,o,m,l),o=o.child),o;case 16:h=o.elementType;e:{switch(lc(i,o),i=o.pendingProps,m=h._init,h=m(h._payload),o.type=h,m=o.tag=Cy(h),i=Fi(h,i),m){case 0:o=kh(null,o,h,i,l);break e;case 1:o=mg(null,o,h,i,l);break e;case 11:o=ug(null,o,h,i,l);break e;case 14:o=hg(null,o,h,Fi(h.type,i),l);break e}throw Error(t(306,h,""))}return o;case 0:return h=o.type,m=o.pendingProps,m=o.elementType===h?m:Fi(h,m),kh(i,o,h,m,l);case 1:return h=o.type,m=o.pendingProps,m=o.elementType===h?m:Fi(h,m),mg(i,o,h,m,l);case 3:e:{if(gg(o),i===null)throw Error(t(387));h=o.pendingProps,_=o.memoizedState,m=_.element,Pm(i,o),Ql(o,h,null,l);var T=o.memoizedState;if(h=T.element,_.isDehydrated)if(_={element:h,isDehydrated:!1,cache:T.cache,pendingSuspenseBoundaries:T.pendingSuspenseBoundaries,transitions:T.transitions},o.updateQueue.baseState=_,o.memoizedState=_,o.flags&256){m=mo(Error(t(423)),o),o=vg(i,o,h,l,m);break e}else if(h!==m){m=mo(Error(t(424)),o),o=vg(i,o,h,l,m);break e}else for(mi=zr(o.stateNode.containerInfo.firstChild),pi=o,Jt=!0,Oi=null,l=Nm(o,null,h,l),o.child=l;l;)l.flags=l.flags&-3|4096,l=l.sibling;else{if(co(),h===m){o=vr(i,o,l);break e}Wn(i,o,h,l)}o=o.child}return o;case 5:return Dm(o),i===null&&mh(o),h=o.type,m=o.pendingProps,_=i!==null?i.memoizedProps:null,T=m.children,oh(h,m)?T=null:_!==null&&oh(h,_)&&(o.flags|=32),pg(i,o),Wn(i,o,T,l),o.child;case 6:return i===null&&mh(o),null;case 13:return _g(i,o,l);case 4:return Eh(o,o.stateNode.containerInfo),h=o.pendingProps,i===null?o.child=uo(o,null,h,l):Wn(i,o,h,l),o.child;case 11:return h=o.type,m=o.pendingProps,m=o.elementType===h?m:Fi(h,m),ug(i,o,h,m,l);case 7:return Wn(i,o,o.pendingProps,l),o.child;case 8:return Wn(i,o,o.pendingProps.children,l),o.child;case 12:return Wn(i,o,o.pendingProps.children,l),o.child;case 10:e:{if(h=o.type._context,m=o.pendingProps,_=o.memoizedProps,T=m.value,Wt(Kl,h._currentValue),h._currentValue=T,_!==null)if(Ui(_.value,T)){if(_.children===m.children&&!ei.current){o=vr(i,o,l);break e}}else for(_=o.child,_!==null&&(_.return=o);_!==null;){var D=_.dependencies;if(D!==null){T=_.child;for(var k=D.firstContext;k!==null;){if(k.context===h){if(_.tag===1){k=gr(-1,l&-l),k.tag=2;var te=_.updateQueue;if(te!==null){te=te.shared;var Se=te.pending;Se===null?k.next=k:(k.next=Se.next,Se.next=k),te.pending=k}}_.lanes|=l,k=_.alternate,k!==null&&(k.lanes|=l),yh(_.return,l,o),D.lanes|=l;break}k=k.next}}else if(_.tag===10)T=_.type===o.type?null:_.child;else if(_.tag===18){if(T=_.return,T===null)throw Error(t(341));T.lanes|=l,D=T.alternate,D!==null&&(D.lanes|=l),yh(T,l,o),T=_.sibling}else T=_.child;if(T!==null)T.return=_;else for(T=_;T!==null;){if(T===o){T=null;break}if(_=T.sibling,_!==null){_.return=T.return,T=_;break}T=T.return}_=T}Wn(i,o,m.children,l),o=o.child}return o;case 9:return m=o.type,h=o.pendingProps.children,fo(o,l),m=wi(m),h=h(m),o.flags|=1,Wn(i,o,h,l),o.child;case 14:return h=o.type,m=Fi(h,o.pendingProps),m=Fi(h.type,m),hg(i,o,h,m,l);case 15:return dg(i,o,o.type,o.pendingProps,l);case 17:return h=o.type,m=o.pendingProps,m=o.elementType===h?m:Fi(h,m),lc(i,o),o.tag=1,ti(h)?(i=!0,Wl(o)):i=!1,fo(o,l),ig(o,h,m),Oh(o,h,m,l),Bh(null,o,h,!0,i,l);case 19:return yg(i,o,l);case 22:return fg(i,o,l)}throw Error(t(156,o.tag))};function Wg(i,o){return C(i,o)}function Ry(i,o,l,h){this.tag=i,this.key=l,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=h,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ci(i,o,l,h){return new Ry(i,o,l,h)}function od(i){return i=i.prototype,!(!i||!i.isReactComponent)}function Cy(i){if(typeof i=="function")return od(i)?1:0;if(i!=null){if(i=i.$$typeof,i===se)return 11;if(i===ve)return 14}return 2}function $r(i,o){var l=i.alternate;return l===null?(l=Ci(i.tag,o,i.key,i.mode),l.elementType=i.elementType,l.type=i.type,l.stateNode=i.stateNode,l.alternate=i,i.alternate=l):(l.pendingProps=o,l.type=i.type,l.flags=0,l.subtreeFlags=0,l.deletions=null),l.flags=i.flags&14680064,l.childLanes=i.childLanes,l.lanes=i.lanes,l.child=i.child,l.memoizedProps=i.memoizedProps,l.memoizedState=i.memoizedState,l.updateQueue=i.updateQueue,o=i.dependencies,l.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},l.sibling=i.sibling,l.index=i.index,l.ref=i.ref,l}function xc(i,o,l,h,m,_){var T=2;if(h=i,typeof i=="function")od(i)&&(T=1);else if(typeof i=="string")T=5;else e:switch(i){case O:return Rs(l.children,m,_,o);case Y:T=8,m|=8;break;case P:return i=Ci(12,l,o,m|2),i.elementType=P,i.lanes=_,i;case K:return i=Ci(13,l,o,m),i.elementType=K,i.lanes=_,i;case fe:return i=Ci(19,l,o,m),i.elementType=fe,i.lanes=_,i;case de:return yc(l,m,_,o);default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case N:T=10;break e;case I:T=9;break e;case se:T=11;break e;case ve:T=14;break e;case ue:T=16,h=null;break e}throw Error(t(130,i==null?i:typeof i,""))}return o=Ci(T,l,o,m),o.elementType=i,o.type=h,o.lanes=_,o}function Rs(i,o,l,h){return i=Ci(7,i,h,o),i.lanes=l,i}function yc(i,o,l,h){return i=Ci(22,i,h,o),i.elementType=de,i.lanes=l,i.stateNode={isHidden:!1},i}function ad(i,o,l){return i=Ci(6,i,null,o),i.lanes=l,i}function ld(i,o,l){return o=Ci(4,i.children!==null?i.children:[],i.key,o),o.lanes=l,o.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},o}function Ny(i,o,l,h,m){this.tag=o,this.containerInfo=i,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=bn(0),this.expirationTimes=bn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=bn(0),this.identifierPrefix=h,this.onRecoverableError=m,this.mutableSourceEagerHydrationData=null}function cd(i,o,l,h,m,_,T,D,k){return i=new Ny(i,o,l,D,k),o===1?(o=1,_===!0&&(o|=8)):o=0,_=Ci(3,null,null,o),i.current=_,_.stateNode=i,_.memoizedState={element:h,isDehydrated:l,cache:null,transitions:null,pendingSuspenseBoundaries:null},Mh(_),i}function Ly(i,o,l){var h=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:U,key:h==null?null:""+h,children:i,containerInfo:o,implementation:l}}function Xg(i){if(!i)return Br;i=i._reactInternals;e:{if(Ki(i)!==i||i.tag!==1)throw Error(t(170));var o=i;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(ti(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(t(171))}if(i.tag===1){var l=i.type;if(ti(l))return xm(i,l,o)}return o}function Yg(i,o,l,h,m,_,T,D,k){return i=cd(l,h,!0,i,m,_,T,D,k),i.context=Xg(null),l=i.current,h=Xn(),m=qr(l),_=gr(h,m),_.callback=o??null,Gr(l,_,m),i.current.lanes=m,on(i,m,h),ri(i,h),i}function Sc(i,o,l,h){var m=o.current,_=Xn(),T=qr(m);return l=Xg(l),o.context===null?o.context=l:o.pendingContext=l,o=gr(_,T),o.payload={element:i},h=h===void 0?null:h,h!==null&&(o.callback=h),i=Gr(m,o,T),i!==null&&(Bi(i,m,T,_),Jl(i,m,T)),T}function Mc(i){if(i=i.current,!i.child)return null;switch(i.child.tag){case 5:return i.child.stateNode;default:return i.child.stateNode}}function qg(i,o){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var l=i.retryLane;i.retryLane=l!==0&&l<o?l:o}}function ud(i,o){qg(i,o),(i=i.alternate)&&qg(i,o)}function Py(){return null}var jg=typeof reportError=="function"?reportError:function(i){console.error(i)};function hd(i){this._internalRoot=i}Ec.prototype.render=hd.prototype.render=function(i){var o=this._internalRoot;if(o===null)throw Error(t(409));Sc(i,o,null,null)},Ec.prototype.unmount=hd.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var o=i.containerInfo;Ts(function(){Sc(null,i,null,null)}),o[hr]=null}};function Ec(i){this._internalRoot=i}Ec.prototype.unstable_scheduleHydration=function(i){if(i){var o=Pp();i={blockedOn:null,target:i,priority:o};for(var l=0;l<Ur.length&&o!==0&&o<Ur[l].priority;l++);Ur.splice(l,0,i),l===0&&Dp(i)}};function dd(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}function Tc(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11&&(i.nodeType!==8||i.nodeValue!==" react-mount-point-unstable "))}function $g(){}function by(i,o,l,h,m){if(m){if(typeof h=="function"){var _=h;h=function(){var te=Mc(T);_.call(te)}}var T=Yg(o,h,i,0,null,!1,!1,"",$g);return i._reactRootContainer=T,i[hr]=T.current,xa(i.nodeType===8?i.parentNode:i),Ts(),T}for(;m=i.lastChild;)i.removeChild(m);if(typeof h=="function"){var D=h;h=function(){var te=Mc(k);D.call(te)}}var k=cd(i,0,!1,null,null,!1,!1,"",$g);return i._reactRootContainer=k,i[hr]=k.current,xa(i.nodeType===8?i.parentNode:i),Ts(function(){Sc(o,k,l,h)}),k}function wc(i,o,l,h,m){var _=l._reactRootContainer;if(_){var T=_;if(typeof m=="function"){var D=m;m=function(){var k=Mc(T);D.call(k)}}Sc(o,T,i,m)}else T=by(l,o,i,m,h);return Mc(T)}Np=function(i){switch(i.tag){case 3:var o=i.stateNode;if(o.current.memoizedState.isDehydrated){var l=Rn(o.pendingLanes);l!==0&&(ms(o,l|1),ri(o,H()),!(Nt&6)&&(_o=H()+500,Vr()))}break;case 13:Ts(function(){var h=mr(i,1);if(h!==null){var m=Xn();Bi(h,i,1,m)}}),ud(i,1)}},Fu=function(i){if(i.tag===13){var o=mr(i,134217728);if(o!==null){var l=Xn();Bi(o,i,134217728,l)}ud(i,134217728)}},Lp=function(i){if(i.tag===13){var o=qr(i),l=mr(i,o);if(l!==null){var h=Xn();Bi(l,i,o,h)}ud(i,o)}},Pp=function(){return Et},bp=function(i,o){var l=Et;try{return Et=i,o()}finally{Et=l}},be=function(i,o,l){switch(o){case"input":if(xt(i,l),o=l.name,l.type==="radio"&&o!=null){for(l=i;l.parentNode;)l=l.parentNode;for(l=l.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),o=0;o<l.length;o++){var h=l[o];if(h!==i&&h.form===i.form){var m=Hl(h);if(!m)throw Error(t(90));Tt(h),xt(h,m)}}}break;case"textarea":_e(i,l);break;case"select":o=l.value,o!=null&&b(i,!!l.multiple,o,!1)}},Xt=id,fn=Ts;var Iy={usingClientEntryPoint:!1,Events:[Ma,ro,Hl,Ue,ht,id]},Oa={findFiberByHostInstance:gs,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Dy={bundleType:Oa.bundleType,version:Oa.version,rendererPackageName:Oa.rendererPackageName,rendererConfig:Oa.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(i){return i=wl(i),i===null?null:i.stateNode},findFiberByHostInstance:Oa.findFiberByHostInstance||Py,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ac.isDisabled&&Ac.supportsFiber)try{Ze=Ac.inject(Dy),dt=Ac}catch{}}return si.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Iy,si.createPortal=function(i,o){var l=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!dd(o))throw Error(t(200));return Ly(i,o,null,l)},si.createRoot=function(i,o){if(!dd(i))throw Error(t(299));var l=!1,h="",m=jg;return o!=null&&(o.unstable_strictMode===!0&&(l=!0),o.identifierPrefix!==void 0&&(h=o.identifierPrefix),o.onRecoverableError!==void 0&&(m=o.onRecoverableError)),o=cd(i,1,!1,null,null,l,!1,h,m),i[hr]=o.current,xa(i.nodeType===8?i.parentNode:i),new hd(o)},si.findDOMNode=function(i){if(i==null)return null;if(i.nodeType===1)return i;var o=i._reactInternals;if(o===void 0)throw typeof i.render=="function"?Error(t(188)):(i=Object.keys(i).join(","),Error(t(268,i)));return i=wl(o),i=i===null?null:i.stateNode,i},si.flushSync=function(i){return Ts(i)},si.hydrate=function(i,o,l){if(!Tc(o))throw Error(t(200));return wc(null,i,o,!0,l)},si.hydrateRoot=function(i,o,l){if(!dd(i))throw Error(t(405));var h=l!=null&&l.hydratedSources||null,m=!1,_="",T=jg;if(l!=null&&(l.unstable_strictMode===!0&&(m=!0),l.identifierPrefix!==void 0&&(_=l.identifierPrefix),l.onRecoverableError!==void 0&&(T=l.onRecoverableError)),o=Yg(o,null,i,1,l??null,m,!1,_,T),i[hr]=o.current,xa(i),h)for(i=0;i<h.length;i++)l=h[i],m=l._getVersion,m=m(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,m]:o.mutableSourceEagerHydrationData.push(l,m);return new Ec(o)},si.render=function(i,o,l){if(!Tc(o))throw Error(t(200));return wc(null,i,o,!1,l)},si.unmountComponentAtNode=function(i){if(!Tc(i))throw Error(t(40));return i._reactRootContainer?(Ts(function(){wc(null,null,i,!1,function(){i._reactRootContainer=null,i[hr]=null})}),!0):!1},si.unstable_batchedUpdates=id,si.unstable_renderSubtreeIntoContainer=function(i,o,l,h){if(!Tc(l))throw Error(t(200));if(i==null||i._reactInternals===void 0)throw Error(t(38));return wc(i,o,l,!1,h)},si.version="18.3.1-next-f1338f8080-20240426",si}var ov;function L_(){if(ov)return _d.exports;ov=1;function r(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}return r(),_d.exports=Wy(),_d.exports}var av;function Xy(){if(av)return Rc;av=1;var r=L_();return Rc.createRoot=r.createRoot,Rc.hydrateRoot=r.hydrateRoot,Rc}var Yy=Xy();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const np="171",Vo={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Fo={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},qy=0,lv=1,jy=2,P_=1,$y=2,Tr=3,ls=0,Kn=1,$n=2,os=0,Ho=1,cv=2,uv=3,hv=4,Ky=5,Fs=100,Zy=101,Jy=102,Qy=103,eS=104,tS=200,nS=201,iS=202,rS=203,lf=204,cf=205,sS=206,oS=207,aS=208,lS=209,cS=210,uS=211,hS=212,dS=213,fS=214,uf=0,hf=1,df=2,qo=3,ff=4,pf=5,mf=6,gf=7,b_=0,pS=1,mS=2,qi=0,gS=1,vS=2,_S=3,xS=4,yS=5,SS=6,MS=7,ip=300,Gs=301,Ws=302,vf=303,_f=304,yu=306,xf=1e3,ks=1001,yf=1002,Si=1003,ES=1004,Cc=1005,ir=1006,Sd=1007,ss=1008,Cr=1009,I_=1010,D_=1011,il=1012,Su=1013,cs=1014,Ar=1015,ea=1016,rp=1017,sp=1018,jo=1020,U_=35902,O_=1021,F_=1022,Yi=1023,z_=1024,k_=1025,Go=1026,$o=1027,B_=1028,op=1029,V_=1030,ap=1031,lp=1033,iu=33776,ru=33777,su=33778,ou=33779,Sf=35840,Mf=35841,Ef=35842,Tf=35843,wf=36196,Af=37492,Rf=37496,Cf=37808,Nf=37809,Lf=37810,Pf=37811,bf=37812,If=37813,Df=37814,Uf=37815,Of=37816,Ff=37817,zf=37818,kf=37819,Bf=37820,Vf=37821,au=36492,Hf=36494,Gf=36495,H_=36283,Wf=36284,Xf=36285,Yf=36286,TS=3200,wS=3201,uu=0,G_=1,nr="",Pi="srgb",Ko="srgb-linear",hu="linear",Ft="srgb",yo=7680,dv=519,AS=512,RS=513,CS=514,W_=515,NS=516,LS=517,PS=518,bS=519,du=35044,fv="300 es",rr=2e3,rl=2001;class hs{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const a=s.indexOf(t);a!==-1&&s.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let a=0,c=s.length;a<c;a++)s[a].call(this,e);e.target=null}}}const zn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let pv=1234567;const Ja=Math.PI/180,sl=180/Math.PI;function sr(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(zn[r&255]+zn[r>>8&255]+zn[r>>16&255]+zn[r>>24&255]+"-"+zn[e&255]+zn[e>>8&255]+"-"+zn[e>>16&15|64]+zn[e>>24&255]+"-"+zn[t&63|128]+zn[t>>8&255]+"-"+zn[t>>16&255]+zn[t>>24&255]+zn[n&255]+zn[n>>8&255]+zn[n>>16&255]+zn[n>>24&255]).toLowerCase()}function vt(r,e,t){return Math.max(e,Math.min(t,r))}function cp(r,e){return(r%e+e)%e}function IS(r,e,t,n,s){return n+(r-e)*(s-n)/(t-e)}function DS(r,e,t){return r!==e?(t-r)/(e-r):0}function Qa(r,e,t){return(1-t)*r+t*e}function US(r,e,t,n){return Qa(r,e,1-Math.exp(-t*n))}function OS(r,e=1){return e-Math.abs(cp(r,e*2)-e)}function FS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function zS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function kS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function BS(r,e){return r+Math.random()*(e-r)}function VS(r){return r*(.5-Math.random())}function HS(r){r!==void 0&&(pv=r);let e=pv+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function GS(r){return r*Ja}function WS(r){return r*sl}function XS(r){return(r&r-1)===0&&r!==0}function YS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function qS(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function jS(r,e,t,n,s){const a=Math.cos,c=Math.sin,u=a(t/2),d=c(t/2),f=a((e+n)/2),p=c((e+n)/2),g=a((e-n)/2),v=c((e-n)/2),y=a((n-e)/2),M=c((n-e)/2);switch(s){case"XYX":r.set(u*p,d*g,d*v,u*f);break;case"YZY":r.set(d*v,u*p,d*g,u*f);break;case"ZXZ":r.set(d*g,d*v,u*p,u*f);break;case"XZX":r.set(u*p,d*M,d*y,u*f);break;case"YXY":r.set(d*y,u*p,d*M,u*f);break;case"ZYZ":r.set(d*M,d*y,u*p,u*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Wi(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function kt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const X_={DEG2RAD:Ja,RAD2DEG:sl,generateUUID:sr,clamp:vt,euclideanModulo:cp,mapLinear:IS,inverseLerp:DS,lerp:Qa,damp:US,pingpong:OS,smoothstep:FS,smootherstep:zS,randInt:kS,randFloat:BS,randFloatSpread:VS,seededRandom:HS,degToRad:GS,radToDeg:WS,isPowerOfTwo:XS,ceilPowerOfTwo:YS,floorPowerOfTwo:qS,setQuaternionFromProperEuler:jS,normalize:kt,denormalize:Wi};class Q{constructor(e=0,t=0){Q.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=vt(this.x,e.x,t.x),this.y=vt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=vt(this.x,e,t),this.y=vt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(vt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(vt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),a=this.x-e.x,c=this.y-e.y;return this.x=a*n-c*s+e.x,this.y=a*s+c*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ft{constructor(e,t,n,s,a,c,u,d,f){ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,s,a,c,u,d,f)}set(e,t,n,s,a,c,u,d,f){const p=this.elements;return p[0]=e,p[1]=s,p[2]=u,p[3]=t,p[4]=a,p[5]=d,p[6]=n,p[7]=c,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,a=this.elements,c=n[0],u=n[3],d=n[6],f=n[1],p=n[4],g=n[7],v=n[2],y=n[5],M=n[8],E=s[0],S=s[3],x=s[6],L=s[1],R=s[4],w=s[7],z=s[2],U=s[5],O=s[8];return a[0]=c*E+u*L+d*z,a[3]=c*S+u*R+d*U,a[6]=c*x+u*w+d*O,a[1]=f*E+p*L+g*z,a[4]=f*S+p*R+g*U,a[7]=f*x+p*w+g*O,a[2]=v*E+y*L+M*z,a[5]=v*S+y*R+M*U,a[8]=v*x+y*w+M*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],a=e[3],c=e[4],u=e[5],d=e[6],f=e[7],p=e[8];return t*c*p-t*u*f-n*a*p+n*u*d+s*a*f-s*c*d}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],a=e[3],c=e[4],u=e[5],d=e[6],f=e[7],p=e[8],g=p*c-u*f,v=u*d-p*a,y=f*a-c*d,M=t*g+n*v+s*y;if(M===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/M;return e[0]=g*E,e[1]=(s*f-p*n)*E,e[2]=(u*n-s*c)*E,e[3]=v*E,e[4]=(p*t-s*d)*E,e[5]=(s*a-u*t)*E,e[6]=y*E,e[7]=(n*d-f*t)*E,e[8]=(c*t-n*a)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,a,c,u){const d=Math.cos(a),f=Math.sin(a);return this.set(n*d,n*f,-n*(d*c+f*u)+c+e,-s*f,s*d,-s*(-f*c+d*u)+u+t,0,0,1),this}scale(e,t){return this.premultiply(Md.makeScale(e,t)),this}rotate(e){return this.premultiply(Md.makeRotation(-e)),this}translate(e,t){return this.premultiply(Md.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Md=new ft;function Y_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function fu(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function $S(){const r=fu("canvas");return r.style.display="block",r}const mv={};function Uo(r){r in mv||(mv[r]=!0,console.warn(r))}function KS(r,e,t){return new Promise(function(n,s){function a(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:s();break;case r.TIMEOUT_EXPIRED:setTimeout(a,t);break;default:n()}}setTimeout(a,t)})}function ZS(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function JS(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const gv=new ft().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),vv=new ft().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function QS(){const r={enabled:!0,workingColorSpace:Ko,spaces:{},convert:function(s,a,c){return this.enabled===!1||a===c||!a||!c||(this.spaces[a].transfer===Ft&&(s.r=Rr(s.r),s.g=Rr(s.g),s.b=Rr(s.b)),this.spaces[a].primaries!==this.spaces[c].primaries&&(s.applyMatrix3(this.spaces[a].toXYZ),s.applyMatrix3(this.spaces[c].fromXYZ)),this.spaces[c].transfer===Ft&&(s.r=Wo(s.r),s.g=Wo(s.g),s.b=Wo(s.b))),s},fromWorkingColorSpace:function(s,a){return this.convert(s,this.workingColorSpace,a)},toWorkingColorSpace:function(s,a){return this.convert(s,a,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===nr?hu:this.spaces[s].transfer},getLuminanceCoefficients:function(s,a=this.workingColorSpace){return s.fromArray(this.spaces[a].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,a,c){return s.copy(this.spaces[a].toXYZ).multiply(this.spaces[c].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[Ko]:{primaries:e,whitePoint:n,transfer:hu,toXYZ:gv,fromXYZ:vv,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Pi},outputColorSpaceConfig:{drawingBufferColorSpace:Pi}},[Pi]:{primaries:e,whitePoint:n,transfer:Ft,toXYZ:gv,fromXYZ:vv,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Pi}}}),r}const gt=QS();function Rr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Wo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let So;class eM{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{So===void 0&&(So=fu("canvas")),So.width=e.width,So.height=e.height;const n=So.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=So}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=fu("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),a=s.data;for(let c=0;c<a.length;c++)a[c]=Rr(a[c]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Rr(t[n]/255)*255):t[n]=Rr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let tM=0;class q_{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:tM++}),this.uuid=sr(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let a;if(Array.isArray(s)){a=[];for(let c=0,u=s.length;c<u;c++)s[c].isDataTexture?a.push(Ed(s[c].image)):a.push(Ed(s[c]))}else a=Ed(s);n.url=a}return t||(e.images[this.uuid]=n),n}}function Ed(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?eM.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let nM=0;class Zn extends hs{constructor(e=Zn.DEFAULT_IMAGE,t=Zn.DEFAULT_MAPPING,n=ks,s=ks,a=ir,c=ss,u=Yi,d=Cr,f=Zn.DEFAULT_ANISOTROPY,p=nr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:nM++}),this.uuid=sr(),this.name="",this.source=new q_(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=a,this.minFilter=c,this.anisotropy=f,this.format=u,this.internalFormat=null,this.type=d,this.offset=new Q(0,0),this.repeat=new Q(1,1),this.center=new Q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ip)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case xf:e.x=e.x-Math.floor(e.x);break;case ks:e.x=e.x<0?0:1;break;case yf:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case xf:e.y=e.y-Math.floor(e.y);break;case ks:e.y=e.y<0?0:1;break;case yf:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Zn.DEFAULT_IMAGE=null;Zn.DEFAULT_MAPPING=ip;Zn.DEFAULT_ANISOTROPY=1;class $t{constructor(e=0,t=0,n=0,s=1){$t.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,a=this.w,c=e.elements;return this.x=c[0]*t+c[4]*n+c[8]*s+c[12]*a,this.y=c[1]*t+c[5]*n+c[9]*s+c[13]*a,this.z=c[2]*t+c[6]*n+c[10]*s+c[14]*a,this.w=c[3]*t+c[7]*n+c[11]*s+c[15]*a,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,a;const d=e.elements,f=d[0],p=d[4],g=d[8],v=d[1],y=d[5],M=d[9],E=d[2],S=d[6],x=d[10];if(Math.abs(p-v)<.01&&Math.abs(g-E)<.01&&Math.abs(M-S)<.01){if(Math.abs(p+v)<.1&&Math.abs(g+E)<.1&&Math.abs(M+S)<.1&&Math.abs(f+y+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const R=(f+1)/2,w=(y+1)/2,z=(x+1)/2,U=(p+v)/4,O=(g+E)/4,Y=(M+S)/4;return R>w&&R>z?R<.01?(n=0,s=.707106781,a=.707106781):(n=Math.sqrt(R),s=U/n,a=O/n):w>z?w<.01?(n=.707106781,s=0,a=.707106781):(s=Math.sqrt(w),n=U/s,a=Y/s):z<.01?(n=.707106781,s=.707106781,a=0):(a=Math.sqrt(z),n=O/a,s=Y/a),this.set(n,s,a,t),this}let L=Math.sqrt((S-M)*(S-M)+(g-E)*(g-E)+(v-p)*(v-p));return Math.abs(L)<.001&&(L=1),this.x=(S-M)/L,this.y=(g-E)/L,this.z=(v-p)/L,this.w=Math.acos((f+y+x-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=vt(this.x,e.x,t.x),this.y=vt(this.y,e.y,t.y),this.z=vt(this.z,e.z,t.z),this.w=vt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=vt(this.x,e,t),this.y=vt(this.y,e,t),this.z=vt(this.z,e,t),this.w=vt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(vt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class up extends hs{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new $t(0,0,e,t),this.scissorTest=!1,this.viewport=new $t(0,0,e,t);const s={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ir,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const a=new Zn(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);a.flipY=!1,a.generateMipmaps=n.generateMipmaps,a.internalFormat=n.internalFormat,this.textures=[];const c=n.count;for(let u=0;u<c;u++)this.textures[u]=a.clone(),this.textures[u].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let s=0,a=this.textures.length;s<a;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,s=e.textures.length;n<s;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new q_(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xs extends up{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class j_ extends Zn{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Si,this.minFilter=Si,this.wrapR=ks,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class iM extends Zn{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Si,this.minFilter=Si,this.wrapR=ks,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ys{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,a,c,u){let d=n[s+0],f=n[s+1],p=n[s+2],g=n[s+3];const v=a[c+0],y=a[c+1],M=a[c+2],E=a[c+3];if(u===0){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u===1){e[t+0]=v,e[t+1]=y,e[t+2]=M,e[t+3]=E;return}if(g!==E||d!==v||f!==y||p!==M){let S=1-u;const x=d*v+f*y+p*M+g*E,L=x>=0?1:-1,R=1-x*x;if(R>Number.EPSILON){const z=Math.sqrt(R),U=Math.atan2(z,x*L);S=Math.sin(S*U)/z,u=Math.sin(u*U)/z}const w=u*L;if(d=d*S+v*w,f=f*S+y*w,p=p*S+M*w,g=g*S+E*w,S===1-u){const z=1/Math.sqrt(d*d+f*f+p*p+g*g);d*=z,f*=z,p*=z,g*=z}}e[t]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g}static multiplyQuaternionsFlat(e,t,n,s,a,c){const u=n[s],d=n[s+1],f=n[s+2],p=n[s+3],g=a[c],v=a[c+1],y=a[c+2],M=a[c+3];return e[t]=u*M+p*g+d*y-f*v,e[t+1]=d*M+p*v+f*g-u*y,e[t+2]=f*M+p*y+u*v-d*g,e[t+3]=p*M-u*g-d*v-f*y,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,s=e._y,a=e._z,c=e._order,u=Math.cos,d=Math.sin,f=u(n/2),p=u(s/2),g=u(a/2),v=d(n/2),y=d(s/2),M=d(a/2);switch(c){case"XYZ":this._x=v*p*g+f*y*M,this._y=f*y*g-v*p*M,this._z=f*p*M+v*y*g,this._w=f*p*g-v*y*M;break;case"YXZ":this._x=v*p*g+f*y*M,this._y=f*y*g-v*p*M,this._z=f*p*M-v*y*g,this._w=f*p*g+v*y*M;break;case"ZXY":this._x=v*p*g-f*y*M,this._y=f*y*g+v*p*M,this._z=f*p*M+v*y*g,this._w=f*p*g-v*y*M;break;case"ZYX":this._x=v*p*g-f*y*M,this._y=f*y*g+v*p*M,this._z=f*p*M-v*y*g,this._w=f*p*g+v*y*M;break;case"YZX":this._x=v*p*g+f*y*M,this._y=f*y*g+v*p*M,this._z=f*p*M-v*y*g,this._w=f*p*g-v*y*M;break;case"XZY":this._x=v*p*g-f*y*M,this._y=f*y*g-v*p*M,this._z=f*p*M+v*y*g,this._w=f*p*g+v*y*M;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+c)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],a=t[8],c=t[1],u=t[5],d=t[9],f=t[2],p=t[6],g=t[10],v=n+u+g;if(v>0){const y=.5/Math.sqrt(v+1);this._w=.25/y,this._x=(p-d)*y,this._y=(a-f)*y,this._z=(c-s)*y}else if(n>u&&n>g){const y=2*Math.sqrt(1+n-u-g);this._w=(p-d)/y,this._x=.25*y,this._y=(s+c)/y,this._z=(a+f)/y}else if(u>g){const y=2*Math.sqrt(1+u-n-g);this._w=(a-f)/y,this._x=(s+c)/y,this._y=.25*y,this._z=(d+p)/y}else{const y=2*Math.sqrt(1+g-n-u);this._w=(c-s)/y,this._x=(a+f)/y,this._y=(d+p)/y,this._z=.25*y}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(vt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,a=e._z,c=e._w,u=t._x,d=t._y,f=t._z,p=t._w;return this._x=n*p+c*u+s*f-a*d,this._y=s*p+c*d+a*u-n*f,this._z=a*p+c*f+n*d-s*u,this._w=c*p-n*u-s*d-a*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,a=this._z,c=this._w;let u=c*e._w+n*e._x+s*e._y+a*e._z;if(u<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,u=-u):this.copy(e),u>=1)return this._w=c,this._x=n,this._y=s,this._z=a,this;const d=1-u*u;if(d<=Number.EPSILON){const y=1-t;return this._w=y*c+t*this._w,this._x=y*n+t*this._x,this._y=y*s+t*this._y,this._z=y*a+t*this._z,this.normalize(),this}const f=Math.sqrt(d),p=Math.atan2(f,u),g=Math.sin((1-t)*p)/f,v=Math.sin(t*p)/f;return this._w=c*g+this._w*v,this._x=n*g+this._x*v,this._y=s*g+this._y*v,this._z=a*g+this._z*v,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),a=Math.sqrt(n);return this.set(s*Math.sin(e),s*Math.cos(e),a*Math.sin(t),a*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class W{constructor(e=0,t=0,n=0){W.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(_v.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_v.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*s,this.y=a[1]*t+a[4]*n+a[7]*s,this.z=a[2]*t+a[5]*n+a[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,a=e.elements,c=1/(a[3]*t+a[7]*n+a[11]*s+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*s+a[12])*c,this.y=(a[1]*t+a[5]*n+a[9]*s+a[13])*c,this.z=(a[2]*t+a[6]*n+a[10]*s+a[14])*c,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,a=e.x,c=e.y,u=e.z,d=e.w,f=2*(c*s-u*n),p=2*(u*t-a*s),g=2*(a*n-c*t);return this.x=t+d*f+c*g-u*p,this.y=n+d*p+u*f-a*g,this.z=s+d*g+a*p-c*f,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*s,this.y=a[1]*t+a[5]*n+a[9]*s,this.z=a[2]*t+a[6]*n+a[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=vt(this.x,e.x,t.x),this.y=vt(this.y,e.y,t.y),this.z=vt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=vt(this.x,e,t),this.y=vt(this.y,e,t),this.z=vt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(vt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,a=e.z,c=t.x,u=t.y,d=t.z;return this.x=s*d-a*u,this.y=a*c-n*d,this.z=n*u-s*c,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Td.copy(this).projectOnVector(e),this.sub(Td)}reflect(e){return this.sub(Td.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(vt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Td=new W,_v=new Ys;class ul{constructor(e=new W(1/0,1/0,1/0),t=new W(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Vi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Vi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Vi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const a=n.getAttribute("position");if(t===!0&&a!==void 0&&e.isInstancedMesh!==!0)for(let c=0,u=a.count;c<u;c++)e.isMesh===!0?e.getVertexPosition(c,Vi):Vi.fromBufferAttribute(a,c),Vi.applyMatrix4(e.matrixWorld),this.expandByPoint(Vi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Nc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Nc.copy(n.boundingBox)),Nc.applyMatrix4(e.matrixWorld),this.union(Nc)}const s=e.children;for(let a=0,c=s.length;a<c;a++)this.expandByObject(s[a],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Vi),Vi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(za),Lc.subVectors(this.max,za),Mo.subVectors(e.a,za),Eo.subVectors(e.b,za),To.subVectors(e.c,za),Zr.subVectors(Eo,Mo),Jr.subVectors(To,Eo),Ns.subVectors(Mo,To);let t=[0,-Zr.z,Zr.y,0,-Jr.z,Jr.y,0,-Ns.z,Ns.y,Zr.z,0,-Zr.x,Jr.z,0,-Jr.x,Ns.z,0,-Ns.x,-Zr.y,Zr.x,0,-Jr.y,Jr.x,0,-Ns.y,Ns.x,0];return!wd(t,Mo,Eo,To,Lc)||(t=[1,0,0,0,1,0,0,0,1],!wd(t,Mo,Eo,To,Lc))?!1:(Pc.crossVectors(Zr,Jr),t=[Pc.x,Pc.y,Pc.z],wd(t,Mo,Eo,To,Lc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Vi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Vi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(xr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),xr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),xr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),xr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),xr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),xr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),xr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),xr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(xr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const xr=[new W,new W,new W,new W,new W,new W,new W,new W],Vi=new W,Nc=new ul,Mo=new W,Eo=new W,To=new W,Zr=new W,Jr=new W,Ns=new W,za=new W,Lc=new W,Pc=new W,Ls=new W;function wd(r,e,t,n,s){for(let a=0,c=r.length-3;a<=c;a+=3){Ls.fromArray(r,a);const u=s.x*Math.abs(Ls.x)+s.y*Math.abs(Ls.y)+s.z*Math.abs(Ls.z),d=e.dot(Ls),f=t.dot(Ls),p=n.dot(Ls);if(Math.max(-Math.max(d,f,p),Math.min(d,f,p))>u)return!1}return!0}const rM=new ul,ka=new W,Ad=new W;class Mu{constructor(e=new W,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):rM.setFromPoints(e).getCenter(n);let s=0;for(let a=0,c=e.length;a<c;a++)s=Math.max(s,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ka.subVectors(e,this.center);const t=ka.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector(ka,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Ad.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ka.copy(e.center).add(Ad)),this.expandByPoint(ka.copy(e.center).sub(Ad))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const yr=new W,Rd=new W,bc=new W,Qr=new W,Cd=new W,Ic=new W,Nd=new W;class hp{constructor(e=new W,t=new W(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,yr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=yr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(yr.copy(this.origin).addScaledVector(this.direction,t),yr.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){Rd.copy(e).add(t).multiplyScalar(.5),bc.copy(t).sub(e).normalize(),Qr.copy(this.origin).sub(Rd);const a=e.distanceTo(t)*.5,c=-this.direction.dot(bc),u=Qr.dot(this.direction),d=-Qr.dot(bc),f=Qr.lengthSq(),p=Math.abs(1-c*c);let g,v,y,M;if(p>0)if(g=c*d-u,v=c*u-d,M=a*p,g>=0)if(v>=-M)if(v<=M){const E=1/p;g*=E,v*=E,y=g*(g+c*v+2*u)+v*(c*g+v+2*d)+f}else v=a,g=Math.max(0,-(c*v+u)),y=-g*g+v*(v+2*d)+f;else v=-a,g=Math.max(0,-(c*v+u)),y=-g*g+v*(v+2*d)+f;else v<=-M?(g=Math.max(0,-(-c*a+u)),v=g>0?-a:Math.min(Math.max(-a,-d),a),y=-g*g+v*(v+2*d)+f):v<=M?(g=0,v=Math.min(Math.max(-a,-d),a),y=v*(v+2*d)+f):(g=Math.max(0,-(c*a+u)),v=g>0?a:Math.min(Math.max(-a,-d),a),y=-g*g+v*(v+2*d)+f);else v=c>0?-a:a,g=Math.max(0,-(c*v+u)),y=-g*g+v*(v+2*d)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,g),s&&s.copy(Rd).addScaledVector(bc,v),y}intersectSphere(e,t){yr.subVectors(e.center,this.origin);const n=yr.dot(this.direction),s=yr.dot(yr)-n*n,a=e.radius*e.radius;if(s>a)return null;const c=Math.sqrt(a-s),u=n-c,d=n+c;return d<0?null:u<0?this.at(d,t):this.at(u,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,a,c,u,d;const f=1/this.direction.x,p=1/this.direction.y,g=1/this.direction.z,v=this.origin;return f>=0?(n=(e.min.x-v.x)*f,s=(e.max.x-v.x)*f):(n=(e.max.x-v.x)*f,s=(e.min.x-v.x)*f),p>=0?(a=(e.min.y-v.y)*p,c=(e.max.y-v.y)*p):(a=(e.max.y-v.y)*p,c=(e.min.y-v.y)*p),n>c||a>s||((a>n||isNaN(n))&&(n=a),(c<s||isNaN(s))&&(s=c),g>=0?(u=(e.min.z-v.z)*g,d=(e.max.z-v.z)*g):(u=(e.max.z-v.z)*g,d=(e.min.z-v.z)*g),n>d||u>s)||((u>n||n!==n)&&(n=u),(d<s||s!==s)&&(s=d),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,yr)!==null}intersectTriangle(e,t,n,s,a){Cd.subVectors(t,e),Ic.subVectors(n,e),Nd.crossVectors(Cd,Ic);let c=this.direction.dot(Nd),u;if(c>0){if(s)return null;u=1}else if(c<0)u=-1,c=-c;else return null;Qr.subVectors(this.origin,e);const d=u*this.direction.dot(Ic.crossVectors(Qr,Ic));if(d<0)return null;const f=u*this.direction.dot(Cd.cross(Qr));if(f<0||d+f>c)return null;const p=-u*Qr.dot(Nd);return p<0?null:this.at(p/c,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Kt{constructor(e,t,n,s,a,c,u,d,f,p,g,v,y,M,E,S){Kt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,s,a,c,u,d,f,p,g,v,y,M,E,S)}set(e,t,n,s,a,c,u,d,f,p,g,v,y,M,E,S){const x=this.elements;return x[0]=e,x[4]=t,x[8]=n,x[12]=s,x[1]=a,x[5]=c,x[9]=u,x[13]=d,x[2]=f,x[6]=p,x[10]=g,x[14]=v,x[3]=y,x[7]=M,x[11]=E,x[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Kt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/wo.setFromMatrixColumn(e,0).length(),a=1/wo.setFromMatrixColumn(e,1).length(),c=1/wo.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*c,t[9]=n[9]*c,t[10]=n[10]*c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,a=e.z,c=Math.cos(n),u=Math.sin(n),d=Math.cos(s),f=Math.sin(s),p=Math.cos(a),g=Math.sin(a);if(e.order==="XYZ"){const v=c*p,y=c*g,M=u*p,E=u*g;t[0]=d*p,t[4]=-d*g,t[8]=f,t[1]=y+M*f,t[5]=v-E*f,t[9]=-u*d,t[2]=E-v*f,t[6]=M+y*f,t[10]=c*d}else if(e.order==="YXZ"){const v=d*p,y=d*g,M=f*p,E=f*g;t[0]=v+E*u,t[4]=M*u-y,t[8]=c*f,t[1]=c*g,t[5]=c*p,t[9]=-u,t[2]=y*u-M,t[6]=E+v*u,t[10]=c*d}else if(e.order==="ZXY"){const v=d*p,y=d*g,M=f*p,E=f*g;t[0]=v-E*u,t[4]=-c*g,t[8]=M+y*u,t[1]=y+M*u,t[5]=c*p,t[9]=E-v*u,t[2]=-c*f,t[6]=u,t[10]=c*d}else if(e.order==="ZYX"){const v=c*p,y=c*g,M=u*p,E=u*g;t[0]=d*p,t[4]=M*f-y,t[8]=v*f+E,t[1]=d*g,t[5]=E*f+v,t[9]=y*f-M,t[2]=-f,t[6]=u*d,t[10]=c*d}else if(e.order==="YZX"){const v=c*d,y=c*f,M=u*d,E=u*f;t[0]=d*p,t[4]=E-v*g,t[8]=M*g+y,t[1]=g,t[5]=c*p,t[9]=-u*p,t[2]=-f*p,t[6]=y*g+M,t[10]=v-E*g}else if(e.order==="XZY"){const v=c*d,y=c*f,M=u*d,E=u*f;t[0]=d*p,t[4]=-g,t[8]=f*p,t[1]=v*g+E,t[5]=c*p,t[9]=y*g-M,t[2]=M*g-y,t[6]=u*p,t[10]=E*g+v}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(sM,e,oM)}lookAt(e,t,n){const s=this.elements;return vi.subVectors(e,t),vi.lengthSq()===0&&(vi.z=1),vi.normalize(),es.crossVectors(n,vi),es.lengthSq()===0&&(Math.abs(n.z)===1?vi.x+=1e-4:vi.z+=1e-4,vi.normalize(),es.crossVectors(n,vi)),es.normalize(),Dc.crossVectors(vi,es),s[0]=es.x,s[4]=Dc.x,s[8]=vi.x,s[1]=es.y,s[5]=Dc.y,s[9]=vi.y,s[2]=es.z,s[6]=Dc.z,s[10]=vi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,a=this.elements,c=n[0],u=n[4],d=n[8],f=n[12],p=n[1],g=n[5],v=n[9],y=n[13],M=n[2],E=n[6],S=n[10],x=n[14],L=n[3],R=n[7],w=n[11],z=n[15],U=s[0],O=s[4],Y=s[8],P=s[12],N=s[1],I=s[5],se=s[9],K=s[13],fe=s[2],ve=s[6],ue=s[10],de=s[14],V=s[3],he=s[7],ae=s[11],F=s[15];return a[0]=c*U+u*N+d*fe+f*V,a[4]=c*O+u*I+d*ve+f*he,a[8]=c*Y+u*se+d*ue+f*ae,a[12]=c*P+u*K+d*de+f*F,a[1]=p*U+g*N+v*fe+y*V,a[5]=p*O+g*I+v*ve+y*he,a[9]=p*Y+g*se+v*ue+y*ae,a[13]=p*P+g*K+v*de+y*F,a[2]=M*U+E*N+S*fe+x*V,a[6]=M*O+E*I+S*ve+x*he,a[10]=M*Y+E*se+S*ue+x*ae,a[14]=M*P+E*K+S*de+x*F,a[3]=L*U+R*N+w*fe+z*V,a[7]=L*O+R*I+w*ve+z*he,a[11]=L*Y+R*se+w*ue+z*ae,a[15]=L*P+R*K+w*de+z*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],a=e[12],c=e[1],u=e[5],d=e[9],f=e[13],p=e[2],g=e[6],v=e[10],y=e[14],M=e[3],E=e[7],S=e[11],x=e[15];return M*(+a*d*g-s*f*g-a*u*v+n*f*v+s*u*y-n*d*y)+E*(+t*d*y-t*f*v+a*c*v-s*c*y+s*f*p-a*d*p)+S*(+t*f*g-t*u*y-a*c*g+n*c*y+a*u*p-n*f*p)+x*(-s*u*p-t*d*g+t*u*v+s*c*g-n*c*v+n*d*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],a=e[3],c=e[4],u=e[5],d=e[6],f=e[7],p=e[8],g=e[9],v=e[10],y=e[11],M=e[12],E=e[13],S=e[14],x=e[15],L=g*S*f-E*v*f+E*d*y-u*S*y-g*d*x+u*v*x,R=M*v*f-p*S*f-M*d*y+c*S*y+p*d*x-c*v*x,w=p*E*f-M*g*f+M*u*y-c*E*y-p*u*x+c*g*x,z=M*g*d-p*E*d-M*u*v+c*E*v+p*u*S-c*g*S,U=t*L+n*R+s*w+a*z;if(U===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const O=1/U;return e[0]=L*O,e[1]=(E*v*a-g*S*a-E*s*y+n*S*y+g*s*x-n*v*x)*O,e[2]=(u*S*a-E*d*a+E*s*f-n*S*f-u*s*x+n*d*x)*O,e[3]=(g*d*a-u*v*a-g*s*f+n*v*f+u*s*y-n*d*y)*O,e[4]=R*O,e[5]=(p*S*a-M*v*a+M*s*y-t*S*y-p*s*x+t*v*x)*O,e[6]=(M*d*a-c*S*a-M*s*f+t*S*f+c*s*x-t*d*x)*O,e[7]=(c*v*a-p*d*a+p*s*f-t*v*f-c*s*y+t*d*y)*O,e[8]=w*O,e[9]=(M*g*a-p*E*a-M*n*y+t*E*y+p*n*x-t*g*x)*O,e[10]=(c*E*a-M*u*a+M*n*f-t*E*f-c*n*x+t*u*x)*O,e[11]=(p*u*a-c*g*a-p*n*f+t*g*f+c*n*y-t*u*y)*O,e[12]=z*O,e[13]=(p*E*s-M*g*s+M*n*v-t*E*v-p*n*S+t*g*S)*O,e[14]=(M*u*s-c*E*s-M*n*d+t*E*d+c*n*S-t*u*S)*O,e[15]=(c*g*s-p*u*s+p*n*d-t*g*d-c*n*v+t*u*v)*O,this}scale(e){const t=this.elements,n=e.x,s=e.y,a=e.z;return t[0]*=n,t[4]*=s,t[8]*=a,t[1]*=n,t[5]*=s,t[9]*=a,t[2]*=n,t[6]*=s,t[10]*=a,t[3]*=n,t[7]*=s,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),a=1-n,c=e.x,u=e.y,d=e.z,f=a*c,p=a*u;return this.set(f*c+n,f*u-s*d,f*d+s*u,0,f*u+s*d,p*u+n,p*d-s*c,0,f*d-s*u,p*d+s*c,a*d*d+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,a,c){return this.set(1,n,a,0,e,1,c,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,a=t._x,c=t._y,u=t._z,d=t._w,f=a+a,p=c+c,g=u+u,v=a*f,y=a*p,M=a*g,E=c*p,S=c*g,x=u*g,L=d*f,R=d*p,w=d*g,z=n.x,U=n.y,O=n.z;return s[0]=(1-(E+x))*z,s[1]=(y+w)*z,s[2]=(M-R)*z,s[3]=0,s[4]=(y-w)*U,s[5]=(1-(v+x))*U,s[6]=(S+L)*U,s[7]=0,s[8]=(M+R)*O,s[9]=(S-L)*O,s[10]=(1-(v+E))*O,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let a=wo.set(s[0],s[1],s[2]).length();const c=wo.set(s[4],s[5],s[6]).length(),u=wo.set(s[8],s[9],s[10]).length();this.determinant()<0&&(a=-a),e.x=s[12],e.y=s[13],e.z=s[14],Hi.copy(this);const f=1/a,p=1/c,g=1/u;return Hi.elements[0]*=f,Hi.elements[1]*=f,Hi.elements[2]*=f,Hi.elements[4]*=p,Hi.elements[5]*=p,Hi.elements[6]*=p,Hi.elements[8]*=g,Hi.elements[9]*=g,Hi.elements[10]*=g,t.setFromRotationMatrix(Hi),n.x=a,n.y=c,n.z=u,this}makePerspective(e,t,n,s,a,c,u=rr){const d=this.elements,f=2*a/(t-e),p=2*a/(n-s),g=(t+e)/(t-e),v=(n+s)/(n-s);let y,M;if(u===rr)y=-(c+a)/(c-a),M=-2*c*a/(c-a);else if(u===rl)y=-c/(c-a),M=-c*a/(c-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+u);return d[0]=f,d[4]=0,d[8]=g,d[12]=0,d[1]=0,d[5]=p,d[9]=v,d[13]=0,d[2]=0,d[6]=0,d[10]=y,d[14]=M,d[3]=0,d[7]=0,d[11]=-1,d[15]=0,this}makeOrthographic(e,t,n,s,a,c,u=rr){const d=this.elements,f=1/(t-e),p=1/(n-s),g=1/(c-a),v=(t+e)*f,y=(n+s)*p;let M,E;if(u===rr)M=(c+a)*g,E=-2*g;else if(u===rl)M=a*g,E=-1*g;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+u);return d[0]=2*f,d[4]=0,d[8]=0,d[12]=-v,d[1]=0,d[5]=2*p,d[9]=0,d[13]=-y,d[2]=0,d[6]=0,d[10]=E,d[14]=-M,d[3]=0,d[7]=0,d[11]=0,d[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const wo=new W,Hi=new Kt,sM=new W(0,0,0),oM=new W(1,1,1),es=new W,Dc=new W,vi=new W,xv=new Kt,yv=new Ys;class $i{constructor(e=0,t=0,n=0,s=$i.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,a=s[0],c=s[4],u=s[8],d=s[1],f=s[5],p=s[9],g=s[2],v=s[6],y=s[10];switch(t){case"XYZ":this._y=Math.asin(vt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-p,y),this._z=Math.atan2(-c,a)):(this._x=Math.atan2(v,f),this._z=0);break;case"YXZ":this._x=Math.asin(-vt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(u,y),this._z=Math.atan2(d,f)):(this._y=Math.atan2(-g,a),this._z=0);break;case"ZXY":this._x=Math.asin(vt(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(-g,y),this._z=Math.atan2(-c,f)):(this._y=0,this._z=Math.atan2(d,a));break;case"ZYX":this._y=Math.asin(-vt(g,-1,1)),Math.abs(g)<.9999999?(this._x=Math.atan2(v,y),this._z=Math.atan2(d,a)):(this._x=0,this._z=Math.atan2(-c,f));break;case"YZX":this._z=Math.asin(vt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-g,a)):(this._x=0,this._y=Math.atan2(u,y));break;case"XZY":this._z=Math.asin(-vt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(v,f),this._y=Math.atan2(u,a)):(this._x=Math.atan2(-p,y),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return xv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(xv,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return yv.setFromEuler(this),this.setFromQuaternion(yv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}$i.DEFAULT_ORDER="XYZ";class $_{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let aM=0;const Sv=new W,Ao=new Ys,Sr=new Kt,Uc=new W,Ba=new W,lM=new W,cM=new Ys,Mv=new W(1,0,0),Ev=new W(0,1,0),Tv=new W(0,0,1),wv={type:"added"},uM={type:"removed"},Ro={type:"childadded",child:null},Ld={type:"childremoved",child:null};class Jn extends hs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:aM++}),this.uuid=sr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Jn.DEFAULT_UP.clone();const e=new W,t=new $i,n=new Ys,s=new W(1,1,1);function a(){n.setFromEuler(t,!1)}function c(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(c),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Kt},normalMatrix:{value:new ft}}),this.matrix=new Kt,this.matrixWorld=new Kt,this.matrixAutoUpdate=Jn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Jn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new $_,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ao.setFromAxisAngle(e,t),this.quaternion.multiply(Ao),this}rotateOnWorldAxis(e,t){return Ao.setFromAxisAngle(e,t),this.quaternion.premultiply(Ao),this}rotateX(e){return this.rotateOnAxis(Mv,e)}rotateY(e){return this.rotateOnAxis(Ev,e)}rotateZ(e){return this.rotateOnAxis(Tv,e)}translateOnAxis(e,t){return Sv.copy(e).applyQuaternion(this.quaternion),this.position.add(Sv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Mv,e)}translateY(e){return this.translateOnAxis(Ev,e)}translateZ(e){return this.translateOnAxis(Tv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Sr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Uc.copy(e):Uc.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),Ba.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Sr.lookAt(Ba,Uc,this.up):Sr.lookAt(Uc,Ba,this.up),this.quaternion.setFromRotationMatrix(Sr),s&&(Sr.extractRotation(s.matrixWorld),Ao.setFromRotationMatrix(Sr),this.quaternion.premultiply(Ao.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(wv),Ro.child=e,this.dispatchEvent(Ro),Ro.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(uM),Ld.child=e,this.dispatchEvent(Ld),Ld.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Sr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Sr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Sr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(wv),Ro.child=e,this.dispatchEvent(Ro),Ro.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const c=this.children[n].getObjectByProperty(e,t);if(c!==void 0)return c}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const s=this.children;for(let a=0,c=s.length;a<c;a++)s[a].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ba,e,lM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ba,cM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const s=this.children;for(let a=0,c=s.length;a<c;a++)s[a].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(u=>({boxInitialized:u.boxInitialized,boxMin:u.box.min.toArray(),boxMax:u.box.max.toArray(),sphereInitialized:u.sphereInitialized,sphereRadius:u.sphere.radius,sphereCenter:u.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function a(u,d){return u[d.uuid]===void 0&&(u[d.uuid]=d.toJSON(e)),d.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=a(e.geometries,this.geometry);const u=this.geometry.parameters;if(u!==void 0&&u.shapes!==void 0){const d=u.shapes;if(Array.isArray(d))for(let f=0,p=d.length;f<p;f++){const g=d[f];a(e.shapes,g)}else a(e.shapes,d)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const u=[];for(let d=0,f=this.material.length;d<f;d++)u.push(a(e.materials,this.material[d]));s.material=u}else s.material=a(e.materials,this.material);if(this.children.length>0){s.children=[];for(let u=0;u<this.children.length;u++)s.children.push(this.children[u].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let u=0;u<this.animations.length;u++){const d=this.animations[u];s.animations.push(a(e.animations,d))}}if(t){const u=c(e.geometries),d=c(e.materials),f=c(e.textures),p=c(e.images),g=c(e.shapes),v=c(e.skeletons),y=c(e.animations),M=c(e.nodes);u.length>0&&(n.geometries=u),d.length>0&&(n.materials=d),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),g.length>0&&(n.shapes=g),v.length>0&&(n.skeletons=v),y.length>0&&(n.animations=y),M.length>0&&(n.nodes=M)}return n.object=s,n;function c(u){const d=[];for(const f in u){const p=u[f];delete p.metadata,d.push(p)}return d}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}}Jn.DEFAULT_UP=new W(0,1,0);Jn.DEFAULT_MATRIX_AUTO_UPDATE=!0;Jn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Gi=new W,Mr=new W,Pd=new W,Er=new W,Co=new W,No=new W,Av=new W,bd=new W,Id=new W,Dd=new W,Ud=new $t,Od=new $t,Fd=new $t;class Xi{constructor(e=new W,t=new W,n=new W){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),Gi.subVectors(e,t),s.cross(Gi);const a=s.lengthSq();return a>0?s.multiplyScalar(1/Math.sqrt(a)):s.set(0,0,0)}static getBarycoord(e,t,n,s,a){Gi.subVectors(s,t),Mr.subVectors(n,t),Pd.subVectors(e,t);const c=Gi.dot(Gi),u=Gi.dot(Mr),d=Gi.dot(Pd),f=Mr.dot(Mr),p=Mr.dot(Pd),g=c*f-u*u;if(g===0)return a.set(0,0,0),null;const v=1/g,y=(f*d-u*p)*v,M=(c*p-u*d)*v;return a.set(1-y-M,M,y)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,Er)===null?!1:Er.x>=0&&Er.y>=0&&Er.x+Er.y<=1}static getInterpolation(e,t,n,s,a,c,u,d){return this.getBarycoord(e,t,n,s,Er)===null?(d.x=0,d.y=0,"z"in d&&(d.z=0),"w"in d&&(d.w=0),null):(d.setScalar(0),d.addScaledVector(a,Er.x),d.addScaledVector(c,Er.y),d.addScaledVector(u,Er.z),d)}static getInterpolatedAttribute(e,t,n,s,a,c){return Ud.setScalar(0),Od.setScalar(0),Fd.setScalar(0),Ud.fromBufferAttribute(e,t),Od.fromBufferAttribute(e,n),Fd.fromBufferAttribute(e,s),c.setScalar(0),c.addScaledVector(Ud,a.x),c.addScaledVector(Od,a.y),c.addScaledVector(Fd,a.z),c}static isFrontFacing(e,t,n,s){return Gi.subVectors(n,t),Mr.subVectors(e,t),Gi.cross(Mr).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Gi.subVectors(this.c,this.b),Mr.subVectors(this.a,this.b),Gi.cross(Mr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Xi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Xi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,s,a){return Xi.getInterpolation(e,this.a,this.b,this.c,t,n,s,a)}containsPoint(e){return Xi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Xi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,a=this.c;let c,u;Co.subVectors(s,n),No.subVectors(a,n),bd.subVectors(e,n);const d=Co.dot(bd),f=No.dot(bd);if(d<=0&&f<=0)return t.copy(n);Id.subVectors(e,s);const p=Co.dot(Id),g=No.dot(Id);if(p>=0&&g<=p)return t.copy(s);const v=d*g-p*f;if(v<=0&&d>=0&&p<=0)return c=d/(d-p),t.copy(n).addScaledVector(Co,c);Dd.subVectors(e,a);const y=Co.dot(Dd),M=No.dot(Dd);if(M>=0&&y<=M)return t.copy(a);const E=y*f-d*M;if(E<=0&&f>=0&&M<=0)return u=f/(f-M),t.copy(n).addScaledVector(No,u);const S=p*M-y*g;if(S<=0&&g-p>=0&&y-M>=0)return Av.subVectors(a,s),u=(g-p)/(g-p+(y-M)),t.copy(s).addScaledVector(Av,u);const x=1/(S+E+v);return c=E*x,u=v*x,t.copy(n).addScaledVector(Co,c).addScaledVector(No,u)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const K_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ts={h:0,s:0,l:0},Oc={h:0,s:0,l:0};function zd(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class st{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Pi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,gt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=gt.workingColorSpace){return this.r=e,this.g=t,this.b=n,gt.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=gt.workingColorSpace){if(e=cp(e,1),t=vt(t,0,1),n=vt(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,c=2*n-a;this.r=zd(c,a,e+1/3),this.g=zd(c,a,e),this.b=zd(c,a,e-1/3)}return gt.toWorkingColorSpace(this,s),this}setStyle(e,t=Pi){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const c=s[1],u=s[2];switch(c){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))return n(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,t);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))return n(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,t);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))return n(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=s[1],c=a.length;if(c===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,t);if(c===6)return this.setHex(parseInt(a,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Pi){const n=K_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Rr(e.r),this.g=Rr(e.g),this.b=Rr(e.b),this}copyLinearToSRGB(e){return this.r=Wo(e.r),this.g=Wo(e.g),this.b=Wo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Pi){return gt.fromWorkingColorSpace(kn.copy(this),e),Math.round(vt(kn.r*255,0,255))*65536+Math.round(vt(kn.g*255,0,255))*256+Math.round(vt(kn.b*255,0,255))}getHexString(e=Pi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=gt.workingColorSpace){gt.fromWorkingColorSpace(kn.copy(this),t);const n=kn.r,s=kn.g,a=kn.b,c=Math.max(n,s,a),u=Math.min(n,s,a);let d,f;const p=(u+c)/2;if(u===c)d=0,f=0;else{const g=c-u;switch(f=p<=.5?g/(c+u):g/(2-c-u),c){case n:d=(s-a)/g+(s<a?6:0);break;case s:d=(a-n)/g+2;break;case a:d=(n-s)/g+4;break}d/=6}return e.h=d,e.s=f,e.l=p,e}getRGB(e,t=gt.workingColorSpace){return gt.fromWorkingColorSpace(kn.copy(this),t),e.r=kn.r,e.g=kn.g,e.b=kn.b,e}getStyle(e=Pi){gt.fromWorkingColorSpace(kn.copy(this),e);const t=kn.r,n=kn.g,s=kn.b;return e!==Pi?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(ts),this.setHSL(ts.h+e,ts.s+t,ts.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ts),e.getHSL(Oc);const n=Qa(ts.h,Oc.h,t),s=Qa(ts.s,Oc.s,t),a=Qa(ts.l,Oc.l,t);return this.setHSL(n,s,a),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,a=e.elements;return this.r=a[0]*t+a[3]*n+a[6]*s,this.g=a[1]*t+a[4]*n+a[7]*s,this.b=a[2]*t+a[5]*n+a[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const kn=new st;st.NAMES=K_;let hM=0;class ta extends hs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:hM++}),this.uuid=sr(),this.name="",this.type="Material",this.blending=Ho,this.side=ls,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=lf,this.blendDst=cf,this.blendEquation=Fs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new st(0,0,0),this.blendAlpha=0,this.depthFunc=qo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=dv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=yo,this.stencilZFail=yo,this.stencilZPass=yo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ho&&(n.blending=this.blending),this.side!==ls&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==lf&&(n.blendSrc=this.blendSrc),this.blendDst!==cf&&(n.blendDst=this.blendDst),this.blendEquation!==Fs&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==qo&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==dv&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==yo&&(n.stencilFail=this.stencilFail),this.stencilZFail!==yo&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==yo&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(a){const c=[];for(const u in a){const d=a[u];delete d.metadata,c.push(d)}return c}if(t){const a=s(e.textures),c=s(e.images);a.length>0&&(n.textures=a),c.length>0&&(n.images=c)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let a=0;a!==s;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Zo extends ta{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new $i,this.combine=b_,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const un=new W,Fc=new Q;class ji{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=du,this.updateRanges=[],this.gpuType=Ar,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,a=this.itemSize;s<a;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Fc.fromBufferAttribute(this,t),Fc.applyMatrix3(e),this.setXY(t,Fc.x,Fc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix3(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix4(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyNormalMatrix(e),this.setXYZ(t,un.x,un.y,un.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.transformDirection(e),this.setXYZ(t,un.x,un.y,un.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Wi(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=kt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Wi(t,this.array)),t}setX(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Wi(t,this.array)),t}setY(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Wi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Wi(t,this.array)),t}setW(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array),s=kt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,a){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array),s=kt(s,this.array),a=kt(a,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==du&&(e.usage=this.usage),e}}class Z_ extends ji{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class J_ extends ji{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class _n extends ji{constructor(e,t,n){super(new Float32Array(e),t,n)}}let dM=0;const Ni=new Kt,kd=new Jn,Lo=new W,_i=new ul,Va=new ul,wn=new W;class Mi extends hs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:dM++}),this.uuid=sr(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Y_(e)?J_:Z_)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new ft().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ni.makeRotationFromQuaternion(e),this.applyMatrix4(Ni),this}rotateX(e){return Ni.makeRotationX(e),this.applyMatrix4(Ni),this}rotateY(e){return Ni.makeRotationY(e),this.applyMatrix4(Ni),this}rotateZ(e){return Ni.makeRotationZ(e),this.applyMatrix4(Ni),this}translate(e,t,n){return Ni.makeTranslation(e,t,n),this.applyMatrix4(Ni),this}scale(e,t,n){return Ni.makeScale(e,t,n),this.applyMatrix4(Ni),this}lookAt(e){return kd.lookAt(e),kd.updateMatrix(),this.applyMatrix4(kd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Lo).negate(),this.translate(Lo.x,Lo.y,Lo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let s=0,a=e.length;s<a;s++){const c=e[s];n.push(c.x,c.y,c.z||0)}this.setAttribute("position",new _n(n,3))}else{const n=Math.min(e.length,t.count);for(let s=0;s<n;s++){const a=e[s];t.setXYZ(s,a.x,a.y,a.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ul);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new W(-1/0,-1/0,-1/0),new W(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const a=t[n];_i.setFromBufferAttribute(a),this.morphTargetsRelative?(wn.addVectors(this.boundingBox.min,_i.min),this.boundingBox.expandByPoint(wn),wn.addVectors(this.boundingBox.max,_i.max),this.boundingBox.expandByPoint(wn)):(this.boundingBox.expandByPoint(_i.min),this.boundingBox.expandByPoint(_i.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Mu);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new W,1/0);return}if(e){const n=this.boundingSphere.center;if(_i.setFromBufferAttribute(e),t)for(let a=0,c=t.length;a<c;a++){const u=t[a];Va.setFromBufferAttribute(u),this.morphTargetsRelative?(wn.addVectors(_i.min,Va.min),_i.expandByPoint(wn),wn.addVectors(_i.max,Va.max),_i.expandByPoint(wn)):(_i.expandByPoint(Va.min),_i.expandByPoint(Va.max))}_i.getCenter(n);let s=0;for(let a=0,c=e.count;a<c;a++)wn.fromBufferAttribute(e,a),s=Math.max(s,n.distanceToSquared(wn));if(t)for(let a=0,c=t.length;a<c;a++){const u=t[a],d=this.morphTargetsRelative;for(let f=0,p=u.count;f<p;f++)wn.fromBufferAttribute(u,f),d&&(Lo.fromBufferAttribute(e,f),wn.add(Lo)),s=Math.max(s,n.distanceToSquared(wn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,s=t.normal,a=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ji(new Float32Array(4*n.count),4));const c=this.getAttribute("tangent"),u=[],d=[];for(let Y=0;Y<n.count;Y++)u[Y]=new W,d[Y]=new W;const f=new W,p=new W,g=new W,v=new Q,y=new Q,M=new Q,E=new W,S=new W;function x(Y,P,N){f.fromBufferAttribute(n,Y),p.fromBufferAttribute(n,P),g.fromBufferAttribute(n,N),v.fromBufferAttribute(a,Y),y.fromBufferAttribute(a,P),M.fromBufferAttribute(a,N),p.sub(f),g.sub(f),y.sub(v),M.sub(v);const I=1/(y.x*M.y-M.x*y.y);isFinite(I)&&(E.copy(p).multiplyScalar(M.y).addScaledVector(g,-y.y).multiplyScalar(I),S.copy(g).multiplyScalar(y.x).addScaledVector(p,-M.x).multiplyScalar(I),u[Y].add(E),u[P].add(E),u[N].add(E),d[Y].add(S),d[P].add(S),d[N].add(S))}let L=this.groups;L.length===0&&(L=[{start:0,count:e.count}]);for(let Y=0,P=L.length;Y<P;++Y){const N=L[Y],I=N.start,se=N.count;for(let K=I,fe=I+se;K<fe;K+=3)x(e.getX(K+0),e.getX(K+1),e.getX(K+2))}const R=new W,w=new W,z=new W,U=new W;function O(Y){z.fromBufferAttribute(s,Y),U.copy(z);const P=u[Y];R.copy(P),R.sub(z.multiplyScalar(z.dot(P))).normalize(),w.crossVectors(U,P);const I=w.dot(d[Y])<0?-1:1;c.setXYZW(Y,R.x,R.y,R.z,I)}for(let Y=0,P=L.length;Y<P;++Y){const N=L[Y],I=N.start,se=N.count;for(let K=I,fe=I+se;K<fe;K+=3)O(e.getX(K+0)),O(e.getX(K+1)),O(e.getX(K+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ji(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let v=0,y=n.count;v<y;v++)n.setXYZ(v,0,0,0);const s=new W,a=new W,c=new W,u=new W,d=new W,f=new W,p=new W,g=new W;if(e)for(let v=0,y=e.count;v<y;v+=3){const M=e.getX(v+0),E=e.getX(v+1),S=e.getX(v+2);s.fromBufferAttribute(t,M),a.fromBufferAttribute(t,E),c.fromBufferAttribute(t,S),p.subVectors(c,a),g.subVectors(s,a),p.cross(g),u.fromBufferAttribute(n,M),d.fromBufferAttribute(n,E),f.fromBufferAttribute(n,S),u.add(p),d.add(p),f.add(p),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(E,d.x,d.y,d.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let v=0,y=t.count;v<y;v+=3)s.fromBufferAttribute(t,v+0),a.fromBufferAttribute(t,v+1),c.fromBufferAttribute(t,v+2),p.subVectors(c,a),g.subVectors(s,a),p.cross(g),n.setXYZ(v+0,p.x,p.y,p.z),n.setXYZ(v+1,p.x,p.y,p.z),n.setXYZ(v+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)wn.fromBufferAttribute(e,t),wn.normalize(),e.setXYZ(t,wn.x,wn.y,wn.z)}toNonIndexed(){function e(u,d){const f=u.array,p=u.itemSize,g=u.normalized,v=new f.constructor(d.length*p);let y=0,M=0;for(let E=0,S=d.length;E<S;E++){u.isInterleavedBufferAttribute?y=d[E]*u.data.stride+u.offset:y=d[E]*p;for(let x=0;x<p;x++)v[M++]=f[y++]}return new ji(v,p,g)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Mi,n=this.index.array,s=this.attributes;for(const u in s){const d=s[u],f=e(d,n);t.setAttribute(u,f)}const a=this.morphAttributes;for(const u in a){const d=[],f=a[u];for(let p=0,g=f.length;p<g;p++){const v=f[p],y=e(v,n);d.push(y)}t.morphAttributes[u]=d}t.morphTargetsRelative=this.morphTargetsRelative;const c=this.groups;for(let u=0,d=c.length;u<d;u++){const f=c[u];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const d=this.parameters;for(const f in d)d[f]!==void 0&&(e[f]=d[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const d in n){const f=n[d];e.data.attributes[d]=f.toJSON(e.data)}const s={};let a=!1;for(const d in this.morphAttributes){const f=this.morphAttributes[d],p=[];for(let g=0,v=f.length;g<v;g++){const y=f[g];p.push(y.toJSON(e.data))}p.length>0&&(s[d]=p,a=!0)}a&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const c=this.groups;c.length>0&&(e.data.groups=JSON.parse(JSON.stringify(c)));const u=this.boundingSphere;return u!==null&&(e.data.boundingSphere={center:u.center.toArray(),radius:u.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const s=e.attributes;for(const f in s){const p=s[f];this.setAttribute(f,p.clone(t))}const a=e.morphAttributes;for(const f in a){const p=[],g=a[f];for(let v=0,y=g.length;v<y;v++)p.push(g[v].clone(t));this.morphAttributes[f]=p}this.morphTargetsRelative=e.morphTargetsRelative;const c=e.groups;for(let f=0,p=c.length;f<p;f++){const g=c[f];this.addGroup(g.start,g.count,g.materialIndex)}const u=e.boundingBox;u!==null&&(this.boundingBox=u.clone());const d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Rv=new Kt,Ps=new hp,zc=new Mu,Cv=new W,kc=new W,Bc=new W,Vc=new W,Bd=new W,Hc=new W,Nv=new W,Gc=new W;class Pn extends Jn{constructor(e=new Mi,t=new Zo){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,c=s.length;a<c;a++){const u=s[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[u]=a}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const u=this.morphTargetInfluences;if(a&&u){Hc.set(0,0,0);for(let d=0,f=a.length;d<f;d++){const p=u[d],g=a[d];p!==0&&(Bd.fromBufferAttribute(g,e),c?Hc.addScaledVector(Bd,p):Hc.addScaledVector(Bd.sub(t),p))}t.add(Hc)}return t}raycast(e,t){const n=this.geometry,s=this.material,a=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),zc.copy(n.boundingSphere),zc.applyMatrix4(a),Ps.copy(e.ray).recast(e.near),!(zc.containsPoint(Ps.origin)===!1&&(Ps.intersectSphere(zc,Cv)===null||Ps.origin.distanceToSquared(Cv)>(e.far-e.near)**2))&&(Rv.copy(a).invert(),Ps.copy(e.ray).applyMatrix4(Rv),!(n.boundingBox!==null&&Ps.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ps)))}_computeIntersections(e,t,n){let s;const a=this.geometry,c=this.material,u=a.index,d=a.attributes.position,f=a.attributes.uv,p=a.attributes.uv1,g=a.attributes.normal,v=a.groups,y=a.drawRange;if(u!==null)if(Array.isArray(c))for(let M=0,E=v.length;M<E;M++){const S=v[M],x=c[S.materialIndex],L=Math.max(S.start,y.start),R=Math.min(u.count,Math.min(S.start+S.count,y.start+y.count));for(let w=L,z=R;w<z;w+=3){const U=u.getX(w),O=u.getX(w+1),Y=u.getX(w+2);s=Wc(this,x,e,n,f,p,g,U,O,Y),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=S.materialIndex,t.push(s))}}else{const M=Math.max(0,y.start),E=Math.min(u.count,y.start+y.count);for(let S=M,x=E;S<x;S+=3){const L=u.getX(S),R=u.getX(S+1),w=u.getX(S+2);s=Wc(this,c,e,n,f,p,g,L,R,w),s&&(s.faceIndex=Math.floor(S/3),t.push(s))}}else if(d!==void 0)if(Array.isArray(c))for(let M=0,E=v.length;M<E;M++){const S=v[M],x=c[S.materialIndex],L=Math.max(S.start,y.start),R=Math.min(d.count,Math.min(S.start+S.count,y.start+y.count));for(let w=L,z=R;w<z;w+=3){const U=w,O=w+1,Y=w+2;s=Wc(this,x,e,n,f,p,g,U,O,Y),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=S.materialIndex,t.push(s))}}else{const M=Math.max(0,y.start),E=Math.min(d.count,y.start+y.count);for(let S=M,x=E;S<x;S+=3){const L=S,R=S+1,w=S+2;s=Wc(this,c,e,n,f,p,g,L,R,w),s&&(s.faceIndex=Math.floor(S/3),t.push(s))}}}}function fM(r,e,t,n,s,a,c,u){let d;if(e.side===Kn?d=n.intersectTriangle(c,a,s,!0,u):d=n.intersectTriangle(s,a,c,e.side===ls,u),d===null)return null;Gc.copy(u),Gc.applyMatrix4(r.matrixWorld);const f=t.ray.origin.distanceTo(Gc);return f<t.near||f>t.far?null:{distance:f,point:Gc.clone(),object:r}}function Wc(r,e,t,n,s,a,c,u,d,f){r.getVertexPosition(u,kc),r.getVertexPosition(d,Bc),r.getVertexPosition(f,Vc);const p=fM(r,e,t,n,kc,Bc,Vc,Nv);if(p){const g=new W;Xi.getBarycoord(Nv,kc,Bc,Vc,g),s&&(p.uv=Xi.getInterpolatedAttribute(s,u,d,f,g,new Q)),a&&(p.uv1=Xi.getInterpolatedAttribute(a,u,d,f,g,new Q)),c&&(p.normal=Xi.getInterpolatedAttribute(c,u,d,f,g,new W),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const v={a:u,b:d,c:f,normal:new W,materialIndex:0};Xi.getNormal(kc,Bc,Vc,v.normal),p.face=v,p.barycoord=g}return p}class na extends Mi{constructor(e=1,t=1,n=1,s=1,a=1,c=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:a,depthSegments:c};const u=this;s=Math.floor(s),a=Math.floor(a),c=Math.floor(c);const d=[],f=[],p=[],g=[];let v=0,y=0;M("z","y","x",-1,-1,n,t,e,c,a,0),M("z","y","x",1,-1,n,t,-e,c,a,1),M("x","z","y",1,1,e,n,t,s,c,2),M("x","z","y",1,-1,e,n,-t,s,c,3),M("x","y","z",1,-1,e,t,n,s,a,4),M("x","y","z",-1,-1,e,t,-n,s,a,5),this.setIndex(d),this.setAttribute("position",new _n(f,3)),this.setAttribute("normal",new _n(p,3)),this.setAttribute("uv",new _n(g,2));function M(E,S,x,L,R,w,z,U,O,Y,P){const N=w/O,I=z/Y,se=w/2,K=z/2,fe=U/2,ve=O+1,ue=Y+1;let de=0,V=0;const he=new W;for(let ae=0;ae<ue;ae++){const F=ae*I-K;for(let re=0;re<ve;re++){const ke=re*N-se;he[E]=ke*L,he[S]=F*R,he[x]=fe,f.push(he.x,he.y,he.z),he[E]=0,he[S]=0,he[x]=U>0?1:-1,p.push(he.x,he.y,he.z),g.push(re/O),g.push(1-ae/Y),de+=1}}for(let ae=0;ae<Y;ae++)for(let F=0;F<O;F++){const re=v+F+ve*ae,ke=v+F+ve*(ae+1),ee=v+(F+1)+ve*(ae+1),pe=v+(F+1)+ve*ae;d.push(re,ke,pe),d.push(ke,ee,pe),V+=6}u.addGroup(y,V,P),y+=V,v+=de}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new na(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const s=r[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function qn(r){const e={};for(let t=0;t<r.length;t++){const n=Jo(r[t]);for(const s in n)e[s]=n[s]}return e}function pM(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Q_(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:gt.workingColorSpace}const mM={clone:Jo,merge:qn};var gM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,vM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class us extends ta{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=gM,this.fragmentShader=vM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jo(e.uniforms),this.uniformsGroups=pM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const c=this.uniforms[s].value;c&&c.isTexture?t.uniforms[s]={type:"t",value:c.toJSON(e).uuid}:c&&c.isColor?t.uniforms[s]={type:"c",value:c.getHex()}:c&&c.isVector2?t.uniforms[s]={type:"v2",value:c.toArray()}:c&&c.isVector3?t.uniforms[s]={type:"v3",value:c.toArray()}:c&&c.isVector4?t.uniforms[s]={type:"v4",value:c.toArray()}:c&&c.isMatrix3?t.uniforms[s]={type:"m3",value:c.toArray()}:c&&c.isMatrix4?t.uniforms[s]={type:"m4",value:c.toArray()}:t.uniforms[s]={value:c}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class e0 extends Jn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Kt,this.projectionMatrix=new Kt,this.projectionMatrixInverse=new Kt,this.coordinateSystem=rr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ns=new W,Lv=new Q,Pv=new Q;class bi extends e0{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=sl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ja*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return sl*2*Math.atan(Math.tan(Ja*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){ns.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ns.x,ns.y).multiplyScalar(-e/ns.z),ns.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ns.x,ns.y).multiplyScalar(-e/ns.z)}getViewSize(e,t){return this.getViewBounds(e,Lv,Pv),t.subVectors(Pv,Lv)}setViewOffset(e,t,n,s,a,c){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=a,this.view.height=c,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ja*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,a=-.5*s;const c=this.view;if(this.view!==null&&this.view.enabled){const d=c.fullWidth,f=c.fullHeight;a+=c.offsetX*s/d,t-=c.offsetY*n/f,s*=c.width/d,n*=c.height/f}const u=this.filmOffset;u!==0&&(a+=e*u/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+s,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Po=-90,bo=1;class _M extends Jn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new bi(Po,bo,e,t);s.layers=this.layers,this.add(s);const a=new bi(Po,bo,e,t);a.layers=this.layers,this.add(a);const c=new bi(Po,bo,e,t);c.layers=this.layers,this.add(c);const u=new bi(Po,bo,e,t);u.layers=this.layers,this.add(u);const d=new bi(Po,bo,e,t);d.layers=this.layers,this.add(d);const f=new bi(Po,bo,e,t);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,s,a,c,u,d]=t;for(const f of t)this.remove(f);if(e===rr)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),c.up.set(0,0,1),c.lookAt(0,-1,0),u.up.set(0,1,0),u.lookAt(0,0,1),d.up.set(0,1,0),d.lookAt(0,0,-1);else if(e===rl)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),c.up.set(0,0,-1),c.lookAt(0,-1,0),u.up.set(0,-1,0),u.lookAt(0,0,1),d.up.set(0,-1,0),d.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const f of t)this.add(f),f.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[a,c,u,d,f,p]=this.children,g=e.getRenderTarget(),v=e.getActiveCubeFace(),y=e.getActiveMipmapLevel(),M=e.xr.enabled;e.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,s),e.render(t,a),e.setRenderTarget(n,1,s),e.render(t,c),e.setRenderTarget(n,2,s),e.render(t,u),e.setRenderTarget(n,3,s),e.render(t,d),e.setRenderTarget(n,4,s),e.render(t,f),n.texture.generateMipmaps=E,e.setRenderTarget(n,5,s),e.render(t,p),e.setRenderTarget(g,v,y),e.xr.enabled=M,n.texture.needsPMREMUpdate=!0}}class t0 extends Zn{constructor(e,t,n,s,a,c,u,d,f,p){e=e!==void 0?e:[],t=t!==void 0?t:Gs,super(e,t,n,s,a,c,u,d,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class xM extends Xs{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new t0(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ir}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new na(5,5,5),a=new us({name:"CubemapFromEquirect",uniforms:Jo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Kn,blending:os});a.uniforms.tEquirect.value=t;const c=new Pn(s,a),u=t.minFilter;return t.minFilter===ss&&(t.minFilter=ir),new _M(1,10,this).update(e,c),t.minFilter=u,c.geometry.dispose(),c.material.dispose(),this}clear(e,t,n,s){const a=e.getRenderTarget();for(let c=0;c<6;c++)e.setRenderTarget(this,c),e.clear(t,n,s);e.setRenderTarget(a)}}class yM extends Jn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new $i,this.environmentIntensity=1,this.environmentRotation=new $i,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class SM{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=du,this.updateRanges=[],this.version=0,this.uuid=sr()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let s=0,a=this.stride;s<a;s++)this.array[e+s]=t.array[n+s];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=sr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=sr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Yn=new W;class dp{constructor(e,t,n,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Yn.fromBufferAttribute(this,t),Yn.applyMatrix4(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Yn.fromBufferAttribute(this,t),Yn.applyNormalMatrix(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Yn.fromBufferAttribute(this,t),Yn.transformDirection(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Wi(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=kt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=kt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=kt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=kt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=kt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Wi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Wi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Wi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Wi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array),s=kt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this}setXYZW(e,t,n,s,a){return e=e*this.data.stride+this.offset,this.normalized&&(t=kt(t,this.array),n=kt(n,this.array),s=kt(s,this.array),a=kt(a,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[s+a])}return new ji(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new dp(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[s+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const Vd=new W,MM=new W,EM=new ft;class wr{constructor(e=new W(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=Vd.subVectors(n,t).cross(MM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Vd),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/s;return a<0||a>1?null:t.copy(e.start).addScaledVector(n,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||EM.getNormalMatrix(e),s=this.coplanarPoint(Vd).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const bs=new Mu,Xc=new W;class n0{constructor(e=new wr,t=new wr,n=new wr,s=new wr,a=new wr,c=new wr){this.planes=[e,t,n,s,a,c]}set(e,t,n,s,a,c){const u=this.planes;return u[0].copy(e),u[1].copy(t),u[2].copy(n),u[3].copy(s),u[4].copy(a),u[5].copy(c),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=rr){const n=this.planes,s=e.elements,a=s[0],c=s[1],u=s[2],d=s[3],f=s[4],p=s[5],g=s[6],v=s[7],y=s[8],M=s[9],E=s[10],S=s[11],x=s[12],L=s[13],R=s[14],w=s[15];if(n[0].setComponents(d-a,v-f,S-y,w-x).normalize(),n[1].setComponents(d+a,v+f,S+y,w+x).normalize(),n[2].setComponents(d+c,v+p,S+M,w+L).normalize(),n[3].setComponents(d-c,v-p,S-M,w-L).normalize(),n[4].setComponents(d-u,v-g,S-E,w-R).normalize(),t===rr)n[5].setComponents(d+u,v+g,S+E,w+R).normalize();else if(t===rl)n[5].setComponents(u,g,E,R).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),bs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),bs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(bs)}intersectsSprite(e){return bs.center.set(0,0,0),bs.radius=.7071067811865476,bs.applyMatrix4(e.matrixWorld),this.intersectsSphere(bs)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(Xc.x=s.normal.x>0?e.max.x:e.min.x,Xc.y=s.normal.y>0?e.max.y:e.min.y,Xc.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Xc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Eu extends ta{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new st(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const pu=new W,mu=new W,bv=new Kt,Ha=new hp,Yc=new Mu,Hd=new W,Iv=new W;class i0 extends Jn{constructor(e=new Mi,t=new Eu){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let s=1,a=t.count;s<a;s++)pu.fromBufferAttribute(t,s-1),mu.fromBufferAttribute(t,s),n[s]=n[s-1],n[s]+=pu.distanceTo(mu);e.setAttribute("lineDistance",new _n(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,s=this.matrixWorld,a=e.params.Line.threshold,c=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Yc.copy(n.boundingSphere),Yc.applyMatrix4(s),Yc.radius+=a,e.ray.intersectsSphere(Yc)===!1)return;bv.copy(s).invert(),Ha.copy(e.ray).applyMatrix4(bv);const u=a/((this.scale.x+this.scale.y+this.scale.z)/3),d=u*u,f=this.isLineSegments?2:1,p=n.index,v=n.attributes.position;if(p!==null){const y=Math.max(0,c.start),M=Math.min(p.count,c.start+c.count);for(let E=y,S=M-1;E<S;E+=f){const x=p.getX(E),L=p.getX(E+1),R=qc(this,e,Ha,d,x,L);R&&t.push(R)}if(this.isLineLoop){const E=p.getX(M-1),S=p.getX(y),x=qc(this,e,Ha,d,E,S);x&&t.push(x)}}else{const y=Math.max(0,c.start),M=Math.min(v.count,c.start+c.count);for(let E=y,S=M-1;E<S;E+=f){const x=qc(this,e,Ha,d,E,E+1);x&&t.push(x)}if(this.isLineLoop){const E=qc(this,e,Ha,d,M-1,y);E&&t.push(E)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,c=s.length;a<c;a++){const u=s[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[u]=a}}}}}function qc(r,e,t,n,s,a){const c=r.geometry.attributes.position;if(pu.fromBufferAttribute(c,s),mu.fromBufferAttribute(c,a),t.distanceSqToSegment(pu,mu,Hd,Iv)>n)return;Hd.applyMatrix4(r.matrixWorld);const d=e.ray.origin.distanceTo(Hd);if(!(d<e.near||d>e.far))return{distance:d,point:Iv.clone().applyMatrix4(r.matrixWorld),index:s,face:null,faceIndex:null,barycoord:null,object:r}}const Dv=new W,Uv=new W;class r0 extends i0{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let s=0,a=t.count;s<a;s+=2)Dv.fromBufferAttribute(t,s),Uv.fromBufferAttribute(t,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+Dv.distanceTo(Uv);e.setAttribute("lineDistance",new _n(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class jc extends Jn{constructor(){super(),this.isGroup=!0,this.type="Group"}}class TM extends Zn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Si,this.minFilter=Si,this.generateMipmaps=!1,this.needsUpdate=!0}}class hl extends Zn{constructor(e,t,n,s,a,c,u,d,f,p=Go){if(p!==Go&&p!==$o)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===Go&&(n=cs),n===void 0&&p===$o&&(n=jo),super(null,s,a,c,u,d,p,n,f),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=u!==void 0?u:Si,this.minFilter=d!==void 0?d:Si,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class ar{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,s=this.getPoint(0),a=0;t.push(0);for(let c=1;c<=e;c++)n=this.getPoint(c/e),a+=n.distanceTo(s),t.push(a),s=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let s=0;const a=n.length;let c;t?c=t:c=e*n[a-1];let u=0,d=a-1,f;for(;u<=d;)if(s=Math.floor(u+(d-u)/2),f=n[s]-c,f<0)u=s+1;else if(f>0)d=s-1;else{d=s;break}if(s=d,n[s]===c)return s/(a-1);const p=n[s],v=n[s+1]-p,y=(c-p)/v;return(s+y)/(a-1)}getTangent(e,t){let s=e-1e-4,a=e+1e-4;s<0&&(s=0),a>1&&(a=1);const c=this.getPoint(s),u=this.getPoint(a),d=t||(c.isVector2?new Q:new W);return d.copy(u).sub(c).normalize(),d}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new W,s=[],a=[],c=[],u=new W,d=new Kt;for(let y=0;y<=e;y++){const M=y/e;s[y]=this.getTangentAt(M,new W)}a[0]=new W,c[0]=new W;let f=Number.MAX_VALUE;const p=Math.abs(s[0].x),g=Math.abs(s[0].y),v=Math.abs(s[0].z);p<=f&&(f=p,n.set(1,0,0)),g<=f&&(f=g,n.set(0,1,0)),v<=f&&n.set(0,0,1),u.crossVectors(s[0],n).normalize(),a[0].crossVectors(s[0],u),c[0].crossVectors(s[0],a[0]);for(let y=1;y<=e;y++){if(a[y]=a[y-1].clone(),c[y]=c[y-1].clone(),u.crossVectors(s[y-1],s[y]),u.length()>Number.EPSILON){u.normalize();const M=Math.acos(vt(s[y-1].dot(s[y]),-1,1));a[y].applyMatrix4(d.makeRotationAxis(u,M))}c[y].crossVectors(s[y],a[y])}if(t===!0){let y=Math.acos(vt(a[0].dot(a[e]),-1,1));y/=e,s[0].dot(u.crossVectors(a[0],a[e]))>0&&(y=-y);for(let M=1;M<=e;M++)a[M].applyMatrix4(d.makeRotationAxis(s[M],y*M)),c[M].crossVectors(s[M],a[M])}return{tangents:s,normals:a,binormals:c}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fp extends ar{constructor(e=0,t=0,n=1,s=1,a=0,c=Math.PI*2,u=!1,d=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=s,this.aStartAngle=a,this.aEndAngle=c,this.aClockwise=u,this.aRotation=d}getPoint(e,t=new Q){const n=t,s=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const c=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=s;for(;a>s;)a-=s;a<Number.EPSILON&&(c?a=0:a=s),this.aClockwise===!0&&!c&&(a===s?a=-s:a=a-s);const u=this.aStartAngle+e*a;let d=this.aX+this.xRadius*Math.cos(u),f=this.aY+this.yRadius*Math.sin(u);if(this.aRotation!==0){const p=Math.cos(this.aRotation),g=Math.sin(this.aRotation),v=d-this.aX,y=f-this.aY;d=v*p-y*g+this.aX,f=v*g+y*p+this.aY}return n.set(d,f)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class wM extends fp{constructor(e,t,n,s,a,c){super(e,t,n,n,s,a,c),this.isArcCurve=!0,this.type="ArcCurve"}}function pp(){let r=0,e=0,t=0,n=0;function s(a,c,u,d){r=a,e=u,t=-3*a+3*c-2*u-d,n=2*a-2*c+u+d}return{initCatmullRom:function(a,c,u,d,f){s(c,u,f*(u-a),f*(d-c))},initNonuniformCatmullRom:function(a,c,u,d,f,p,g){let v=(c-a)/f-(u-a)/(f+p)+(u-c)/p,y=(u-c)/p-(d-c)/(p+g)+(d-u)/g;v*=p,y*=p,s(c,u,v,y)},calc:function(a){const c=a*a,u=c*a;return r+e*a+t*c+n*u}}}const $c=new W,Gd=new pp,Wd=new pp,Xd=new pp;class AM extends ar{constructor(e=[],t=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=s}getPoint(e,t=new W){const n=t,s=this.points,a=s.length,c=(a-(this.closed?0:1))*e;let u=Math.floor(c),d=c-u;this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/a)+1)*a:d===0&&u===a-1&&(u=a-2,d=1);let f,p;this.closed||u>0?f=s[(u-1)%a]:($c.subVectors(s[0],s[1]).add(s[0]),f=$c);const g=s[u%a],v=s[(u+1)%a];if(this.closed||u+2<a?p=s[(u+2)%a]:($c.subVectors(s[a-1],s[a-2]).add(s[a-1]),p=$c),this.curveType==="centripetal"||this.curveType==="chordal"){const y=this.curveType==="chordal"?.5:.25;let M=Math.pow(f.distanceToSquared(g),y),E=Math.pow(g.distanceToSquared(v),y),S=Math.pow(v.distanceToSquared(p),y);E<1e-4&&(E=1),M<1e-4&&(M=E),S<1e-4&&(S=E),Gd.initNonuniformCatmullRom(f.x,g.x,v.x,p.x,M,E,S),Wd.initNonuniformCatmullRom(f.y,g.y,v.y,p.y,M,E,S),Xd.initNonuniformCatmullRom(f.z,g.z,v.z,p.z,M,E,S)}else this.curveType==="catmullrom"&&(Gd.initCatmullRom(f.x,g.x,v.x,p.x,this.tension),Wd.initCatmullRom(f.y,g.y,v.y,p.y,this.tension),Xd.initCatmullRom(f.z,g.z,v.z,p.z,this.tension));return n.set(Gd.calc(d),Wd.calc(d),Xd.calc(d)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const s=this.points[t];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(new W().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ov(r,e,t,n,s){const a=(n-e)*.5,c=(s-t)*.5,u=r*r,d=r*u;return(2*t-2*n+a+c)*d+(-3*t+3*n-2*a-c)*u+a*r+t}function RM(r,e){const t=1-r;return t*t*e}function CM(r,e){return 2*(1-r)*r*e}function NM(r,e){return r*r*e}function el(r,e,t,n){return RM(r,e)+CM(r,t)+NM(r,n)}function LM(r,e){const t=1-r;return t*t*t*e}function PM(r,e){const t=1-r;return 3*t*t*r*e}function bM(r,e){return 3*(1-r)*r*r*e}function IM(r,e){return r*r*r*e}function tl(r,e,t,n,s){return LM(r,e)+PM(r,t)+bM(r,n)+IM(r,s)}class s0 extends ar{constructor(e=new Q,t=new Q,n=new Q,s=new Q){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=s}getPoint(e,t=new Q){const n=t,s=this.v0,a=this.v1,c=this.v2,u=this.v3;return n.set(tl(e,s.x,a.x,c.x,u.x),tl(e,s.y,a.y,c.y,u.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class DM extends ar{constructor(e=new W,t=new W,n=new W,s=new W){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=s}getPoint(e,t=new W){const n=t,s=this.v0,a=this.v1,c=this.v2,u=this.v3;return n.set(tl(e,s.x,a.x,c.x,u.x),tl(e,s.y,a.y,c.y,u.y),tl(e,s.z,a.z,c.z,u.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class o0 extends ar{constructor(e=new Q,t=new Q){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Q){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Q){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class UM extends ar{constructor(e=new W,t=new W){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new W){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new W){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class a0 extends ar{constructor(e=new Q,t=new Q,n=new Q){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Q){const n=t,s=this.v0,a=this.v1,c=this.v2;return n.set(el(e,s.x,a.x,c.x),el(e,s.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class OM extends ar{constructor(e=new W,t=new W,n=new W){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new W){const n=t,s=this.v0,a=this.v1,c=this.v2;return n.set(el(e,s.x,a.x,c.x),el(e,s.y,a.y,c.y),el(e,s.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class l0 extends ar{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Q){const n=t,s=this.points,a=(s.length-1)*e,c=Math.floor(a),u=a-c,d=s[c===0?c:c-1],f=s[c],p=s[c>s.length-2?s.length-1:c+1],g=s[c>s.length-3?s.length-1:c+2];return n.set(Ov(u,d.x,f.x,p.x,g.x),Ov(u,d.y,f.y,p.y,g.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const s=this.points[t];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(new Q().fromArray(s))}return this}}var Fv=Object.freeze({__proto__:null,ArcCurve:wM,CatmullRomCurve3:AM,CubicBezierCurve:s0,CubicBezierCurve3:DM,EllipseCurve:fp,LineCurve:o0,LineCurve3:UM,QuadraticBezierCurve:a0,QuadraticBezierCurve3:OM,SplineCurve:l0});class FM extends ar{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Fv[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),s=this.getCurveLengths();let a=0;for(;a<s.length;){if(s[a]>=n){const c=s[a]-n,u=this.curves[a],d=u.getLength(),f=d===0?0:1-c/d;return u.getPointAt(f,t)}a++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,s=this.curves.length;n<s;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let s=0,a=this.curves;s<a.length;s++){const c=a[s],u=c.isEllipseCurve?e*2:c.isLineCurve||c.isLineCurve3?1:c.isSplineCurve?e*c.points.length:e,d=c.getPoints(u);for(let f=0;f<d.length;f++){const p=d[f];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const s=e.curves[t];this.curves.push(s.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const s=this.curves[t];e.curves.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const s=e.curves[t];this.curves.push(new Fv[s.type]().fromJSON(s))}return this}}class zv extends FM{constructor(e){super(),this.type="Path",this.currentPoint=new Q,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new o0(this.currentPoint.clone(),new Q(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,s){const a=new a0(this.currentPoint.clone(),new Q(e,t),new Q(n,s));return this.curves.push(a),this.currentPoint.set(n,s),this}bezierCurveTo(e,t,n,s,a,c){const u=new s0(this.currentPoint.clone(),new Q(e,t),new Q(n,s),new Q(a,c));return this.curves.push(u),this.currentPoint.set(a,c),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new l0(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,s,a,c){const u=this.currentPoint.x,d=this.currentPoint.y;return this.absarc(e+u,t+d,n,s,a,c),this}absarc(e,t,n,s,a,c){return this.absellipse(e,t,n,n,s,a,c),this}ellipse(e,t,n,s,a,c,u,d){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+f,t+p,n,s,a,c,u,d),this}absellipse(e,t,n,s,a,c,u,d){const f=new fp(e,t,n,s,a,c,u,d);if(this.curves.length>0){const g=f.getPoint(0);g.equals(this.currentPoint)||this.lineTo(g.x,g.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class dl extends zv{constructor(e){super(e),this.uuid=sr(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,s=this.holes.length;n<s;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const s=e.holes[t];this.holes.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const s=this.holes[t];e.holes.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const s=e.holes[t];this.holes.push(new zv().fromJSON(s))}return this}}const zM={triangulate:function(r,e,t=2){const n=e&&e.length,s=n?e[0]*t:r.length;let a=c0(r,0,s,t,!0);const c=[];if(!a||a.next===a.prev)return c;let u,d,f,p,g,v,y;if(n&&(a=GM(r,e,a,t)),r.length>80*t){u=f=r[0],d=p=r[1];for(let M=t;M<s;M+=t)g=r[M],v=r[M+1],g<u&&(u=g),v<d&&(d=v),g>f&&(f=g),v>p&&(p=v);y=Math.max(f-u,p-d),y=y!==0?32767/y:0}return ol(a,c,t,u,d,y,0),c}};function c0(r,e,t,n,s){let a,c;if(s===eE(r,e,t,n)>0)for(a=e;a<t;a+=n)c=kv(a,r[a],r[a+1],c);else for(a=t-n;a>=e;a-=n)c=kv(a,r[a],r[a+1],c);return c&&Tu(c,c.next)&&(ll(c),c=c.next),c}function qs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Tu(t,t.next)||nn(t.prev,t,t.next)===0)){if(ll(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ol(r,e,t,n,s,a,c){if(!r)return;!c&&a&&jM(r,n,s,a);let u=r,d,f;for(;r.prev!==r.next;){if(d=r.prev,f=r.next,a?BM(r,n,s,a):kM(r)){e.push(d.i/t|0),e.push(r.i/t|0),e.push(f.i/t|0),ll(r),r=f.next,u=f.next;continue}if(r=f,r===u){c?c===1?(r=VM(qs(r),e,t),ol(r,e,t,n,s,a,2)):c===2&&HM(r,e,t,n,s,a):ol(qs(r),e,t,n,s,a,1);break}}}function kM(r){const e=r.prev,t=r,n=r.next;if(nn(e,t,n)>=0)return!1;const s=e.x,a=t.x,c=n.x,u=e.y,d=t.y,f=n.y,p=s<a?s<c?s:c:a<c?a:c,g=u<d?u<f?u:f:d<f?d:f,v=s>a?s>c?s:c:a>c?a:c,y=u>d?u>f?u:f:d>f?d:f;let M=n.next;for(;M!==e;){if(M.x>=p&&M.x<=v&&M.y>=g&&M.y<=y&&zo(s,u,a,d,c,f,M.x,M.y)&&nn(M.prev,M,M.next)>=0)return!1;M=M.next}return!0}function BM(r,e,t,n){const s=r.prev,a=r,c=r.next;if(nn(s,a,c)>=0)return!1;const u=s.x,d=a.x,f=c.x,p=s.y,g=a.y,v=c.y,y=u<d?u<f?u:f:d<f?d:f,M=p<g?p<v?p:v:g<v?g:v,E=u>d?u>f?u:f:d>f?d:f,S=p>g?p>v?p:v:g>v?g:v,x=qf(y,M,e,t,n),L=qf(E,S,e,t,n);let R=r.prevZ,w=r.nextZ;for(;R&&R.z>=x&&w&&w.z<=L;){if(R.x>=y&&R.x<=E&&R.y>=M&&R.y<=S&&R!==s&&R!==c&&zo(u,p,d,g,f,v,R.x,R.y)&&nn(R.prev,R,R.next)>=0||(R=R.prevZ,w.x>=y&&w.x<=E&&w.y>=M&&w.y<=S&&w!==s&&w!==c&&zo(u,p,d,g,f,v,w.x,w.y)&&nn(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;R&&R.z>=x;){if(R.x>=y&&R.x<=E&&R.y>=M&&R.y<=S&&R!==s&&R!==c&&zo(u,p,d,g,f,v,R.x,R.y)&&nn(R.prev,R,R.next)>=0)return!1;R=R.prevZ}for(;w&&w.z<=L;){if(w.x>=y&&w.x<=E&&w.y>=M&&w.y<=S&&w!==s&&w!==c&&zo(u,p,d,g,f,v,w.x,w.y)&&nn(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function VM(r,e,t){let n=r;do{const s=n.prev,a=n.next.next;!Tu(s,a)&&u0(s,n,n.next,a)&&al(s,a)&&al(a,s)&&(e.push(s.i/t|0),e.push(n.i/t|0),e.push(a.i/t|0),ll(n),ll(n.next),n=r=a),n=n.next}while(n!==r);return qs(n)}function HM(r,e,t,n,s,a){let c=r;do{let u=c.next.next;for(;u!==c.prev;){if(c.i!==u.i&&ZM(c,u)){let d=h0(c,u);c=qs(c,c.next),d=qs(d,d.next),ol(c,e,t,n,s,a,0),ol(d,e,t,n,s,a,0);return}u=u.next}c=c.next}while(c!==r)}function GM(r,e,t,n){const s=[];let a,c,u,d,f;for(a=0,c=e.length;a<c;a++)u=e[a]*n,d=a<c-1?e[a+1]*n:r.length,f=c0(r,u,d,n,!1),f===f.next&&(f.steiner=!0),s.push(KM(f));for(s.sort(WM),a=0;a<s.length;a++)t=XM(s[a],t);return t}function WM(r,e){return r.x-e.x}function XM(r,e){const t=YM(r,e);if(!t)return e;const n=h0(t,r);return qs(n,n.next),qs(t,t.next)}function YM(r,e){let t=e,n=-1/0,s;const a=r.x,c=r.y;do{if(c<=t.y&&c>=t.next.y&&t.next.y!==t.y){const v=t.x+(c-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(v<=a&&v>n&&(n=v,s=t.x<t.next.x?t:t.next,v===a))return s}t=t.next}while(t!==e);if(!s)return null;const u=s,d=s.x,f=s.y;let p=1/0,g;t=s;do a>=t.x&&t.x>=d&&a!==t.x&&zo(c<f?a:n,c,d,f,c<f?n:a,c,t.x,t.y)&&(g=Math.abs(c-t.y)/(a-t.x),al(t,r)&&(g<p||g===p&&(t.x>s.x||t.x===s.x&&qM(s,t)))&&(s=t,p=g)),t=t.next;while(t!==u);return s}function qM(r,e){return nn(r.prev,r,e.prev)<0&&nn(e.next,r,r.next)<0}function jM(r,e,t,n){let s=r;do s.z===0&&(s.z=qf(s.x,s.y,e,t,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==r);s.prevZ.nextZ=null,s.prevZ=null,$M(s)}function $M(r){let e,t,n,s,a,c,u,d,f=1;do{for(t=r,r=null,a=null,c=0;t;){for(c++,n=t,u=0,e=0;e<f&&(u++,n=n.nextZ,!!n);e++);for(d=f;u>0||d>0&&n;)u!==0&&(d===0||!n||t.z<=n.z)?(s=t,t=t.nextZ,u--):(s=n,n=n.nextZ,d--),a?a.nextZ=s:r=s,s.prevZ=a,a=s;t=n}a.nextZ=null,f*=2}while(c>1);return r}function qf(r,e,t,n,s){return r=(r-t)*s|0,e=(e-n)*s|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function KM(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function zo(r,e,t,n,s,a,c,u){return(s-c)*(e-u)>=(r-c)*(a-u)&&(r-c)*(n-u)>=(t-c)*(e-u)&&(t-c)*(a-u)>=(s-c)*(n-u)}function ZM(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!JM(r,e)&&(al(r,e)&&al(e,r)&&QM(r,e)&&(nn(r.prev,r,e.prev)||nn(r,e.prev,e))||Tu(r,e)&&nn(r.prev,r,r.next)>0&&nn(e.prev,e,e.next)>0)}function nn(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Tu(r,e){return r.x===e.x&&r.y===e.y}function u0(r,e,t,n){const s=Zc(nn(r,e,t)),a=Zc(nn(r,e,n)),c=Zc(nn(t,n,r)),u=Zc(nn(t,n,e));return!!(s!==a&&c!==u||s===0&&Kc(r,t,e)||a===0&&Kc(r,n,e)||c===0&&Kc(t,r,n)||u===0&&Kc(t,e,n))}function Kc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Zc(r){return r>0?1:r<0?-1:0}function JM(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&u0(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function al(r,e){return nn(r.prev,r,r.next)<0?nn(r,e,r.next)>=0&&nn(r,r.prev,e)>=0:nn(r,e,r.prev)<0||nn(r,r.next,e)<0}function QM(r,e){let t=r,n=!1;const s=(r.x+e.x)/2,a=(r.y+e.y)/2;do t.y>a!=t.next.y>a&&t.next.y!==t.y&&s<(t.next.x-t.x)*(a-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function h0(r,e){const t=new jf(r.i,r.x,r.y),n=new jf(e.i,e.x,e.y),s=r.next,a=e.prev;return r.next=e,e.prev=r,t.next=s,s.prev=t,n.next=t,t.prev=n,a.next=n,n.prev=a,n}function kv(r,e,t,n){const s=new jf(r,e,t);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function ll(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function jf(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function eE(r,e,t,n){let s=0;for(let a=e,c=t-n;a<t;a+=n)s+=(r[c]-r[a])*(r[a+1]+r[c+1]),c=a;return s}class nl{static area(e){const t=e.length;let n=0;for(let s=t-1,a=0;a<t;s=a++)n+=e[s].x*e[a].y-e[a].x*e[s].y;return n*.5}static isClockWise(e){return nl.area(e)<0}static triangulateShape(e,t){const n=[],s=[],a=[];Bv(e),Vv(n,e);let c=e.length;t.forEach(Bv);for(let d=0;d<t.length;d++)s.push(c),c+=t[d].length,Vv(n,t[d]);const u=zM.triangulate(n,s);for(let d=0;d<u.length;d+=3)a.push(u.slice(d,d+3));return a}}function Bv(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Vv(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class wu extends Mi{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};const a=e/2,c=t/2,u=Math.floor(n),d=Math.floor(s),f=u+1,p=d+1,g=e/u,v=t/d,y=[],M=[],E=[],S=[];for(let x=0;x<p;x++){const L=x*v-c;for(let R=0;R<f;R++){const w=R*g-a;M.push(w,-L,0),E.push(0,0,1),S.push(R/u),S.push(1-x/d)}}for(let x=0;x<d;x++)for(let L=0;L<u;L++){const R=L+f*x,w=L+f*(x+1),z=L+1+f*(x+1),U=L+1+f*x;y.push(R,w,U),y.push(w,z,U)}this.setIndex(y),this.setAttribute("position",new _n(M,3)),this.setAttribute("normal",new _n(E,3)),this.setAttribute("uv",new _n(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wu(e.width,e.height,e.widthSegments,e.heightSegments)}}class ia extends Mi{constructor(e=new dl([new Q(0,.5),new Q(-.5,-.5),new Q(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],s=[],a=[],c=[];let u=0,d=0;if(Array.isArray(e)===!1)f(e);else for(let p=0;p<e.length;p++)f(e[p]),this.addGroup(u,d,p),u+=d,d=0;this.setIndex(n),this.setAttribute("position",new _n(s,3)),this.setAttribute("normal",new _n(a,3)),this.setAttribute("uv",new _n(c,2));function f(p){const g=s.length/3,v=p.extractPoints(t);let y=v.shape;const M=v.holes;nl.isClockWise(y)===!1&&(y=y.reverse());for(let S=0,x=M.length;S<x;S++){const L=M[S];nl.isClockWise(L)===!0&&(M[S]=L.reverse())}const E=nl.triangulateShape(y,M);for(let S=0,x=M.length;S<x;S++){const L=M[S];y=y.concat(L)}for(let S=0,x=y.length;S<x;S++){const L=y[S];s.push(L.x,L.y,0),a.push(0,0,1),c.push(L.x,L.y)}for(let S=0,x=E.length;S<x;S++){const L=E[S],R=L[0]+g,w=L[1]+g,z=L[2]+g;n.push(R,w,z),d+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return tE(t,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];n.push(c)}return new ia(n,e.curveSegments)}}function tE(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const s=r[t];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e}class cl extends Mi{constructor(e=1,t=32,n=16,s=0,a=Math.PI*2,c=0,u=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:a,thetaStart:c,thetaLength:u},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const d=Math.min(c+u,Math.PI);let f=0;const p=[],g=new W,v=new W,y=[],M=[],E=[],S=[];for(let x=0;x<=n;x++){const L=[],R=x/n;let w=0;x===0&&c===0?w=.5/t:x===n&&d===Math.PI&&(w=-.5/t);for(let z=0;z<=t;z++){const U=z/t;g.x=-e*Math.cos(s+U*a)*Math.sin(c+R*u),g.y=e*Math.cos(c+R*u),g.z=e*Math.sin(s+U*a)*Math.sin(c+R*u),M.push(g.x,g.y,g.z),v.copy(g).normalize(),E.push(v.x,v.y,v.z),S.push(U+w,1-R),L.push(f++)}p.push(L)}for(let x=0;x<n;x++)for(let L=0;L<t;L++){const R=p[x][L+1],w=p[x][L],z=p[x+1][L],U=p[x+1][L+1];(x!==0||c>0)&&y.push(R,w,U),(x!==n-1||d<Math.PI)&&y.push(w,z,U)}this.setIndex(y),this.setAttribute("position",new _n(M,3)),this.setAttribute("normal",new _n(E,3)),this.setAttribute("uv",new _n(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Xo extends ta{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new st(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=uu,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new $i,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nE extends ta{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=TS,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class iE extends ta{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class rE extends Jn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new st(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class sE extends e0{constructor(e=-1,t=1,n=1,s=-1,a=.1,c=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=a,this.far=c,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,a,c){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=a,this.view.height=c,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let a=n-e,c=n+e,u=s+t,d=s-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=f*this.view.offsetX,c=a+f*this.view.width,u-=p*this.view.offsetY,d=u-p*this.view.height}this.projectionMatrix.makeOrthographic(a,c,u,d,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class oE extends rE{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class aE extends bi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Hv{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=vt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(vt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class lE extends r0{constructor(e=10,t=10,n=4473924,s=8947848){n=new st(n),s=new st(s);const a=t/2,c=e/t,u=e/2,d=[],f=[];for(let v=0,y=0,M=-u;v<=t;v++,M+=c){d.push(-u,0,M,u,0,M),d.push(M,0,-u,M,0,u);const E=v===a?n:s;E.toArray(f,y),y+=3,E.toArray(f,y),y+=3,E.toArray(f,y),y+=3,E.toArray(f,y),y+=3}const p=new Mi;p.setAttribute("position",new _n(d,3)),p.setAttribute("color",new _n(f,3));const g=new Eu({vertexColors:!0,toneMapped:!1});super(p,g),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Gv extends r0{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],s=new Mi;s.setAttribute("position",new _n(t,3)),s.setAttribute("color",new _n(n,3));const a=new Eu({vertexColors:!0,toneMapped:!1});super(s,a),this.type="AxesHelper"}setColors(e,t,n){const s=new st,a=this.geometry.attributes.color.array;return s.set(e),s.toArray(a,0),s.toArray(a,3),s.set(t),s.toArray(a,6),s.toArray(a,9),s.set(n),s.toArray(a,12),s.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cE extends hs{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function Wv(r,e,t,n){const s=uE(n);switch(t){case O_:return r*e;case z_:return r*e;case k_:return r*e*2;case B_:return r*e/s.components*s.byteLength;case op:return r*e/s.components*s.byteLength;case V_:return r*e*2/s.components*s.byteLength;case ap:return r*e*2/s.components*s.byteLength;case F_:return r*e*3/s.components*s.byteLength;case Yi:return r*e*4/s.components*s.byteLength;case lp:return r*e*4/s.components*s.byteLength;case iu:case ru:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case su:case ou:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Mf:case Tf:return Math.max(r,16)*Math.max(e,8)/4;case Sf:case Ef:return Math.max(r,8)*Math.max(e,8)/2;case wf:case Af:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Rf:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Cf:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Nf:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Lf:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Pf:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case bf:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case If:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Df:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Uf:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Of:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Ff:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case zf:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case kf:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Bf:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Vf:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case au:case Hf:case Gf:return Math.ceil(r/4)*Math.ceil(e/4)*16;case H_:case Wf:return Math.ceil(r/4)*Math.ceil(e/4)*8;case Xf:case Yf:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function uE(r){switch(r){case Cr:case I_:return{byteLength:1,components:1};case il:case D_:case ea:return{byteLength:2,components:1};case rp:case sp:return{byteLength:2,components:4};case cs:case Su:case Ar:return{byteLength:4,components:1};case U_:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:np}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=np);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function d0(){let r=null,e=!1,t=null,n=null;function s(a,c){t(a,c),n=r.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(s),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){r=a}}}function hE(r){const e=new WeakMap;function t(u,d){const f=u.array,p=u.usage,g=f.byteLength,v=r.createBuffer();r.bindBuffer(d,v),r.bufferData(d,f,p),u.onUploadCallback();let y;if(f instanceof Float32Array)y=r.FLOAT;else if(f instanceof Uint16Array)u.isFloat16BufferAttribute?y=r.HALF_FLOAT:y=r.UNSIGNED_SHORT;else if(f instanceof Int16Array)y=r.SHORT;else if(f instanceof Uint32Array)y=r.UNSIGNED_INT;else if(f instanceof Int32Array)y=r.INT;else if(f instanceof Int8Array)y=r.BYTE;else if(f instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:v,type:y,bytesPerElement:f.BYTES_PER_ELEMENT,version:u.version,size:g}}function n(u,d,f){const p=d.array,g=d.updateRanges;if(r.bindBuffer(f,u),g.length===0)r.bufferSubData(f,0,p);else{g.sort((y,M)=>y.start-M.start);let v=0;for(let y=1;y<g.length;y++){const M=g[v],E=g[y];E.start<=M.start+M.count+1?M.count=Math.max(M.count,E.start+E.count-M.start):(++v,g[v]=E)}g.length=v+1;for(let y=0,M=g.length;y<M;y++){const E=g[y];r.bufferSubData(f,E.start*p.BYTES_PER_ELEMENT,p,E.start,E.count)}d.clearUpdateRanges()}d.onUploadCallback()}function s(u){return u.isInterleavedBufferAttribute&&(u=u.data),e.get(u)}function a(u){u.isInterleavedBufferAttribute&&(u=u.data);const d=e.get(u);d&&(r.deleteBuffer(d.buffer),e.delete(u))}function c(u,d){if(u.isInterleavedBufferAttribute&&(u=u.data),u.isGLBufferAttribute){const p=e.get(u);(!p||p.version<u.version)&&e.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}const f=e.get(u);if(f===void 0)e.set(u,t(u,d));else if(f.version<u.version){if(f.size!==u.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,u,d),f.version=u.version}}return{get:s,remove:a,update:c}}var dE=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,fE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,pE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,mE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,vE=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,_E=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,xE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,yE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,SE=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,ME=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,EE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,TE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,wE=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,AE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,RE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,CE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,NE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,LE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,PE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,bE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,IE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,DE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,UE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,OE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,FE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,zE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,kE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,BE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,VE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,HE="gl_FragColor = linearToOutputTexel( gl_FragColor );",GE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,WE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,XE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,YE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,qE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,jE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,$E=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,KE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ZE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,JE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,QE=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,eT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,tT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,nT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,iT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,rT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,sT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,oT=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,aT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lT=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,cT=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,uT=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,hT=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,dT=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,fT=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,pT=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,mT=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,gT=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vT=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,_T=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,xT=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,yT=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ST=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,MT=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ET=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,TT=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,wT=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,AT=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,RT=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,CT=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,NT=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,LT=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,PT=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,bT=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,IT=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,DT=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,UT=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,OT=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,FT=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,zT=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,kT=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,BT=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,VT=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,HT=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,GT=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,WT=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,XT=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,YT=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,qT=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,jT=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,$T=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,KT=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ZT=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,JT=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,QT=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ew=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,tw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,nw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,iw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,rw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,sw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ow=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,aw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,lw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,cw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,uw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const hw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,dw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,pw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,_w=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,xw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,yw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Sw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Mw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ew=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Tw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ww=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Lw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,bw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Iw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Ow=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Bw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Vw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Gw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ww=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mt={alphahash_fragment:dE,alphahash_pars_fragment:fE,alphamap_fragment:pE,alphamap_pars_fragment:mE,alphatest_fragment:gE,alphatest_pars_fragment:vE,aomap_fragment:_E,aomap_pars_fragment:xE,batching_pars_vertex:yE,batching_vertex:SE,begin_vertex:ME,beginnormal_vertex:EE,bsdfs:TE,iridescence_fragment:wE,bumpmap_pars_fragment:AE,clipping_planes_fragment:RE,clipping_planes_pars_fragment:CE,clipping_planes_pars_vertex:NE,clipping_planes_vertex:LE,color_fragment:PE,color_pars_fragment:bE,color_pars_vertex:IE,color_vertex:DE,common:UE,cube_uv_reflection_fragment:OE,defaultnormal_vertex:FE,displacementmap_pars_vertex:zE,displacementmap_vertex:kE,emissivemap_fragment:BE,emissivemap_pars_fragment:VE,colorspace_fragment:HE,colorspace_pars_fragment:GE,envmap_fragment:WE,envmap_common_pars_fragment:XE,envmap_pars_fragment:YE,envmap_pars_vertex:qE,envmap_physical_pars_fragment:rT,envmap_vertex:jE,fog_vertex:$E,fog_pars_vertex:KE,fog_fragment:ZE,fog_pars_fragment:JE,gradientmap_pars_fragment:QE,lightmap_pars_fragment:eT,lights_lambert_fragment:tT,lights_lambert_pars_fragment:nT,lights_pars_begin:iT,lights_toon_fragment:sT,lights_toon_pars_fragment:oT,lights_phong_fragment:aT,lights_phong_pars_fragment:lT,lights_physical_fragment:cT,lights_physical_pars_fragment:uT,lights_fragment_begin:hT,lights_fragment_maps:dT,lights_fragment_end:fT,logdepthbuf_fragment:pT,logdepthbuf_pars_fragment:mT,logdepthbuf_pars_vertex:gT,logdepthbuf_vertex:vT,map_fragment:_T,map_pars_fragment:xT,map_particle_fragment:yT,map_particle_pars_fragment:ST,metalnessmap_fragment:MT,metalnessmap_pars_fragment:ET,morphinstance_vertex:TT,morphcolor_vertex:wT,morphnormal_vertex:AT,morphtarget_pars_vertex:RT,morphtarget_vertex:CT,normal_fragment_begin:NT,normal_fragment_maps:LT,normal_pars_fragment:PT,normal_pars_vertex:bT,normal_vertex:IT,normalmap_pars_fragment:DT,clearcoat_normal_fragment_begin:UT,clearcoat_normal_fragment_maps:OT,clearcoat_pars_fragment:FT,iridescence_pars_fragment:zT,opaque_fragment:kT,packing:BT,premultiplied_alpha_fragment:VT,project_vertex:HT,dithering_fragment:GT,dithering_pars_fragment:WT,roughnessmap_fragment:XT,roughnessmap_pars_fragment:YT,shadowmap_pars_fragment:qT,shadowmap_pars_vertex:jT,shadowmap_vertex:$T,shadowmask_pars_fragment:KT,skinbase_vertex:ZT,skinning_pars_vertex:JT,skinning_vertex:QT,skinnormal_vertex:ew,specularmap_fragment:tw,specularmap_pars_fragment:nw,tonemapping_fragment:iw,tonemapping_pars_fragment:rw,transmission_fragment:sw,transmission_pars_fragment:ow,uv_pars_fragment:aw,uv_pars_vertex:lw,uv_vertex:cw,worldpos_vertex:uw,background_vert:hw,background_frag:dw,backgroundCube_vert:fw,backgroundCube_frag:pw,cube_vert:mw,cube_frag:gw,depth_vert:vw,depth_frag:_w,distanceRGBA_vert:xw,distanceRGBA_frag:yw,equirect_vert:Sw,equirect_frag:Mw,linedashed_vert:Ew,linedashed_frag:Tw,meshbasic_vert:ww,meshbasic_frag:Aw,meshlambert_vert:Rw,meshlambert_frag:Cw,meshmatcap_vert:Nw,meshmatcap_frag:Lw,meshnormal_vert:Pw,meshnormal_frag:bw,meshphong_vert:Iw,meshphong_frag:Dw,meshphysical_vert:Uw,meshphysical_frag:Ow,meshtoon_vert:Fw,meshtoon_frag:zw,points_vert:kw,points_frag:Bw,shadow_vert:Vw,shadow_frag:Hw,sprite_vert:Gw,sprite_frag:Ww},De={common:{diffuse:{value:new st(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},envMapRotation:{value:new ft},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new Q(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new st(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new st(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new st(16777215)},opacity:{value:1},center:{value:new Q(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},tr={basic:{uniforms:qn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.fog]),vertexShader:mt.meshbasic_vert,fragmentShader:mt.meshbasic_frag},lambert:{uniforms:qn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new st(0)}}]),vertexShader:mt.meshlambert_vert,fragmentShader:mt.meshlambert_frag},phong:{uniforms:qn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new st(0)},specular:{value:new st(1118481)},shininess:{value:30}}]),vertexShader:mt.meshphong_vert,fragmentShader:mt.meshphong_frag},standard:{uniforms:qn([De.common,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.roughnessmap,De.metalnessmap,De.fog,De.lights,{emissive:{value:new st(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag},toon:{uniforms:qn([De.common,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.gradientmap,De.fog,De.lights,{emissive:{value:new st(0)}}]),vertexShader:mt.meshtoon_vert,fragmentShader:mt.meshtoon_frag},matcap:{uniforms:qn([De.common,De.bumpmap,De.normalmap,De.displacementmap,De.fog,{matcap:{value:null}}]),vertexShader:mt.meshmatcap_vert,fragmentShader:mt.meshmatcap_frag},points:{uniforms:qn([De.points,De.fog]),vertexShader:mt.points_vert,fragmentShader:mt.points_frag},dashed:{uniforms:qn([De.common,De.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mt.linedashed_vert,fragmentShader:mt.linedashed_frag},depth:{uniforms:qn([De.common,De.displacementmap]),vertexShader:mt.depth_vert,fragmentShader:mt.depth_frag},normal:{uniforms:qn([De.common,De.bumpmap,De.normalmap,De.displacementmap,{opacity:{value:1}}]),vertexShader:mt.meshnormal_vert,fragmentShader:mt.meshnormal_frag},sprite:{uniforms:qn([De.sprite,De.fog]),vertexShader:mt.sprite_vert,fragmentShader:mt.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:mt.background_vert,fragmentShader:mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ft}},vertexShader:mt.backgroundCube_vert,fragmentShader:mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:mt.cube_vert,fragmentShader:mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mt.equirect_vert,fragmentShader:mt.equirect_frag},distanceRGBA:{uniforms:qn([De.common,De.displacementmap,{referencePosition:{value:new W},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mt.distanceRGBA_vert,fragmentShader:mt.distanceRGBA_frag},shadow:{uniforms:qn([De.lights,De.fog,{color:{value:new st(0)},opacity:{value:1}}]),vertexShader:mt.shadow_vert,fragmentShader:mt.shadow_frag}};tr.physical={uniforms:qn([tr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new Q(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new st(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new Q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new st(0)},specularColor:{value:new st(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new Q},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag};const Jc={r:0,b:0,g:0},Is=new $i,Xw=new Kt;function Yw(r,e,t,n,s,a,c){const u=new st(0);let d=a===!0?0:1,f,p,g=null,v=0,y=null;function M(R){let w=R.isScene===!0?R.background:null;return w&&w.isTexture&&(w=(R.backgroundBlurriness>0?t:e).get(w)),w}function E(R){let w=!1;const z=M(R);z===null?x(u,d):z&&z.isColor&&(x(z,1),w=!0);const U=r.xr.getEnvironmentBlendMode();U==="additive"?n.buffers.color.setClear(0,0,0,1,c):U==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,c),(r.autoClear||w)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function S(R,w){const z=M(w);z&&(z.isCubeTexture||z.mapping===yu)?(p===void 0&&(p=new Pn(new na(1,1,1),new us({name:"BackgroundCubeMaterial",uniforms:Jo(tr.backgroundCube.uniforms),vertexShader:tr.backgroundCube.vertexShader,fragmentShader:tr.backgroundCube.fragmentShader,side:Kn,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(U,O,Y){this.matrixWorld.copyPosition(Y.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(p)),Is.copy(w.backgroundRotation),Is.x*=-1,Is.y*=-1,Is.z*=-1,z.isCubeTexture&&z.isRenderTargetTexture===!1&&(Is.y*=-1,Is.z*=-1),p.material.uniforms.envMap.value=z,p.material.uniforms.flipEnvMap.value=z.isCubeTexture&&z.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(Xw.makeRotationFromEuler(Is)),p.material.toneMapped=gt.getTransfer(z.colorSpace)!==Ft,(g!==z||v!==z.version||y!==r.toneMapping)&&(p.material.needsUpdate=!0,g=z,v=z.version,y=r.toneMapping),p.layers.enableAll(),R.unshift(p,p.geometry,p.material,0,0,null)):z&&z.isTexture&&(f===void 0&&(f=new Pn(new wu(2,2),new us({name:"BackgroundMaterial",uniforms:Jo(tr.background.uniforms),vertexShader:tr.background.vertexShader,fragmentShader:tr.background.fragmentShader,side:ls,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(f)),f.material.uniforms.t2D.value=z,f.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,f.material.toneMapped=gt.getTransfer(z.colorSpace)!==Ft,z.matrixAutoUpdate===!0&&z.updateMatrix(),f.material.uniforms.uvTransform.value.copy(z.matrix),(g!==z||v!==z.version||y!==r.toneMapping)&&(f.material.needsUpdate=!0,g=z,v=z.version,y=r.toneMapping),f.layers.enableAll(),R.unshift(f,f.geometry,f.material,0,0,null))}function x(R,w){R.getRGB(Jc,Q_(r)),n.buffers.color.setClear(Jc.r,Jc.g,Jc.b,w,c)}function L(){p!==void 0&&(p.geometry.dispose(),p.material.dispose()),f!==void 0&&(f.geometry.dispose(),f.material.dispose())}return{getClearColor:function(){return u},setClearColor:function(R,w=1){u.set(R),d=w,x(u,d)},getClearAlpha:function(){return d},setClearAlpha:function(R){d=R,x(u,d)},render:E,addToRenderList:S,dispose:L}}function qw(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},s=v(null);let a=s,c=!1;function u(N,I,se,K,fe){let ve=!1;const ue=g(K,se,I);a!==ue&&(a=ue,f(a.object)),ve=y(N,K,se,fe),ve&&M(N,K,se,fe),fe!==null&&e.update(fe,r.ELEMENT_ARRAY_BUFFER),(ve||c)&&(c=!1,w(N,I,se,K),fe!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(fe).buffer))}function d(){return r.createVertexArray()}function f(N){return r.bindVertexArray(N)}function p(N){return r.deleteVertexArray(N)}function g(N,I,se){const K=se.wireframe===!0;let fe=n[N.id];fe===void 0&&(fe={},n[N.id]=fe);let ve=fe[I.id];ve===void 0&&(ve={},fe[I.id]=ve);let ue=ve[K];return ue===void 0&&(ue=v(d()),ve[K]=ue),ue}function v(N){const I=[],se=[],K=[];for(let fe=0;fe<t;fe++)I[fe]=0,se[fe]=0,K[fe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:se,attributeDivisors:K,object:N,attributes:{},index:null}}function y(N,I,se,K){const fe=a.attributes,ve=I.attributes;let ue=0;const de=se.getAttributes();for(const V in de)if(de[V].location>=0){const ae=fe[V];let F=ve[V];if(F===void 0&&(V==="instanceMatrix"&&N.instanceMatrix&&(F=N.instanceMatrix),V==="instanceColor"&&N.instanceColor&&(F=N.instanceColor)),ae===void 0||ae.attribute!==F||F&&ae.data!==F.data)return!0;ue++}return a.attributesNum!==ue||a.index!==K}function M(N,I,se,K){const fe={},ve=I.attributes;let ue=0;const de=se.getAttributes();for(const V in de)if(de[V].location>=0){let ae=ve[V];ae===void 0&&(V==="instanceMatrix"&&N.instanceMatrix&&(ae=N.instanceMatrix),V==="instanceColor"&&N.instanceColor&&(ae=N.instanceColor));const F={};F.attribute=ae,ae&&ae.data&&(F.data=ae.data),fe[V]=F,ue++}a.attributes=fe,a.attributesNum=ue,a.index=K}function E(){const N=a.newAttributes;for(let I=0,se=N.length;I<se;I++)N[I]=0}function S(N){x(N,0)}function x(N,I){const se=a.newAttributes,K=a.enabledAttributes,fe=a.attributeDivisors;se[N]=1,K[N]===0&&(r.enableVertexAttribArray(N),K[N]=1),fe[N]!==I&&(r.vertexAttribDivisor(N,I),fe[N]=I)}function L(){const N=a.newAttributes,I=a.enabledAttributes;for(let se=0,K=I.length;se<K;se++)I[se]!==N[se]&&(r.disableVertexAttribArray(se),I[se]=0)}function R(N,I,se,K,fe,ve,ue){ue===!0?r.vertexAttribIPointer(N,I,se,fe,ve):r.vertexAttribPointer(N,I,se,K,fe,ve)}function w(N,I,se,K){E();const fe=K.attributes,ve=se.getAttributes(),ue=I.defaultAttributeValues;for(const de in ve){const V=ve[de];if(V.location>=0){let he=fe[de];if(he===void 0&&(de==="instanceMatrix"&&N.instanceMatrix&&(he=N.instanceMatrix),de==="instanceColor"&&N.instanceColor&&(he=N.instanceColor)),he!==void 0){const ae=he.normalized,F=he.itemSize,re=e.get(he);if(re===void 0)continue;const ke=re.buffer,ee=re.type,pe=re.bytesPerElement,Re=ee===r.INT||ee===r.UNSIGNED_INT||he.gpuType===Su;if(he.isInterleavedBufferAttribute){const Ee=he.data,Le=Ee.stride,Be=he.offset;if(Ee.isInstancedInterleavedBuffer){for(let rt=0;rt<V.locationSize;rt++)x(V.location+rt,Ee.meshPerAttribute);N.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=Ee.meshPerAttribute*Ee.count)}else for(let rt=0;rt<V.locationSize;rt++)S(V.location+rt);r.bindBuffer(r.ARRAY_BUFFER,ke);for(let rt=0;rt<V.locationSize;rt++)R(V.location+rt,F/V.locationSize,ee,ae,Le*pe,(Be+F/V.locationSize*rt)*pe,Re)}else{if(he.isInstancedBufferAttribute){for(let Ee=0;Ee<V.locationSize;Ee++)x(V.location+Ee,he.meshPerAttribute);N.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let Ee=0;Ee<V.locationSize;Ee++)S(V.location+Ee);r.bindBuffer(r.ARRAY_BUFFER,ke);for(let Ee=0;Ee<V.locationSize;Ee++)R(V.location+Ee,F/V.locationSize,ee,ae,F*pe,F/V.locationSize*Ee*pe,Re)}}else if(ue!==void 0){const ae=ue[de];if(ae!==void 0)switch(ae.length){case 2:r.vertexAttrib2fv(V.location,ae);break;case 3:r.vertexAttrib3fv(V.location,ae);break;case 4:r.vertexAttrib4fv(V.location,ae);break;default:r.vertexAttrib1fv(V.location,ae)}}}}L()}function z(){Y();for(const N in n){const I=n[N];for(const se in I){const K=I[se];for(const fe in K)p(K[fe].object),delete K[fe];delete I[se]}delete n[N]}}function U(N){if(n[N.id]===void 0)return;const I=n[N.id];for(const se in I){const K=I[se];for(const fe in K)p(K[fe].object),delete K[fe];delete I[se]}delete n[N.id]}function O(N){for(const I in n){const se=n[I];if(se[N.id]===void 0)continue;const K=se[N.id];for(const fe in K)p(K[fe].object),delete K[fe];delete se[N.id]}}function Y(){P(),c=!0,a!==s&&(a=s,f(a.object))}function P(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:u,reset:Y,resetDefaultState:P,dispose:z,releaseStatesOfGeometry:U,releaseStatesOfProgram:O,initAttributes:E,enableAttribute:S,disableUnusedAttributes:L}}function jw(r,e,t){let n;function s(f){n=f}function a(f,p){r.drawArrays(n,f,p),t.update(p,n,1)}function c(f,p,g){g!==0&&(r.drawArraysInstanced(n,f,p,g),t.update(p,n,g))}function u(f,p,g){if(g===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,g);let y=0;for(let M=0;M<g;M++)y+=p[M];t.update(y,n,1)}function d(f,p,g,v){if(g===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let M=0;M<f.length;M++)c(f[M],p[M],v[M]);else{y.multiDrawArraysInstancedWEBGL(n,f,0,p,0,v,0,g);let M=0;for(let E=0;E<g;E++)M+=p[E]*v[E];t.update(M,n,1)}}this.setMode=s,this.render=a,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=d}function $w(r,e,t,n){let s;function a(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");s=r.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function c(O){return!(O!==Yi&&n.convert(O)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function u(O){const Y=O===ea&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(O!==Cr&&n.convert(O)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&O!==Ar&&!Y)}function d(O){if(O==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";O="mediump"}return O==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=t.precision!==void 0?t.precision:"highp";const p=d(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const g=t.logarithmicDepthBuffer===!0,v=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),y=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),M=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),E=r.getParameter(r.MAX_TEXTURE_SIZE),S=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),x=r.getParameter(r.MAX_VERTEX_ATTRIBS),L=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),R=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),z=M>0,U=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:a,getMaxPrecision:d,textureFormatReadable:c,textureTypeReadable:u,precision:f,logarithmicDepthBuffer:g,reverseDepthBuffer:v,maxTextures:y,maxVertexTextures:M,maxTextureSize:E,maxCubemapSize:S,maxAttributes:x,maxVertexUniforms:L,maxVaryings:R,maxFragmentUniforms:w,vertexTextures:z,maxSamples:U}}function Kw(r){const e=this;let t=null,n=0,s=!1,a=!1;const c=new wr,u=new ft,d={value:null,needsUpdate:!1};this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(g,v){const y=g.length!==0||v||n!==0||s;return s=v,n=g.length,y},this.beginShadows=function(){a=!0,p(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(g,v){t=p(g,v,0)},this.setState=function(g,v,y){const M=g.clippingPlanes,E=g.clipIntersection,S=g.clipShadows,x=r.get(g);if(!s||M===null||M.length===0||a&&!S)a?p(null):f();else{const L=a?0:n,R=L*4;let w=x.clippingState||null;d.value=w,w=p(M,v,R,y);for(let z=0;z!==R;++z)w[z]=t[z];x.clippingState=w,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=L}};function f(){d.value!==t&&(d.value=t,d.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function p(g,v,y,M){const E=g!==null?g.length:0;let S=null;if(E!==0){if(S=d.value,M!==!0||S===null){const x=y+E*4,L=v.matrixWorldInverse;u.getNormalMatrix(L),(S===null||S.length<x)&&(S=new Float32Array(x));for(let R=0,w=y;R!==E;++R,w+=4)c.copy(g[R]).applyMatrix4(L,u),c.normal.toArray(S,w),S[w+3]=c.constant}d.value=S,d.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,S}}function Zw(r){let e=new WeakMap;function t(c,u){return u===vf?c.mapping=Gs:u===_f&&(c.mapping=Ws),c}function n(c){if(c&&c.isTexture){const u=c.mapping;if(u===vf||u===_f)if(e.has(c)){const d=e.get(c).texture;return t(d,c.mapping)}else{const d=c.image;if(d&&d.height>0){const f=new xM(d.height);return f.fromEquirectangularTexture(r,c),e.set(c,f),c.addEventListener("dispose",s),t(f.texture,c.mapping)}else return null}}return c}function s(c){const u=c.target;u.removeEventListener("dispose",s);const d=e.get(u);d!==void 0&&(e.delete(u),d.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}const ko=4,Xv=[.125,.215,.35,.446,.526,.582],zs=20,Yd=new sE,Yv=new st;let qd=null,jd=0,$d=0,Kd=!1;const Os=(1+Math.sqrt(5))/2,Io=1/Os,qv=[new W(-Os,Io,0),new W(Os,Io,0),new W(-Io,0,Os),new W(Io,0,Os),new W(0,Os,-Io),new W(0,Os,Io),new W(-1,1,-1),new W(1,1,-1),new W(-1,1,1),new W(1,1,1)];class jv{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100){qd=this._renderer.getRenderTarget(),jd=this._renderer.getActiveCubeFace(),$d=this._renderer.getActiveMipmapLevel(),Kd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,n,s,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Zv(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Kv(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(qd,jd,$d),this._renderer.xr.enabled=Kd,e.scissorTest=!1,Qc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Gs||e.mapping===Ws?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),qd=this._renderer.getRenderTarget(),jd=this._renderer.getActiveCubeFace(),$d=this._renderer.getActiveMipmapLevel(),Kd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ir,minFilter:ir,generateMipmaps:!1,type:ea,format:Yi,colorSpace:Ko,depthBuffer:!1},s=$v(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=$v(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Jw(a)),this._blurMaterial=Qw(a,e,t)}return s}_compileMaterial(e){const t=new Pn(this._lodPlanes[0],e);this._renderer.compile(t,Yd)}_sceneToCubeUV(e,t,n,s){const u=new bi(90,1,t,n),d=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,g=p.autoClear,v=p.toneMapping;p.getClearColor(Yv),p.toneMapping=qi,p.autoClear=!1;const y=new Zo({name:"PMREM.Background",side:Kn,depthWrite:!1,depthTest:!1}),M=new Pn(new na,y);let E=!1;const S=e.background;S?S.isColor&&(y.color.copy(S),e.background=null,E=!0):(y.color.copy(Yv),E=!0);for(let x=0;x<6;x++){const L=x%3;L===0?(u.up.set(0,d[x],0),u.lookAt(f[x],0,0)):L===1?(u.up.set(0,0,d[x]),u.lookAt(0,f[x],0)):(u.up.set(0,d[x],0),u.lookAt(0,0,f[x]));const R=this._cubeSize;Qc(s,L*R,x>2?R:0,R,R),p.setRenderTarget(s),E&&p.render(M,u),p.render(e,u)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=v,p.autoClear=g,e.background=S}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===Gs||e.mapping===Ws;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Zv()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Kv());const a=s?this._cubemapMaterial:this._equirectMaterial,c=new Pn(this._lodPlanes[0],a),u=a.uniforms;u.envMap.value=e;const d=this._cubeSize;Qc(t,0,0,3*d,2*d),n.setRenderTarget(t),n.render(c,Yd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const s=this._lodPlanes.length;for(let a=1;a<s;a++){const c=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),u=qv[(s-a-1)%qv.length];this._blur(e,a-1,a,c,u)}t.autoClear=n}_blur(e,t,n,s,a){const c=this._pingPongRenderTarget;this._halfBlur(e,c,t,n,s,"latitudinal",a),this._halfBlur(c,e,n,n,s,"longitudinal",a)}_halfBlur(e,t,n,s,a,c,u){const d=this._renderer,f=this._blurMaterial;c!=="latitudinal"&&c!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,g=new Pn(this._lodPlanes[s],f),v=f.uniforms,y=this._sizeLods[n]-1,M=isFinite(a)?Math.PI/(2*y):2*Math.PI/(2*zs-1),E=a/M,S=isFinite(a)?1+Math.floor(p*E):zs;S>zs&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${zs}`);const x=[];let L=0;for(let O=0;O<zs;++O){const Y=O/E,P=Math.exp(-Y*Y/2);x.push(P),O===0?L+=P:O<S&&(L+=2*P)}for(let O=0;O<x.length;O++)x[O]=x[O]/L;v.envMap.value=e.texture,v.samples.value=S,v.weights.value=x,v.latitudinal.value=c==="latitudinal",u&&(v.poleAxis.value=u);const{_lodMax:R}=this;v.dTheta.value=M,v.mipInt.value=R-n;const w=this._sizeLods[s],z=3*w*(s>R-ko?s-R+ko:0),U=4*(this._cubeSize-w);Qc(t,z,U,3*w,2*w),d.setRenderTarget(t),d.render(g,Yd)}}function Jw(r){const e=[],t=[],n=[];let s=r;const a=r-ko+1+Xv.length;for(let c=0;c<a;c++){const u=Math.pow(2,s);t.push(u);let d=1/u;c>r-ko?d=Xv[c-r+ko-1]:c===0&&(d=0),n.push(d);const f=1/(u-2),p=-f,g=1+f,v=[p,p,g,p,g,g,p,p,g,g,p,g],y=6,M=6,E=3,S=2,x=1,L=new Float32Array(E*M*y),R=new Float32Array(S*M*y),w=new Float32Array(x*M*y);for(let U=0;U<y;U++){const O=U%3*2/3-1,Y=U>2?0:-1,P=[O,Y,0,O+2/3,Y,0,O+2/3,Y+1,0,O,Y,0,O+2/3,Y+1,0,O,Y+1,0];L.set(P,E*M*U),R.set(v,S*M*U);const N=[U,U,U,U,U,U];w.set(N,x*M*U)}const z=new Mi;z.setAttribute("position",new ji(L,E)),z.setAttribute("uv",new ji(R,S)),z.setAttribute("faceIndex",new ji(w,x)),e.push(z),s>ko&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function $v(r,e,t){const n=new Xs(r,e,t);return n.texture.mapping=yu,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Qc(r,e,t,n,s){r.viewport.set(e,t,n,s),r.scissor.set(e,t,n,s)}function Qw(r,e,t){const n=new Float32Array(zs),s=new W(0,1,0);return new us({name:"SphericalGaussianBlur",defines:{n:zs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:mp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:os,depthTest:!1,depthWrite:!1})}function Kv(){return new us({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:mp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:os,depthTest:!1,depthWrite:!1})}function Zv(){return new us({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:mp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:os,depthTest:!1,depthWrite:!1})}function mp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function eA(r){let e=new WeakMap,t=null;function n(u){if(u&&u.isTexture){const d=u.mapping,f=d===vf||d===_f,p=d===Gs||d===Ws;if(f||p){let g=e.get(u);const v=g!==void 0?g.texture.pmremVersion:0;if(u.isRenderTargetTexture&&u.pmremVersion!==v)return t===null&&(t=new jv(r)),g=f?t.fromEquirectangular(u,g):t.fromCubemap(u,g),g.texture.pmremVersion=u.pmremVersion,e.set(u,g),g.texture;if(g!==void 0)return g.texture;{const y=u.image;return f&&y&&y.height>0||p&&y&&s(y)?(t===null&&(t=new jv(r)),g=f?t.fromEquirectangular(u):t.fromCubemap(u),g.texture.pmremVersion=u.pmremVersion,e.set(u,g),u.addEventListener("dispose",a),g.texture):null}}}return u}function s(u){let d=0;const f=6;for(let p=0;p<f;p++)u[p]!==void 0&&d++;return d===f}function a(u){const d=u.target;d.removeEventListener("dispose",a);const f=e.get(d);f!==void 0&&(e.delete(d),f.dispose())}function c(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:c}}function tA(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=r.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const s=t(n);return s===null&&Uo("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function nA(r,e,t,n){const s={},a=new WeakMap;function c(g){const v=g.target;v.index!==null&&e.remove(v.index);for(const M in v.attributes)e.remove(v.attributes[M]);v.removeEventListener("dispose",c),delete s[v.id];const y=a.get(v);y&&(e.remove(y),a.delete(v)),n.releaseStatesOfGeometry(v),v.isInstancedBufferGeometry===!0&&delete v._maxInstanceCount,t.memory.geometries--}function u(g,v){return s[v.id]===!0||(v.addEventListener("dispose",c),s[v.id]=!0,t.memory.geometries++),v}function d(g){const v=g.attributes;for(const y in v)e.update(v[y],r.ARRAY_BUFFER)}function f(g){const v=[],y=g.index,M=g.attributes.position;let E=0;if(y!==null){const L=y.array;E=y.version;for(let R=0,w=L.length;R<w;R+=3){const z=L[R+0],U=L[R+1],O=L[R+2];v.push(z,U,U,O,O,z)}}else if(M!==void 0){const L=M.array;E=M.version;for(let R=0,w=L.length/3-1;R<w;R+=3){const z=R+0,U=R+1,O=R+2;v.push(z,U,U,O,O,z)}}else return;const S=new(Y_(v)?J_:Z_)(v,1);S.version=E;const x=a.get(g);x&&e.remove(x),a.set(g,S)}function p(g){const v=a.get(g);if(v){const y=g.index;y!==null&&v.version<y.version&&f(g)}else f(g);return a.get(g)}return{get:u,update:d,getWireframeAttribute:p}}function iA(r,e,t){let n;function s(v){n=v}let a,c;function u(v){a=v.type,c=v.bytesPerElement}function d(v,y){r.drawElements(n,y,a,v*c),t.update(y,n,1)}function f(v,y,M){M!==0&&(r.drawElementsInstanced(n,y,a,v*c,M),t.update(y,n,M))}function p(v,y,M){if(M===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,y,0,a,v,0,M);let S=0;for(let x=0;x<M;x++)S+=y[x];t.update(S,n,1)}function g(v,y,M,E){if(M===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let x=0;x<v.length;x++)f(v[x]/c,y[x],E[x]);else{S.multiDrawElementsInstancedWEBGL(n,y,0,a,v,0,E,0,M);let x=0;for(let L=0;L<M;L++)x+=y[L]*E[L];t.update(x,n,1)}}this.setMode=s,this.setIndex=u,this.render=d,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=g}function rA(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,c,u){switch(t.calls++,c){case r.TRIANGLES:t.triangles+=u*(a/3);break;case r.LINES:t.lines+=u*(a/2);break;case r.LINE_STRIP:t.lines+=u*(a-1);break;case r.LINE_LOOP:t.lines+=u*a;break;case r.POINTS:t.points+=u*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c);break}}function s(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function sA(r,e,t){const n=new WeakMap,s=new $t;function a(c,u,d){const f=c.morphTargetInfluences,p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=p!==void 0?p.length:0;let v=n.get(u);if(v===void 0||v.count!==g){let N=function(){Y.dispose(),n.delete(u),u.removeEventListener("dispose",N)};var y=N;v!==void 0&&v.texture.dispose();const M=u.morphAttributes.position!==void 0,E=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,x=u.morphAttributes.position||[],L=u.morphAttributes.normal||[],R=u.morphAttributes.color||[];let w=0;M===!0&&(w=1),E===!0&&(w=2),S===!0&&(w=3);let z=u.attributes.position.count*w,U=1;z>e.maxTextureSize&&(U=Math.ceil(z/e.maxTextureSize),z=e.maxTextureSize);const O=new Float32Array(z*U*4*g),Y=new j_(O,z,U,g);Y.type=Ar,Y.needsUpdate=!0;const P=w*4;for(let I=0;I<g;I++){const se=x[I],K=L[I],fe=R[I],ve=z*U*4*I;for(let ue=0;ue<se.count;ue++){const de=ue*P;M===!0&&(s.fromBufferAttribute(se,ue),O[ve+de+0]=s.x,O[ve+de+1]=s.y,O[ve+de+2]=s.z,O[ve+de+3]=0),E===!0&&(s.fromBufferAttribute(K,ue),O[ve+de+4]=s.x,O[ve+de+5]=s.y,O[ve+de+6]=s.z,O[ve+de+7]=0),S===!0&&(s.fromBufferAttribute(fe,ue),O[ve+de+8]=s.x,O[ve+de+9]=s.y,O[ve+de+10]=s.z,O[ve+de+11]=fe.itemSize===4?s.w:1)}}v={count:g,texture:Y,size:new Q(z,U)},n.set(u,v),u.addEventListener("dispose",N)}if(c.isInstancedMesh===!0&&c.morphTexture!==null)d.getUniforms().setValue(r,"morphTexture",c.morphTexture,t);else{let M=0;for(let S=0;S<f.length;S++)M+=f[S];const E=u.morphTargetsRelative?1:1-M;d.getUniforms().setValue(r,"morphTargetBaseInfluence",E),d.getUniforms().setValue(r,"morphTargetInfluences",f)}d.getUniforms().setValue(r,"morphTargetsTexture",v.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",v.size)}return{update:a}}function oA(r,e,t,n){let s=new WeakMap;function a(d){const f=n.render.frame,p=d.geometry,g=e.get(d,p);if(s.get(g)!==f&&(e.update(g),s.set(g,f)),d.isInstancedMesh&&(d.hasEventListener("dispose",u)===!1&&d.addEventListener("dispose",u),s.get(d)!==f&&(t.update(d.instanceMatrix,r.ARRAY_BUFFER),d.instanceColor!==null&&t.update(d.instanceColor,r.ARRAY_BUFFER),s.set(d,f))),d.isSkinnedMesh){const v=d.skeleton;s.get(v)!==f&&(v.update(),s.set(v,f))}return g}function c(){s=new WeakMap}function u(d){const f=d.target;f.removeEventListener("dispose",u),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:a,dispose:c}}const f0=new Zn,Jv=new hl(1,1),p0=new j_,m0=new iM,g0=new t0,Qv=[],e_=[],t_=new Float32Array(16),n_=new Float32Array(9),i_=new Float32Array(4);function ra(r,e,t){const n=r[0];if(n<=0||n>0)return r;const s=e*t;let a=Qv[s];if(a===void 0&&(a=new Float32Array(s),Qv[s]=a),e!==0){n.toArray(a,0);for(let c=1,u=0;c!==e;++c)u+=t,r[c].toArray(a,u)}return a}function yn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Sn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Au(r,e){let t=e_[e];t===void 0&&(t=new Int32Array(e),e_[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function aA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function lA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(yn(t,e))return;r.uniform2fv(this.addr,e),Sn(t,e)}}function cA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(yn(t,e))return;r.uniform3fv(this.addr,e),Sn(t,e)}}function uA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(yn(t,e))return;r.uniform4fv(this.addr,e),Sn(t,e)}}function hA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(yn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Sn(t,e)}else{if(yn(t,n))return;i_.set(n),r.uniformMatrix2fv(this.addr,!1,i_),Sn(t,n)}}function dA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(yn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Sn(t,e)}else{if(yn(t,n))return;n_.set(n),r.uniformMatrix3fv(this.addr,!1,n_),Sn(t,n)}}function fA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(yn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Sn(t,e)}else{if(yn(t,n))return;t_.set(n),r.uniformMatrix4fv(this.addr,!1,t_),Sn(t,n)}}function pA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function mA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(yn(t,e))return;r.uniform2iv(this.addr,e),Sn(t,e)}}function gA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(yn(t,e))return;r.uniform3iv(this.addr,e),Sn(t,e)}}function vA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(yn(t,e))return;r.uniform4iv(this.addr,e),Sn(t,e)}}function _A(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function xA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(yn(t,e))return;r.uniform2uiv(this.addr,e),Sn(t,e)}}function yA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(yn(t,e))return;r.uniform3uiv(this.addr,e),Sn(t,e)}}function SA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(yn(t,e))return;r.uniform4uiv(this.addr,e),Sn(t,e)}}function MA(r,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(r.uniform1i(this.addr,s),n[0]=s);let a;this.type===r.SAMPLER_2D_SHADOW?(Jv.compareFunction=W_,a=Jv):a=f0,t.setTexture2D(e||a,s)}function EA(r,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(r.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||m0,s)}function TA(r,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(r.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||g0,s)}function wA(r,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(r.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||p0,s)}function AA(r){switch(r){case 5126:return aA;case 35664:return lA;case 35665:return cA;case 35666:return uA;case 35674:return hA;case 35675:return dA;case 35676:return fA;case 5124:case 35670:return pA;case 35667:case 35671:return mA;case 35668:case 35672:return gA;case 35669:case 35673:return vA;case 5125:return _A;case 36294:return xA;case 36295:return yA;case 36296:return SA;case 35678:case 36198:case 36298:case 36306:case 35682:return MA;case 35679:case 36299:case 36307:return EA;case 35680:case 36300:case 36308:case 36293:return TA;case 36289:case 36303:case 36311:case 36292:return wA}}function RA(r,e){r.uniform1fv(this.addr,e)}function CA(r,e){const t=ra(e,this.size,2);r.uniform2fv(this.addr,t)}function NA(r,e){const t=ra(e,this.size,3);r.uniform3fv(this.addr,t)}function LA(r,e){const t=ra(e,this.size,4);r.uniform4fv(this.addr,t)}function PA(r,e){const t=ra(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function bA(r,e){const t=ra(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function IA(r,e){const t=ra(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function DA(r,e){r.uniform1iv(this.addr,e)}function UA(r,e){r.uniform2iv(this.addr,e)}function OA(r,e){r.uniform3iv(this.addr,e)}function FA(r,e){r.uniform4iv(this.addr,e)}function zA(r,e){r.uniform1uiv(this.addr,e)}function kA(r,e){r.uniform2uiv(this.addr,e)}function BA(r,e){r.uniform3uiv(this.addr,e)}function VA(r,e){r.uniform4uiv(this.addr,e)}function HA(r,e,t){const n=this.cache,s=e.length,a=Au(t,s);yn(n,a)||(r.uniform1iv(this.addr,a),Sn(n,a));for(let c=0;c!==s;++c)t.setTexture2D(e[c]||f0,a[c])}function GA(r,e,t){const n=this.cache,s=e.length,a=Au(t,s);yn(n,a)||(r.uniform1iv(this.addr,a),Sn(n,a));for(let c=0;c!==s;++c)t.setTexture3D(e[c]||m0,a[c])}function WA(r,e,t){const n=this.cache,s=e.length,a=Au(t,s);yn(n,a)||(r.uniform1iv(this.addr,a),Sn(n,a));for(let c=0;c!==s;++c)t.setTextureCube(e[c]||g0,a[c])}function XA(r,e,t){const n=this.cache,s=e.length,a=Au(t,s);yn(n,a)||(r.uniform1iv(this.addr,a),Sn(n,a));for(let c=0;c!==s;++c)t.setTexture2DArray(e[c]||p0,a[c])}function YA(r){switch(r){case 5126:return RA;case 35664:return CA;case 35665:return NA;case 35666:return LA;case 35674:return PA;case 35675:return bA;case 35676:return IA;case 5124:case 35670:return DA;case 35667:case 35671:return UA;case 35668:case 35672:return OA;case 35669:case 35673:return FA;case 5125:return zA;case 36294:return kA;case 36295:return BA;case 36296:return VA;case 35678:case 36198:case 36298:case 36306:case 35682:return HA;case 35679:case 36299:case 36307:return GA;case 35680:case 36300:case 36308:case 36293:return WA;case 36289:case 36303:case 36311:case 36292:return XA}}class qA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=AA(t.type)}}class jA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=YA(t.type)}}class $A{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const s=this.seq;for(let a=0,c=s.length;a!==c;++a){const u=s[a];u.setValue(e,t[u.id],n)}}}const Zd=/(\w+)(\])?(\[|\.)?/g;function r_(r,e){r.seq.push(e),r.map[e.id]=e}function KA(r,e,t){const n=r.name,s=n.length;for(Zd.lastIndex=0;;){const a=Zd.exec(n),c=Zd.lastIndex;let u=a[1];const d=a[2]==="]",f=a[3];if(d&&(u=u|0),f===void 0||f==="["&&c+2===s){r_(t,f===void 0?new qA(u,r,e):new jA(u,r,e));break}else{let g=t.map[u];g===void 0&&(g=new $A(u),r_(t,g)),t=g}}}class lu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const a=e.getActiveUniform(t,s),c=e.getUniformLocation(t,a.name);KA(a,c,this)}}setValue(e,t,n,s){const a=this.map[t];a!==void 0&&a.setValue(e,n,s)}setOptional(e,t,n){const s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let a=0,c=t.length;a!==c;++a){const u=t[a],d=n[u.id];d.needsUpdate!==!1&&u.setValue(e,d.value,s)}}static seqWithValue(e,t){const n=[];for(let s=0,a=e.length;s!==a;++s){const c=e[s];c.id in t&&n.push(c)}return n}}function s_(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const ZA=37297;let JA=0;function QA(r,e){const t=r.split(`
`),n=[],s=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let c=s;c<a;c++){const u=c+1;n.push(`${u===e?">":" "} ${u}: ${t[c]}`)}return n.join(`
`)}const o_=new ft;function e1(r){gt._getMatrix(o_,gt.workingColorSpace,r);const e=`mat3( ${o_.elements.map(t=>t.toFixed(4))} )`;switch(gt.getTransfer(r)){case hu:return[e,"LinearTransferOETF"];case Ft:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function a_(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),s=r.getShaderInfoLog(e).trim();if(n&&s==="")return"";const a=/ERROR: 0:(\d+)/.exec(s);if(a){const c=parseInt(a[1]);return t.toUpperCase()+`

`+s+`

`+QA(r.getShaderSource(e),c)}else return s}function t1(r,e){const t=e1(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function n1(r,e){let t;switch(e){case gS:t="Linear";break;case vS:t="Reinhard";break;case _S:t="Cineon";break;case xS:t="ACESFilmic";break;case SS:t="AgX";break;case MS:t="Neutral";break;case yS:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const eu=new W;function i1(){gt.getLuminanceCoefficients(eu);const r=eu.x.toFixed(4),e=eu.y.toFixed(4),t=eu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function r1(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Za).join(`
`)}function s1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function o1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const a=r.getActiveAttrib(e,s),c=a.name;let u=1;a.type===r.FLOAT_MAT2&&(u=2),a.type===r.FLOAT_MAT3&&(u=3),a.type===r.FLOAT_MAT4&&(u=4),t[c]={type:a.type,location:r.getAttribLocation(e,c),locationSize:u}}return t}function Za(r){return r!==""}function l_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function c_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const a1=/^[ \t]*#include +<([\w\d./]+)>/gm;function $f(r){return r.replace(a1,c1)}const l1=new Map;function c1(r,e){let t=mt[e];if(t===void 0){const n=l1.get(e);if(n!==void 0)t=mt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return $f(t)}const u1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function u_(r){return r.replace(u1,h1)}function h1(r,e,t,n){let s="";for(let a=parseInt(e);a<parseInt(t);a++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return s}function h_(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function d1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===P_?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===$y?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Tr&&(e="SHADOWMAP_TYPE_VSM"),e}function f1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Gs:case Ws:e="ENVMAP_TYPE_CUBE";break;case yu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function p1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ws:e="ENVMAP_MODE_REFRACTION";break}return e}function m1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case b_:e="ENVMAP_BLENDING_MULTIPLY";break;case pS:e="ENVMAP_BLENDING_MIX";break;case mS:e="ENVMAP_BLENDING_ADD";break}return e}function g1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function v1(r,e,t,n){const s=r.getContext(),a=t.defines;let c=t.vertexShader,u=t.fragmentShader;const d=d1(t),f=f1(t),p=p1(t),g=m1(t),v=g1(t),y=r1(t),M=s1(a),E=s.createProgram();let S,x,L=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M].filter(Za).join(`
`),S.length>0&&(S+=`
`),x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M].filter(Za).join(`
`),x.length>0&&(x+=`
`)):(S=[h_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Za).join(`
`),x=[h_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",t.envMap?"#define "+g:"",v?"#define CUBEUV_TEXEL_WIDTH "+v.texelWidth:"",v?"#define CUBEUV_TEXEL_HEIGHT "+v.texelHeight:"",v?"#define CUBEUV_MAX_MIP "+v.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==qi?"#define TONE_MAPPING":"",t.toneMapping!==qi?mt.tonemapping_pars_fragment:"",t.toneMapping!==qi?n1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",mt.colorspace_pars_fragment,t1("linearToOutputTexel",t.outputColorSpace),i1(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Za).join(`
`)),c=$f(c),c=l_(c,t),c=c_(c,t),u=$f(u),u=l_(u,t),u=c_(u,t),c=u_(c),u=u_(u),t.isRawShaderMaterial!==!0&&(L=`#version 300 es
`,S=[y,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,x=["#define varying in",t.glslVersion===fv?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===fv?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const R=L+S+c,w=L+x+u,z=s_(s,s.VERTEX_SHADER,R),U=s_(s,s.FRAGMENT_SHADER,w);s.attachShader(E,z),s.attachShader(E,U),t.index0AttributeName!==void 0?s.bindAttribLocation(E,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(E,0,"position"),s.linkProgram(E);function O(I){if(r.debug.checkShaderErrors){const se=s.getProgramInfoLog(E).trim(),K=s.getShaderInfoLog(z).trim(),fe=s.getShaderInfoLog(U).trim();let ve=!0,ue=!0;if(s.getProgramParameter(E,s.LINK_STATUS)===!1)if(ve=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(s,E,z,U);else{const de=a_(s,z,"vertex"),V=a_(s,U,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(E,s.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+se+`
`+de+`
`+V)}else se!==""?console.warn("THREE.WebGLProgram: Program Info Log:",se):(K===""||fe==="")&&(ue=!1);ue&&(I.diagnostics={runnable:ve,programLog:se,vertexShader:{log:K,prefix:S},fragmentShader:{log:fe,prefix:x}})}s.deleteShader(z),s.deleteShader(U),Y=new lu(s,E),P=o1(s,E)}let Y;this.getUniforms=function(){return Y===void 0&&O(this),Y};let P;this.getAttributes=function(){return P===void 0&&O(this),P};let N=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return N===!1&&(N=s.getProgramParameter(E,ZA)),N},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(E),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=JA++,this.cacheKey=e,this.usedTimes=1,this.program=E,this.vertexShader=z,this.fragmentShader=U,this}let _1=0;class x1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),a=this._getShaderStage(n),c=this._getShaderCacheForMaterial(e);return c.has(s)===!1&&(c.add(s),s.usedTimes++),c.has(a)===!1&&(c.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new y1(e),t.set(e,n)),n}}class y1{constructor(e){this.id=_1++,this.code=e,this.usedTimes=0}}function S1(r,e,t,n,s,a,c){const u=new $_,d=new x1,f=new Set,p=[],g=s.logarithmicDepthBuffer,v=s.vertexTextures;let y=s.precision;const M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(P){return f.add(P),P===0?"uv":`uv${P}`}function S(P,N,I,se,K){const fe=se.fog,ve=K.geometry,ue=P.isMeshStandardMaterial?se.environment:null,de=(P.isMeshStandardMaterial?t:e).get(P.envMap||ue),V=de&&de.mapping===yu?de.image.height:null,he=M[P.type];P.precision!==null&&(y=s.getMaxPrecision(P.precision),y!==P.precision&&console.warn("THREE.WebGLProgram.getParameters:",P.precision,"not supported, using",y,"instead."));const ae=ve.morphAttributes.position||ve.morphAttributes.normal||ve.morphAttributes.color,F=ae!==void 0?ae.length:0;let re=0;ve.morphAttributes.position!==void 0&&(re=1),ve.morphAttributes.normal!==void 0&&(re=2),ve.morphAttributes.color!==void 0&&(re=3);let ke,ee,pe,Re;if(he){const Ct=tr[he];ke=Ct.vertexShader,ee=Ct.fragmentShader}else ke=P.vertexShader,ee=P.fragmentShader,d.update(P),pe=d.getVertexShaderID(P),Re=d.getFragmentShaderID(P);const Ee=r.getRenderTarget(),Le=r.state.buffers.depth.getReversed(),Be=K.isInstancedMesh===!0,rt=K.isBatchedMesh===!0,Bt=!!P.map,Tt=!!P.matcap,Gt=!!de,B=!!P.aoMap,Bn=!!P.lightMap,Mt=!!P.bumpMap,xt=!!P.normalMap,Je=!!P.displacementMap,zt=!!P.emissiveMap,Ke=!!P.metalnessMap,b=!!P.roughnessMap,A=P.anisotropy>0,J=P.clearcoat>0,_e=P.dispersion>0,ye=P.iridescence>0,me=P.sheen>0,je=P.transmission>0,Pe=A&&!!P.anisotropyMap,Ve=J&&!!P.clearcoatMap,_t=J&&!!P.clearcoatNormalMap,Ae=J&&!!P.clearcoatRoughnessMap,We=ye&&!!P.iridescenceMap,tt=ye&&!!P.iridescenceThicknessMap,ot=me&&!!P.sheenColorMap,Xe=me&&!!P.sheenRoughnessMap,yt=!!P.specularMap,ut=!!P.specularColorMap,Ot=!!P.specularIntensityMap,X=je&&!!P.transmissionMap,be=je&&!!P.thicknessMap,oe=!!P.gradientMap,ge=!!P.alphaMap,Oe=P.alphaTest>0,Ue=!!P.alphaHash,ht=!!P.extensions;let Xt=qi;P.toneMapped&&(Ee===null||Ee.isXRRenderTarget===!0)&&(Xt=r.toneMapping);const fn={shaderID:he,shaderType:P.type,shaderName:P.name,vertexShader:ke,fragmentShader:ee,defines:P.defines,customVertexShaderID:pe,customFragmentShaderID:Re,isRawShaderMaterial:P.isRawShaderMaterial===!0,glslVersion:P.glslVersion,precision:y,batching:rt,batchingColor:rt&&K._colorsTexture!==null,instancing:Be,instancingColor:Be&&K.instanceColor!==null,instancingMorph:Be&&K.morphTexture!==null,supportsVertexTextures:v,outputColorSpace:Ee===null?r.outputColorSpace:Ee.isXRRenderTarget===!0?Ee.texture.colorSpace:Ko,alphaToCoverage:!!P.alphaToCoverage,map:Bt,matcap:Tt,envMap:Gt,envMapMode:Gt&&de.mapping,envMapCubeUVHeight:V,aoMap:B,lightMap:Bn,bumpMap:Mt,normalMap:xt,displacementMap:v&&Je,emissiveMap:zt,normalMapObjectSpace:xt&&P.normalMapType===G_,normalMapTangentSpace:xt&&P.normalMapType===uu,metalnessMap:Ke,roughnessMap:b,anisotropy:A,anisotropyMap:Pe,clearcoat:J,clearcoatMap:Ve,clearcoatNormalMap:_t,clearcoatRoughnessMap:Ae,dispersion:_e,iridescence:ye,iridescenceMap:We,iridescenceThicknessMap:tt,sheen:me,sheenColorMap:ot,sheenRoughnessMap:Xe,specularMap:yt,specularColorMap:ut,specularIntensityMap:Ot,transmission:je,transmissionMap:X,thicknessMap:be,gradientMap:oe,opaque:P.transparent===!1&&P.blending===Ho&&P.alphaToCoverage===!1,alphaMap:ge,alphaTest:Oe,alphaHash:Ue,combine:P.combine,mapUv:Bt&&E(P.map.channel),aoMapUv:B&&E(P.aoMap.channel),lightMapUv:Bn&&E(P.lightMap.channel),bumpMapUv:Mt&&E(P.bumpMap.channel),normalMapUv:xt&&E(P.normalMap.channel),displacementMapUv:Je&&E(P.displacementMap.channel),emissiveMapUv:zt&&E(P.emissiveMap.channel),metalnessMapUv:Ke&&E(P.metalnessMap.channel),roughnessMapUv:b&&E(P.roughnessMap.channel),anisotropyMapUv:Pe&&E(P.anisotropyMap.channel),clearcoatMapUv:Ve&&E(P.clearcoatMap.channel),clearcoatNormalMapUv:_t&&E(P.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ae&&E(P.clearcoatRoughnessMap.channel),iridescenceMapUv:We&&E(P.iridescenceMap.channel),iridescenceThicknessMapUv:tt&&E(P.iridescenceThicknessMap.channel),sheenColorMapUv:ot&&E(P.sheenColorMap.channel),sheenRoughnessMapUv:Xe&&E(P.sheenRoughnessMap.channel),specularMapUv:yt&&E(P.specularMap.channel),specularColorMapUv:ut&&E(P.specularColorMap.channel),specularIntensityMapUv:Ot&&E(P.specularIntensityMap.channel),transmissionMapUv:X&&E(P.transmissionMap.channel),thicknessMapUv:be&&E(P.thicknessMap.channel),alphaMapUv:ge&&E(P.alphaMap.channel),vertexTangents:!!ve.attributes.tangent&&(xt||A),vertexColors:P.vertexColors,vertexAlphas:P.vertexColors===!0&&!!ve.attributes.color&&ve.attributes.color.itemSize===4,pointsUvs:K.isPoints===!0&&!!ve.attributes.uv&&(Bt||ge),fog:!!fe,useFog:P.fog===!0,fogExp2:!!fe&&fe.isFogExp2,flatShading:P.flatShading===!0,sizeAttenuation:P.sizeAttenuation===!0,logarithmicDepthBuffer:g,reverseDepthBuffer:Le,skinning:K.isSkinnedMesh===!0,morphTargets:ve.morphAttributes.position!==void 0,morphNormals:ve.morphAttributes.normal!==void 0,morphColors:ve.morphAttributes.color!==void 0,morphTargetsCount:F,morphTextureStride:re,numDirLights:N.directional.length,numPointLights:N.point.length,numSpotLights:N.spot.length,numSpotLightMaps:N.spotLightMap.length,numRectAreaLights:N.rectArea.length,numHemiLights:N.hemi.length,numDirLightShadows:N.directionalShadowMap.length,numPointLightShadows:N.pointShadowMap.length,numSpotLightShadows:N.spotShadowMap.length,numSpotLightShadowsWithMaps:N.numSpotLightShadowsWithMaps,numLightProbes:N.numLightProbes,numClippingPlanes:c.numPlanes,numClipIntersection:c.numIntersection,dithering:P.dithering,shadowMapEnabled:r.shadowMap.enabled&&I.length>0,shadowMapType:r.shadowMap.type,toneMapping:Xt,decodeVideoTexture:Bt&&P.map.isVideoTexture===!0&&gt.getTransfer(P.map.colorSpace)===Ft,decodeVideoTextureEmissive:zt&&P.emissiveMap.isVideoTexture===!0&&gt.getTransfer(P.emissiveMap.colorSpace)===Ft,premultipliedAlpha:P.premultipliedAlpha,doubleSided:P.side===$n,flipSided:P.side===Kn,useDepthPacking:P.depthPacking>=0,depthPacking:P.depthPacking||0,index0AttributeName:P.index0AttributeName,extensionClipCullDistance:ht&&P.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ht&&P.extensions.multiDraw===!0||rt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:P.customProgramCacheKey()};return fn.vertexUv1s=f.has(1),fn.vertexUv2s=f.has(2),fn.vertexUv3s=f.has(3),f.clear(),fn}function x(P){const N=[];if(P.shaderID?N.push(P.shaderID):(N.push(P.customVertexShaderID),N.push(P.customFragmentShaderID)),P.defines!==void 0)for(const I in P.defines)N.push(I),N.push(P.defines[I]);return P.isRawShaderMaterial===!1&&(L(N,P),R(N,P),N.push(r.outputColorSpace)),N.push(P.customProgramCacheKey),N.join()}function L(P,N){P.push(N.precision),P.push(N.outputColorSpace),P.push(N.envMapMode),P.push(N.envMapCubeUVHeight),P.push(N.mapUv),P.push(N.alphaMapUv),P.push(N.lightMapUv),P.push(N.aoMapUv),P.push(N.bumpMapUv),P.push(N.normalMapUv),P.push(N.displacementMapUv),P.push(N.emissiveMapUv),P.push(N.metalnessMapUv),P.push(N.roughnessMapUv),P.push(N.anisotropyMapUv),P.push(N.clearcoatMapUv),P.push(N.clearcoatNormalMapUv),P.push(N.clearcoatRoughnessMapUv),P.push(N.iridescenceMapUv),P.push(N.iridescenceThicknessMapUv),P.push(N.sheenColorMapUv),P.push(N.sheenRoughnessMapUv),P.push(N.specularMapUv),P.push(N.specularColorMapUv),P.push(N.specularIntensityMapUv),P.push(N.transmissionMapUv),P.push(N.thicknessMapUv),P.push(N.combine),P.push(N.fogExp2),P.push(N.sizeAttenuation),P.push(N.morphTargetsCount),P.push(N.morphAttributeCount),P.push(N.numDirLights),P.push(N.numPointLights),P.push(N.numSpotLights),P.push(N.numSpotLightMaps),P.push(N.numHemiLights),P.push(N.numRectAreaLights),P.push(N.numDirLightShadows),P.push(N.numPointLightShadows),P.push(N.numSpotLightShadows),P.push(N.numSpotLightShadowsWithMaps),P.push(N.numLightProbes),P.push(N.shadowMapType),P.push(N.toneMapping),P.push(N.numClippingPlanes),P.push(N.numClipIntersection),P.push(N.depthPacking)}function R(P,N){u.disableAll(),N.supportsVertexTextures&&u.enable(0),N.instancing&&u.enable(1),N.instancingColor&&u.enable(2),N.instancingMorph&&u.enable(3),N.matcap&&u.enable(4),N.envMap&&u.enable(5),N.normalMapObjectSpace&&u.enable(6),N.normalMapTangentSpace&&u.enable(7),N.clearcoat&&u.enable(8),N.iridescence&&u.enable(9),N.alphaTest&&u.enable(10),N.vertexColors&&u.enable(11),N.vertexAlphas&&u.enable(12),N.vertexUv1s&&u.enable(13),N.vertexUv2s&&u.enable(14),N.vertexUv3s&&u.enable(15),N.vertexTangents&&u.enable(16),N.anisotropy&&u.enable(17),N.alphaHash&&u.enable(18),N.batching&&u.enable(19),N.dispersion&&u.enable(20),N.batchingColor&&u.enable(21),P.push(u.mask),u.disableAll(),N.fog&&u.enable(0),N.useFog&&u.enable(1),N.flatShading&&u.enable(2),N.logarithmicDepthBuffer&&u.enable(3),N.reverseDepthBuffer&&u.enable(4),N.skinning&&u.enable(5),N.morphTargets&&u.enable(6),N.morphNormals&&u.enable(7),N.morphColors&&u.enable(8),N.premultipliedAlpha&&u.enable(9),N.shadowMapEnabled&&u.enable(10),N.doubleSided&&u.enable(11),N.flipSided&&u.enable(12),N.useDepthPacking&&u.enable(13),N.dithering&&u.enable(14),N.transmission&&u.enable(15),N.sheen&&u.enable(16),N.opaque&&u.enable(17),N.pointsUvs&&u.enable(18),N.decodeVideoTexture&&u.enable(19),N.decodeVideoTextureEmissive&&u.enable(20),N.alphaToCoverage&&u.enable(21),P.push(u.mask)}function w(P){const N=M[P.type];let I;if(N){const se=tr[N];I=mM.clone(se.uniforms)}else I=P.uniforms;return I}function z(P,N){let I;for(let se=0,K=p.length;se<K;se++){const fe=p[se];if(fe.cacheKey===N){I=fe,++I.usedTimes;break}}return I===void 0&&(I=new v1(r,N,P,a),p.push(I)),I}function U(P){if(--P.usedTimes===0){const N=p.indexOf(P);p[N]=p[p.length-1],p.pop(),P.destroy()}}function O(P){d.remove(P)}function Y(){d.dispose()}return{getParameters:S,getProgramCacheKey:x,getUniforms:w,acquireProgram:z,releaseProgram:U,releaseShaderCache:O,programs:p,dispose:Y}}function M1(){let r=new WeakMap;function e(c){return r.has(c)}function t(c){let u=r.get(c);return u===void 0&&(u={},r.set(c,u)),u}function n(c){r.delete(c)}function s(c,u,d){r.get(c)[u]=d}function a(){r=new WeakMap}return{has:e,get:t,remove:n,update:s,dispose:a}}function E1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function d_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function f_(){const r=[];let e=0;const t=[],n=[],s=[];function a(){e=0,t.length=0,n.length=0,s.length=0}function c(g,v,y,M,E,S){let x=r[e];return x===void 0?(x={id:g.id,object:g,geometry:v,material:y,groupOrder:M,renderOrder:g.renderOrder,z:E,group:S},r[e]=x):(x.id=g.id,x.object=g,x.geometry=v,x.material=y,x.groupOrder=M,x.renderOrder=g.renderOrder,x.z=E,x.group=S),e++,x}function u(g,v,y,M,E,S){const x=c(g,v,y,M,E,S);y.transmission>0?n.push(x):y.transparent===!0?s.push(x):t.push(x)}function d(g,v,y,M,E,S){const x=c(g,v,y,M,E,S);y.transmission>0?n.unshift(x):y.transparent===!0?s.unshift(x):t.unshift(x)}function f(g,v){t.length>1&&t.sort(g||E1),n.length>1&&n.sort(v||d_),s.length>1&&s.sort(v||d_)}function p(){for(let g=e,v=r.length;g<v;g++){const y=r[g];if(y.id===null)break;y.id=null,y.object=null,y.geometry=null,y.material=null,y.group=null}}return{opaque:t,transmissive:n,transparent:s,init:a,push:u,unshift:d,finish:p,sort:f}}function T1(){let r=new WeakMap;function e(n,s){const a=r.get(n);let c;return a===void 0?(c=new f_,r.set(n,[c])):s>=a.length?(c=new f_,a.push(c)):c=a[s],c}function t(){r=new WeakMap}return{get:e,dispose:t}}function w1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new W,color:new st};break;case"SpotLight":t={position:new W,direction:new W,color:new st,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new W,color:new st,distance:0,decay:0};break;case"HemisphereLight":t={direction:new W,skyColor:new st,groundColor:new st};break;case"RectAreaLight":t={color:new st,position:new W,halfWidth:new W,halfHeight:new W};break}return r[e.id]=t,t}}}function A1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let R1=0;function C1(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function N1(r){const e=new w1,t=A1(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new W);const s=new W,a=new Kt,c=new Kt;function u(f){let p=0,g=0,v=0;for(let P=0;P<9;P++)n.probe[P].set(0,0,0);let y=0,M=0,E=0,S=0,x=0,L=0,R=0,w=0,z=0,U=0,O=0;f.sort(C1);for(let P=0,N=f.length;P<N;P++){const I=f[P],se=I.color,K=I.intensity,fe=I.distance,ve=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)p+=se.r*K,g+=se.g*K,v+=se.b*K;else if(I.isLightProbe){for(let ue=0;ue<9;ue++)n.probe[ue].addScaledVector(I.sh.coefficients[ue],K);O++}else if(I.isDirectionalLight){const ue=e.get(I);if(ue.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const de=I.shadow,V=t.get(I);V.shadowIntensity=de.intensity,V.shadowBias=de.bias,V.shadowNormalBias=de.normalBias,V.shadowRadius=de.radius,V.shadowMapSize=de.mapSize,n.directionalShadow[y]=V,n.directionalShadowMap[y]=ve,n.directionalShadowMatrix[y]=I.shadow.matrix,L++}n.directional[y]=ue,y++}else if(I.isSpotLight){const ue=e.get(I);ue.position.setFromMatrixPosition(I.matrixWorld),ue.color.copy(se).multiplyScalar(K),ue.distance=fe,ue.coneCos=Math.cos(I.angle),ue.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),ue.decay=I.decay,n.spot[E]=ue;const de=I.shadow;if(I.map&&(n.spotLightMap[z]=I.map,z++,de.updateMatrices(I),I.castShadow&&U++),n.spotLightMatrix[E]=de.matrix,I.castShadow){const V=t.get(I);V.shadowIntensity=de.intensity,V.shadowBias=de.bias,V.shadowNormalBias=de.normalBias,V.shadowRadius=de.radius,V.shadowMapSize=de.mapSize,n.spotShadow[E]=V,n.spotShadowMap[E]=ve,w++}E++}else if(I.isRectAreaLight){const ue=e.get(I);ue.color.copy(se).multiplyScalar(K),ue.halfWidth.set(I.width*.5,0,0),ue.halfHeight.set(0,I.height*.5,0),n.rectArea[S]=ue,S++}else if(I.isPointLight){const ue=e.get(I);if(ue.color.copy(I.color).multiplyScalar(I.intensity),ue.distance=I.distance,ue.decay=I.decay,I.castShadow){const de=I.shadow,V=t.get(I);V.shadowIntensity=de.intensity,V.shadowBias=de.bias,V.shadowNormalBias=de.normalBias,V.shadowRadius=de.radius,V.shadowMapSize=de.mapSize,V.shadowCameraNear=de.camera.near,V.shadowCameraFar=de.camera.far,n.pointShadow[M]=V,n.pointShadowMap[M]=ve,n.pointShadowMatrix[M]=I.shadow.matrix,R++}n.point[M]=ue,M++}else if(I.isHemisphereLight){const ue=e.get(I);ue.skyColor.copy(I.color).multiplyScalar(K),ue.groundColor.copy(I.groundColor).multiplyScalar(K),n.hemi[x]=ue,x++}}S>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=De.LTC_FLOAT_1,n.rectAreaLTC2=De.LTC_FLOAT_2):(n.rectAreaLTC1=De.LTC_HALF_1,n.rectAreaLTC2=De.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=g,n.ambient[2]=v;const Y=n.hash;(Y.directionalLength!==y||Y.pointLength!==M||Y.spotLength!==E||Y.rectAreaLength!==S||Y.hemiLength!==x||Y.numDirectionalShadows!==L||Y.numPointShadows!==R||Y.numSpotShadows!==w||Y.numSpotMaps!==z||Y.numLightProbes!==O)&&(n.directional.length=y,n.spot.length=E,n.rectArea.length=S,n.point.length=M,n.hemi.length=x,n.directionalShadow.length=L,n.directionalShadowMap.length=L,n.pointShadow.length=R,n.pointShadowMap.length=R,n.spotShadow.length=w,n.spotShadowMap.length=w,n.directionalShadowMatrix.length=L,n.pointShadowMatrix.length=R,n.spotLightMatrix.length=w+z-U,n.spotLightMap.length=z,n.numSpotLightShadowsWithMaps=U,n.numLightProbes=O,Y.directionalLength=y,Y.pointLength=M,Y.spotLength=E,Y.rectAreaLength=S,Y.hemiLength=x,Y.numDirectionalShadows=L,Y.numPointShadows=R,Y.numSpotShadows=w,Y.numSpotMaps=z,Y.numLightProbes=O,n.version=R1++)}function d(f,p){let g=0,v=0,y=0,M=0,E=0;const S=p.matrixWorldInverse;for(let x=0,L=f.length;x<L;x++){const R=f[x];if(R.isDirectionalLight){const w=n.directional[g];w.direction.setFromMatrixPosition(R.matrixWorld),s.setFromMatrixPosition(R.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(S),g++}else if(R.isSpotLight){const w=n.spot[y];w.position.setFromMatrixPosition(R.matrixWorld),w.position.applyMatrix4(S),w.direction.setFromMatrixPosition(R.matrixWorld),s.setFromMatrixPosition(R.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(S),y++}else if(R.isRectAreaLight){const w=n.rectArea[M];w.position.setFromMatrixPosition(R.matrixWorld),w.position.applyMatrix4(S),c.identity(),a.copy(R.matrixWorld),a.premultiply(S),c.extractRotation(a),w.halfWidth.set(R.width*.5,0,0),w.halfHeight.set(0,R.height*.5,0),w.halfWidth.applyMatrix4(c),w.halfHeight.applyMatrix4(c),M++}else if(R.isPointLight){const w=n.point[v];w.position.setFromMatrixPosition(R.matrixWorld),w.position.applyMatrix4(S),v++}else if(R.isHemisphereLight){const w=n.hemi[E];w.direction.setFromMatrixPosition(R.matrixWorld),w.direction.transformDirection(S),E++}}}return{setup:u,setupView:d,state:n}}function p_(r){const e=new N1(r),t=[],n=[];function s(p){f.camera=p,t.length=0,n.length=0}function a(p){t.push(p)}function c(p){n.push(p)}function u(){e.setup(t)}function d(p){e.setupView(t,p)}const f={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:f,setupLights:u,setupLightsView:d,pushLight:a,pushShadow:c}}function L1(r){let e=new WeakMap;function t(s,a=0){const c=e.get(s);let u;return c===void 0?(u=new p_(r),e.set(s,[u])):a>=c.length?(u=new p_(r),c.push(u)):u=c[a],u}function n(){e=new WeakMap}return{get:t,dispose:n}}const P1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,b1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function I1(r,e,t){let n=new n0;const s=new Q,a=new Q,c=new $t,u=new nE({depthPacking:wS}),d=new iE,f={},p=t.maxTextureSize,g={[ls]:Kn,[Kn]:ls,[$n]:$n},v=new us({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Q},radius:{value:4}},vertexShader:P1,fragmentShader:b1}),y=v.clone();y.defines.HORIZONTAL_PASS=1;const M=new Mi;M.setAttribute("position",new ji(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new Pn(M,v),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=P_;let x=this.type;this.render=function(U,O,Y){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||U.length===0)return;const P=r.getRenderTarget(),N=r.getActiveCubeFace(),I=r.getActiveMipmapLevel(),se=r.state;se.setBlending(os),se.buffers.color.setClear(1,1,1,1),se.buffers.depth.setTest(!0),se.setScissorTest(!1);const K=x!==Tr&&this.type===Tr,fe=x===Tr&&this.type!==Tr;for(let ve=0,ue=U.length;ve<ue;ve++){const de=U[ve],V=de.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",de,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;s.copy(V.mapSize);const he=V.getFrameExtents();if(s.multiply(he),a.copy(V.mapSize),(s.x>p||s.y>p)&&(s.x>p&&(a.x=Math.floor(p/he.x),s.x=a.x*he.x,V.mapSize.x=a.x),s.y>p&&(a.y=Math.floor(p/he.y),s.y=a.y*he.y,V.mapSize.y=a.y)),V.map===null||K===!0||fe===!0){const F=this.type!==Tr?{minFilter:Si,magFilter:Si}:{};V.map!==null&&V.map.dispose(),V.map=new Xs(s.x,s.y,F),V.map.texture.name=de.name+".shadowMap",V.camera.updateProjectionMatrix()}r.setRenderTarget(V.map),r.clear();const ae=V.getViewportCount();for(let F=0;F<ae;F++){const re=V.getViewport(F);c.set(a.x*re.x,a.y*re.y,a.x*re.z,a.y*re.w),se.viewport(c),V.updateMatrices(de,F),n=V.getFrustum(),w(O,Y,V.camera,de,this.type)}V.isPointLightShadow!==!0&&this.type===Tr&&L(V,Y),V.needsUpdate=!1}x=this.type,S.needsUpdate=!1,r.setRenderTarget(P,N,I)};function L(U,O){const Y=e.update(E);v.defines.VSM_SAMPLES!==U.blurSamples&&(v.defines.VSM_SAMPLES=U.blurSamples,y.defines.VSM_SAMPLES=U.blurSamples,v.needsUpdate=!0,y.needsUpdate=!0),U.mapPass===null&&(U.mapPass=new Xs(s.x,s.y)),v.uniforms.shadow_pass.value=U.map.texture,v.uniforms.resolution.value=U.mapSize,v.uniforms.radius.value=U.radius,r.setRenderTarget(U.mapPass),r.clear(),r.renderBufferDirect(O,null,Y,v,E,null),y.uniforms.shadow_pass.value=U.mapPass.texture,y.uniforms.resolution.value=U.mapSize,y.uniforms.radius.value=U.radius,r.setRenderTarget(U.map),r.clear(),r.renderBufferDirect(O,null,Y,y,E,null)}function R(U,O,Y,P){let N=null;const I=Y.isPointLight===!0?U.customDistanceMaterial:U.customDepthMaterial;if(I!==void 0)N=I;else if(N=Y.isPointLight===!0?d:u,r.localClippingEnabled&&O.clipShadows===!0&&Array.isArray(O.clippingPlanes)&&O.clippingPlanes.length!==0||O.displacementMap&&O.displacementScale!==0||O.alphaMap&&O.alphaTest>0||O.map&&O.alphaTest>0){const se=N.uuid,K=O.uuid;let fe=f[se];fe===void 0&&(fe={},f[se]=fe);let ve=fe[K];ve===void 0&&(ve=N.clone(),fe[K]=ve,O.addEventListener("dispose",z)),N=ve}if(N.visible=O.visible,N.wireframe=O.wireframe,P===Tr?N.side=O.shadowSide!==null?O.shadowSide:O.side:N.side=O.shadowSide!==null?O.shadowSide:g[O.side],N.alphaMap=O.alphaMap,N.alphaTest=O.alphaTest,N.map=O.map,N.clipShadows=O.clipShadows,N.clippingPlanes=O.clippingPlanes,N.clipIntersection=O.clipIntersection,N.displacementMap=O.displacementMap,N.displacementScale=O.displacementScale,N.displacementBias=O.displacementBias,N.wireframeLinewidth=O.wireframeLinewidth,N.linewidth=O.linewidth,Y.isPointLight===!0&&N.isMeshDistanceMaterial===!0){const se=r.properties.get(N);se.light=Y}return N}function w(U,O,Y,P,N){if(U.visible===!1)return;if(U.layers.test(O.layers)&&(U.isMesh||U.isLine||U.isPoints)&&(U.castShadow||U.receiveShadow&&N===Tr)&&(!U.frustumCulled||n.intersectsObject(U))){U.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,U.matrixWorld);const K=e.update(U),fe=U.material;if(Array.isArray(fe)){const ve=K.groups;for(let ue=0,de=ve.length;ue<de;ue++){const V=ve[ue],he=fe[V.materialIndex];if(he&&he.visible){const ae=R(U,he,P,N);U.onBeforeShadow(r,U,O,Y,K,ae,V),r.renderBufferDirect(Y,null,K,ae,U,V),U.onAfterShadow(r,U,O,Y,K,ae,V)}}}else if(fe.visible){const ve=R(U,fe,P,N);U.onBeforeShadow(r,U,O,Y,K,ve,null),r.renderBufferDirect(Y,null,K,ve,U,null),U.onAfterShadow(r,U,O,Y,K,ve,null)}}const se=U.children;for(let K=0,fe=se.length;K<fe;K++)w(se[K],O,Y,P,N)}function z(U){U.target.removeEventListener("dispose",z);for(const Y in f){const P=f[Y],N=U.target.uuid;N in P&&(P[N].dispose(),delete P[N])}}}const D1={[uf]:hf,[df]:mf,[ff]:gf,[qo]:pf,[hf]:uf,[mf]:df,[gf]:ff,[pf]:qo};function U1(r,e){function t(){let X=!1;const be=new $t;let oe=null;const ge=new $t(0,0,0,0);return{setMask:function(Oe){oe!==Oe&&!X&&(r.colorMask(Oe,Oe,Oe,Oe),oe=Oe)},setLocked:function(Oe){X=Oe},setClear:function(Oe,Ue,ht,Xt,fn){fn===!0&&(Oe*=Xt,Ue*=Xt,ht*=Xt),be.set(Oe,Ue,ht,Xt),ge.equals(be)===!1&&(r.clearColor(Oe,Ue,ht,Xt),ge.copy(be))},reset:function(){X=!1,oe=null,ge.set(-1,0,0,0)}}}function n(){let X=!1,be=!1,oe=null,ge=null,Oe=null;return{setReversed:function(Ue){if(be!==Ue){const ht=e.get("EXT_clip_control");be?ht.clipControlEXT(ht.LOWER_LEFT_EXT,ht.ZERO_TO_ONE_EXT):ht.clipControlEXT(ht.LOWER_LEFT_EXT,ht.NEGATIVE_ONE_TO_ONE_EXT);const Xt=Oe;Oe=null,this.setClear(Xt)}be=Ue},getReversed:function(){return be},setTest:function(Ue){Ue?Ee(r.DEPTH_TEST):Le(r.DEPTH_TEST)},setMask:function(Ue){oe!==Ue&&!X&&(r.depthMask(Ue),oe=Ue)},setFunc:function(Ue){if(be&&(Ue=D1[Ue]),ge!==Ue){switch(Ue){case uf:r.depthFunc(r.NEVER);break;case hf:r.depthFunc(r.ALWAYS);break;case df:r.depthFunc(r.LESS);break;case qo:r.depthFunc(r.LEQUAL);break;case ff:r.depthFunc(r.EQUAL);break;case pf:r.depthFunc(r.GEQUAL);break;case mf:r.depthFunc(r.GREATER);break;case gf:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ge=Ue}},setLocked:function(Ue){X=Ue},setClear:function(Ue){Oe!==Ue&&(be&&(Ue=1-Ue),r.clearDepth(Ue),Oe=Ue)},reset:function(){X=!1,oe=null,ge=null,Oe=null,be=!1}}}function s(){let X=!1,be=null,oe=null,ge=null,Oe=null,Ue=null,ht=null,Xt=null,fn=null;return{setTest:function(Ct){X||(Ct?Ee(r.STENCIL_TEST):Le(r.STENCIL_TEST))},setMask:function(Ct){be!==Ct&&!X&&(r.stencilMask(Ct),be=Ct)},setFunc:function(Ct,Qn,Vn){(oe!==Ct||ge!==Qn||Oe!==Vn)&&(r.stencilFunc(Ct,Qn,Vn),oe=Ct,ge=Qn,Oe=Vn)},setOp:function(Ct,Qn,Vn){(Ue!==Ct||ht!==Qn||Xt!==Vn)&&(r.stencilOp(Ct,Qn,Vn),Ue=Ct,ht=Qn,Xt=Vn)},setLocked:function(Ct){X=Ct},setClear:function(Ct){fn!==Ct&&(r.clearStencil(Ct),fn=Ct)},reset:function(){X=!1,be=null,oe=null,ge=null,Oe=null,Ue=null,ht=null,Xt=null,fn=null}}}const a=new t,c=new n,u=new s,d=new WeakMap,f=new WeakMap;let p={},g={},v=new WeakMap,y=[],M=null,E=!1,S=null,x=null,L=null,R=null,w=null,z=null,U=null,O=new st(0,0,0),Y=0,P=!1,N=null,I=null,se=null,K=null,fe=null;const ve=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ue=!1,de=0;const V=r.getParameter(r.VERSION);V.indexOf("WebGL")!==-1?(de=parseFloat(/^WebGL (\d)/.exec(V)[1]),ue=de>=1):V.indexOf("OpenGL ES")!==-1&&(de=parseFloat(/^OpenGL ES (\d)/.exec(V)[1]),ue=de>=2);let he=null,ae={};const F=r.getParameter(r.SCISSOR_BOX),re=r.getParameter(r.VIEWPORT),ke=new $t().fromArray(F),ee=new $t().fromArray(re);function pe(X,be,oe,ge){const Oe=new Uint8Array(4),Ue=r.createTexture();r.bindTexture(X,Ue),r.texParameteri(X,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(X,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let ht=0;ht<oe;ht++)X===r.TEXTURE_3D||X===r.TEXTURE_2D_ARRAY?r.texImage3D(be,0,r.RGBA,1,1,ge,0,r.RGBA,r.UNSIGNED_BYTE,Oe):r.texImage2D(be+ht,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Oe);return Ue}const Re={};Re[r.TEXTURE_2D]=pe(r.TEXTURE_2D,r.TEXTURE_2D,1),Re[r.TEXTURE_CUBE_MAP]=pe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Re[r.TEXTURE_2D_ARRAY]=pe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Re[r.TEXTURE_3D]=pe(r.TEXTURE_3D,r.TEXTURE_3D,1,1),a.setClear(0,0,0,1),c.setClear(1),u.setClear(0),Ee(r.DEPTH_TEST),c.setFunc(qo),Mt(!1),xt(lv),Ee(r.CULL_FACE),B(os);function Ee(X){p[X]!==!0&&(r.enable(X),p[X]=!0)}function Le(X){p[X]!==!1&&(r.disable(X),p[X]=!1)}function Be(X,be){return g[X]!==be?(r.bindFramebuffer(X,be),g[X]=be,X===r.DRAW_FRAMEBUFFER&&(g[r.FRAMEBUFFER]=be),X===r.FRAMEBUFFER&&(g[r.DRAW_FRAMEBUFFER]=be),!0):!1}function rt(X,be){let oe=y,ge=!1;if(X){oe=v.get(be),oe===void 0&&(oe=[],v.set(be,oe));const Oe=X.textures;if(oe.length!==Oe.length||oe[0]!==r.COLOR_ATTACHMENT0){for(let Ue=0,ht=Oe.length;Ue<ht;Ue++)oe[Ue]=r.COLOR_ATTACHMENT0+Ue;oe.length=Oe.length,ge=!0}}else oe[0]!==r.BACK&&(oe[0]=r.BACK,ge=!0);ge&&r.drawBuffers(oe)}function Bt(X){return M!==X?(r.useProgram(X),M=X,!0):!1}const Tt={[Fs]:r.FUNC_ADD,[Zy]:r.FUNC_SUBTRACT,[Jy]:r.FUNC_REVERSE_SUBTRACT};Tt[Qy]=r.MIN,Tt[eS]=r.MAX;const Gt={[tS]:r.ZERO,[nS]:r.ONE,[iS]:r.SRC_COLOR,[lf]:r.SRC_ALPHA,[cS]:r.SRC_ALPHA_SATURATE,[aS]:r.DST_COLOR,[sS]:r.DST_ALPHA,[rS]:r.ONE_MINUS_SRC_COLOR,[cf]:r.ONE_MINUS_SRC_ALPHA,[lS]:r.ONE_MINUS_DST_COLOR,[oS]:r.ONE_MINUS_DST_ALPHA,[uS]:r.CONSTANT_COLOR,[hS]:r.ONE_MINUS_CONSTANT_COLOR,[dS]:r.CONSTANT_ALPHA,[fS]:r.ONE_MINUS_CONSTANT_ALPHA};function B(X,be,oe,ge,Oe,Ue,ht,Xt,fn,Ct){if(X===os){E===!0&&(Le(r.BLEND),E=!1);return}if(E===!1&&(Ee(r.BLEND),E=!0),X!==Ky){if(X!==S||Ct!==P){if((x!==Fs||w!==Fs)&&(r.blendEquation(r.FUNC_ADD),x=Fs,w=Fs),Ct)switch(X){case Ho:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case cv:r.blendFunc(r.ONE,r.ONE);break;case uv:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case hv:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case Ho:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case cv:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case uv:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case hv:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}L=null,R=null,z=null,U=null,O.set(0,0,0),Y=0,S=X,P=Ct}return}Oe=Oe||be,Ue=Ue||oe,ht=ht||ge,(be!==x||Oe!==w)&&(r.blendEquationSeparate(Tt[be],Tt[Oe]),x=be,w=Oe),(oe!==L||ge!==R||Ue!==z||ht!==U)&&(r.blendFuncSeparate(Gt[oe],Gt[ge],Gt[Ue],Gt[ht]),L=oe,R=ge,z=Ue,U=ht),(Xt.equals(O)===!1||fn!==Y)&&(r.blendColor(Xt.r,Xt.g,Xt.b,fn),O.copy(Xt),Y=fn),S=X,P=!1}function Bn(X,be){X.side===$n?Le(r.CULL_FACE):Ee(r.CULL_FACE);let oe=X.side===Kn;be&&(oe=!oe),Mt(oe),X.blending===Ho&&X.transparent===!1?B(os):B(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.blendColor,X.blendAlpha,X.premultipliedAlpha),c.setFunc(X.depthFunc),c.setTest(X.depthTest),c.setMask(X.depthWrite),a.setMask(X.colorWrite);const ge=X.stencilWrite;u.setTest(ge),ge&&(u.setMask(X.stencilWriteMask),u.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),u.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),zt(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?Ee(r.SAMPLE_ALPHA_TO_COVERAGE):Le(r.SAMPLE_ALPHA_TO_COVERAGE)}function Mt(X){N!==X&&(X?r.frontFace(r.CW):r.frontFace(r.CCW),N=X)}function xt(X){X!==qy?(Ee(r.CULL_FACE),X!==I&&(X===lv?r.cullFace(r.BACK):X===jy?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Le(r.CULL_FACE),I=X}function Je(X){X!==se&&(ue&&r.lineWidth(X),se=X)}function zt(X,be,oe){X?(Ee(r.POLYGON_OFFSET_FILL),(K!==be||fe!==oe)&&(r.polygonOffset(be,oe),K=be,fe=oe)):Le(r.POLYGON_OFFSET_FILL)}function Ke(X){X?Ee(r.SCISSOR_TEST):Le(r.SCISSOR_TEST)}function b(X){X===void 0&&(X=r.TEXTURE0+ve-1),he!==X&&(r.activeTexture(X),he=X)}function A(X,be,oe){oe===void 0&&(he===null?oe=r.TEXTURE0+ve-1:oe=he);let ge=ae[oe];ge===void 0&&(ge={type:void 0,texture:void 0},ae[oe]=ge),(ge.type!==X||ge.texture!==be)&&(he!==oe&&(r.activeTexture(oe),he=oe),r.bindTexture(X,be||Re[X]),ge.type=X,ge.texture=be)}function J(){const X=ae[he];X!==void 0&&X.type!==void 0&&(r.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function _e(){try{r.compressedTexImage2D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ye(){try{r.compressedTexImage3D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function me(){try{r.texSubImage2D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function je(){try{r.texSubImage3D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Pe(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ve(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function _t(){try{r.texStorage2D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ae(){try{r.texStorage3D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function We(){try{r.texImage2D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function tt(){try{r.texImage3D.apply(r,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ot(X){ke.equals(X)===!1&&(r.scissor(X.x,X.y,X.z,X.w),ke.copy(X))}function Xe(X){ee.equals(X)===!1&&(r.viewport(X.x,X.y,X.z,X.w),ee.copy(X))}function yt(X,be){let oe=f.get(be);oe===void 0&&(oe=new WeakMap,f.set(be,oe));let ge=oe.get(X);ge===void 0&&(ge=r.getUniformBlockIndex(be,X.name),oe.set(X,ge))}function ut(X,be){const ge=f.get(be).get(X);d.get(be)!==ge&&(r.uniformBlockBinding(be,ge,X.__bindingPointIndex),d.set(be,ge))}function Ot(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),c.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),p={},he=null,ae={},g={},v=new WeakMap,y=[],M=null,E=!1,S=null,x=null,L=null,R=null,w=null,z=null,U=null,O=new st(0,0,0),Y=0,P=!1,N=null,I=null,se=null,K=null,fe=null,ke.set(0,0,r.canvas.width,r.canvas.height),ee.set(0,0,r.canvas.width,r.canvas.height),a.reset(),c.reset(),u.reset()}return{buffers:{color:a,depth:c,stencil:u},enable:Ee,disable:Le,bindFramebuffer:Be,drawBuffers:rt,useProgram:Bt,setBlending:B,setMaterial:Bn,setFlipSided:Mt,setCullFace:xt,setLineWidth:Je,setPolygonOffset:zt,setScissorTest:Ke,activeTexture:b,bindTexture:A,unbindTexture:J,compressedTexImage2D:_e,compressedTexImage3D:ye,texImage2D:We,texImage3D:tt,updateUBOMapping:yt,uniformBlockBinding:ut,texStorage2D:_t,texStorage3D:Ae,texSubImage2D:me,texSubImage3D:je,compressedTexSubImage2D:Pe,compressedTexSubImage3D:Ve,scissor:ot,viewport:Xe,reset:Ot}}function O1(r,e,t,n,s,a,c){const u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new Q,p=new WeakMap;let g;const v=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function M(b,A){return y?new OffscreenCanvas(b,A):fu("canvas")}function E(b,A,J){let _e=1;const ye=Ke(b);if((ye.width>J||ye.height>J)&&(_e=J/Math.max(ye.width,ye.height)),_e<1)if(typeof HTMLImageElement<"u"&&b instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&b instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&b instanceof ImageBitmap||typeof VideoFrame<"u"&&b instanceof VideoFrame){const me=Math.floor(_e*ye.width),je=Math.floor(_e*ye.height);g===void 0&&(g=M(me,je));const Pe=A?M(me,je):g;return Pe.width=me,Pe.height=je,Pe.getContext("2d").drawImage(b,0,0,me,je),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ye.width+"x"+ye.height+") to ("+me+"x"+je+")."),Pe}else return"data"in b&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ye.width+"x"+ye.height+")."),b;return b}function S(b){return b.generateMipmaps}function x(b){r.generateMipmap(b)}function L(b){return b.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:b.isWebGL3DRenderTarget?r.TEXTURE_3D:b.isWebGLArrayRenderTarget||b.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function R(b,A,J,_e,ye=!1){if(b!==null){if(r[b]!==void 0)return r[b];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+b+"'")}let me=A;if(A===r.RED&&(J===r.FLOAT&&(me=r.R32F),J===r.HALF_FLOAT&&(me=r.R16F),J===r.UNSIGNED_BYTE&&(me=r.R8)),A===r.RED_INTEGER&&(J===r.UNSIGNED_BYTE&&(me=r.R8UI),J===r.UNSIGNED_SHORT&&(me=r.R16UI),J===r.UNSIGNED_INT&&(me=r.R32UI),J===r.BYTE&&(me=r.R8I),J===r.SHORT&&(me=r.R16I),J===r.INT&&(me=r.R32I)),A===r.RG&&(J===r.FLOAT&&(me=r.RG32F),J===r.HALF_FLOAT&&(me=r.RG16F),J===r.UNSIGNED_BYTE&&(me=r.RG8)),A===r.RG_INTEGER&&(J===r.UNSIGNED_BYTE&&(me=r.RG8UI),J===r.UNSIGNED_SHORT&&(me=r.RG16UI),J===r.UNSIGNED_INT&&(me=r.RG32UI),J===r.BYTE&&(me=r.RG8I),J===r.SHORT&&(me=r.RG16I),J===r.INT&&(me=r.RG32I)),A===r.RGB_INTEGER&&(J===r.UNSIGNED_BYTE&&(me=r.RGB8UI),J===r.UNSIGNED_SHORT&&(me=r.RGB16UI),J===r.UNSIGNED_INT&&(me=r.RGB32UI),J===r.BYTE&&(me=r.RGB8I),J===r.SHORT&&(me=r.RGB16I),J===r.INT&&(me=r.RGB32I)),A===r.RGBA_INTEGER&&(J===r.UNSIGNED_BYTE&&(me=r.RGBA8UI),J===r.UNSIGNED_SHORT&&(me=r.RGBA16UI),J===r.UNSIGNED_INT&&(me=r.RGBA32UI),J===r.BYTE&&(me=r.RGBA8I),J===r.SHORT&&(me=r.RGBA16I),J===r.INT&&(me=r.RGBA32I)),A===r.RGB&&J===r.UNSIGNED_INT_5_9_9_9_REV&&(me=r.RGB9_E5),A===r.RGBA){const je=ye?hu:gt.getTransfer(_e);J===r.FLOAT&&(me=r.RGBA32F),J===r.HALF_FLOAT&&(me=r.RGBA16F),J===r.UNSIGNED_BYTE&&(me=je===Ft?r.SRGB8_ALPHA8:r.RGBA8),J===r.UNSIGNED_SHORT_4_4_4_4&&(me=r.RGBA4),J===r.UNSIGNED_SHORT_5_5_5_1&&(me=r.RGB5_A1)}return(me===r.R16F||me===r.R32F||me===r.RG16F||me===r.RG32F||me===r.RGBA16F||me===r.RGBA32F)&&e.get("EXT_color_buffer_float"),me}function w(b,A){let J;return b?A===null||A===cs||A===jo?J=r.DEPTH24_STENCIL8:A===Ar?J=r.DEPTH32F_STENCIL8:A===il&&(J=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===cs||A===jo?J=r.DEPTH_COMPONENT24:A===Ar?J=r.DEPTH_COMPONENT32F:A===il&&(J=r.DEPTH_COMPONENT16),J}function z(b,A){return S(b)===!0||b.isFramebufferTexture&&b.minFilter!==Si&&b.minFilter!==ir?Math.log2(Math.max(A.width,A.height))+1:b.mipmaps!==void 0&&b.mipmaps.length>0?b.mipmaps.length:b.isCompressedTexture&&Array.isArray(b.image)?A.mipmaps.length:1}function U(b){const A=b.target;A.removeEventListener("dispose",U),Y(A),A.isVideoTexture&&p.delete(A)}function O(b){const A=b.target;A.removeEventListener("dispose",O),N(A)}function Y(b){const A=n.get(b);if(A.__webglInit===void 0)return;const J=b.source,_e=v.get(J);if(_e){const ye=_e[A.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&P(b),Object.keys(_e).length===0&&v.delete(J)}n.remove(b)}function P(b){const A=n.get(b);r.deleteTexture(A.__webglTexture);const J=b.source,_e=v.get(J);delete _e[A.__cacheKey],c.memory.textures--}function N(b){const A=n.get(b);if(b.depthTexture&&(b.depthTexture.dispose(),n.remove(b.depthTexture)),b.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++){if(Array.isArray(A.__webglFramebuffer[_e]))for(let ye=0;ye<A.__webglFramebuffer[_e].length;ye++)r.deleteFramebuffer(A.__webglFramebuffer[_e][ye]);else r.deleteFramebuffer(A.__webglFramebuffer[_e]);A.__webglDepthbuffer&&r.deleteRenderbuffer(A.__webglDepthbuffer[_e])}else{if(Array.isArray(A.__webglFramebuffer))for(let _e=0;_e<A.__webglFramebuffer.length;_e++)r.deleteFramebuffer(A.__webglFramebuffer[_e]);else r.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&r.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&r.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let _e=0;_e<A.__webglColorRenderbuffer.length;_e++)A.__webglColorRenderbuffer[_e]&&r.deleteRenderbuffer(A.__webglColorRenderbuffer[_e]);A.__webglDepthRenderbuffer&&r.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const J=b.textures;for(let _e=0,ye=J.length;_e<ye;_e++){const me=n.get(J[_e]);me.__webglTexture&&(r.deleteTexture(me.__webglTexture),c.memory.textures--),n.remove(J[_e])}n.remove(b)}let I=0;function se(){I=0}function K(){const b=I;return b>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+b+" texture units while this GPU supports only "+s.maxTextures),I+=1,b}function fe(b){const A=[];return A.push(b.wrapS),A.push(b.wrapT),A.push(b.wrapR||0),A.push(b.magFilter),A.push(b.minFilter),A.push(b.anisotropy),A.push(b.internalFormat),A.push(b.format),A.push(b.type),A.push(b.generateMipmaps),A.push(b.premultiplyAlpha),A.push(b.flipY),A.push(b.unpackAlignment),A.push(b.colorSpace),A.join()}function ve(b,A){const J=n.get(b);if(b.isVideoTexture&&Je(b),b.isRenderTargetTexture===!1&&b.version>0&&J.__version!==b.version){const _e=b.image;if(_e===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(_e.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ee(J,b,A);return}}t.bindTexture(r.TEXTURE_2D,J.__webglTexture,r.TEXTURE0+A)}function ue(b,A){const J=n.get(b);if(b.version>0&&J.__version!==b.version){ee(J,b,A);return}t.bindTexture(r.TEXTURE_2D_ARRAY,J.__webglTexture,r.TEXTURE0+A)}function de(b,A){const J=n.get(b);if(b.version>0&&J.__version!==b.version){ee(J,b,A);return}t.bindTexture(r.TEXTURE_3D,J.__webglTexture,r.TEXTURE0+A)}function V(b,A){const J=n.get(b);if(b.version>0&&J.__version!==b.version){pe(J,b,A);return}t.bindTexture(r.TEXTURE_CUBE_MAP,J.__webglTexture,r.TEXTURE0+A)}const he={[xf]:r.REPEAT,[ks]:r.CLAMP_TO_EDGE,[yf]:r.MIRRORED_REPEAT},ae={[Si]:r.NEAREST,[ES]:r.NEAREST_MIPMAP_NEAREST,[Cc]:r.NEAREST_MIPMAP_LINEAR,[ir]:r.LINEAR,[Sd]:r.LINEAR_MIPMAP_NEAREST,[ss]:r.LINEAR_MIPMAP_LINEAR},F={[AS]:r.NEVER,[bS]:r.ALWAYS,[RS]:r.LESS,[W_]:r.LEQUAL,[CS]:r.EQUAL,[PS]:r.GEQUAL,[NS]:r.GREATER,[LS]:r.NOTEQUAL};function re(b,A){if(A.type===Ar&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===ir||A.magFilter===Sd||A.magFilter===Cc||A.magFilter===ss||A.minFilter===ir||A.minFilter===Sd||A.minFilter===Cc||A.minFilter===ss)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(b,r.TEXTURE_WRAP_S,he[A.wrapS]),r.texParameteri(b,r.TEXTURE_WRAP_T,he[A.wrapT]),(b===r.TEXTURE_3D||b===r.TEXTURE_2D_ARRAY)&&r.texParameteri(b,r.TEXTURE_WRAP_R,he[A.wrapR]),r.texParameteri(b,r.TEXTURE_MAG_FILTER,ae[A.magFilter]),r.texParameteri(b,r.TEXTURE_MIN_FILTER,ae[A.minFilter]),A.compareFunction&&(r.texParameteri(b,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(b,r.TEXTURE_COMPARE_FUNC,F[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Si||A.minFilter!==Cc&&A.minFilter!==ss||A.type===Ar&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||n.get(A).__currentAnisotropy){const J=e.get("EXT_texture_filter_anisotropic");r.texParameterf(b,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,s.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy}}}function ke(b,A){let J=!1;b.__webglInit===void 0&&(b.__webglInit=!0,A.addEventListener("dispose",U));const _e=A.source;let ye=v.get(_e);ye===void 0&&(ye={},v.set(_e,ye));const me=fe(A);if(me!==b.__cacheKey){ye[me]===void 0&&(ye[me]={texture:r.createTexture(),usedTimes:0},c.memory.textures++,J=!0),ye[me].usedTimes++;const je=ye[b.__cacheKey];je!==void 0&&(ye[b.__cacheKey].usedTimes--,je.usedTimes===0&&P(A)),b.__cacheKey=me,b.__webglTexture=ye[me].texture}return J}function ee(b,A,J){let _e=r.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(_e=r.TEXTURE_2D_ARRAY),A.isData3DTexture&&(_e=r.TEXTURE_3D);const ye=ke(b,A),me=A.source;t.bindTexture(_e,b.__webglTexture,r.TEXTURE0+J);const je=n.get(me);if(me.version!==je.__version||ye===!0){t.activeTexture(r.TEXTURE0+J);const Pe=gt.getPrimaries(gt.workingColorSpace),Ve=A.colorSpace===nr?null:gt.getPrimaries(A.colorSpace),_t=A.colorSpace===nr||Pe===Ve?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,_t);let Ae=E(A.image,!1,s.maxTextureSize);Ae=zt(A,Ae);const We=a.convert(A.format,A.colorSpace),tt=a.convert(A.type);let ot=R(A.internalFormat,We,tt,A.colorSpace,A.isVideoTexture);re(_e,A);let Xe;const yt=A.mipmaps,ut=A.isVideoTexture!==!0,Ot=je.__version===void 0||ye===!0,X=me.dataReady,be=z(A,Ae);if(A.isDepthTexture)ot=w(A.format===$o,A.type),Ot&&(ut?t.texStorage2D(r.TEXTURE_2D,1,ot,Ae.width,Ae.height):t.texImage2D(r.TEXTURE_2D,0,ot,Ae.width,Ae.height,0,We,tt,null));else if(A.isDataTexture)if(yt.length>0){ut&&Ot&&t.texStorage2D(r.TEXTURE_2D,be,ot,yt[0].width,yt[0].height);for(let oe=0,ge=yt.length;oe<ge;oe++)Xe=yt[oe],ut?X&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,Xe.width,Xe.height,We,tt,Xe.data):t.texImage2D(r.TEXTURE_2D,oe,ot,Xe.width,Xe.height,0,We,tt,Xe.data);A.generateMipmaps=!1}else ut?(Ot&&t.texStorage2D(r.TEXTURE_2D,be,ot,Ae.width,Ae.height),X&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ae.width,Ae.height,We,tt,Ae.data)):t.texImage2D(r.TEXTURE_2D,0,ot,Ae.width,Ae.height,0,We,tt,Ae.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){ut&&Ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,be,ot,yt[0].width,yt[0].height,Ae.depth);for(let oe=0,ge=yt.length;oe<ge;oe++)if(Xe=yt[oe],A.format!==Yi)if(We!==null)if(ut){if(X)if(A.layerUpdates.size>0){const Oe=Wv(Xe.width,Xe.height,A.format,A.type);for(const Ue of A.layerUpdates){const ht=Xe.data.subarray(Ue*Oe/Xe.data.BYTES_PER_ELEMENT,(Ue+1)*Oe/Xe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,Ue,Xe.width,Xe.height,1,We,ht)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,0,Xe.width,Xe.height,Ae.depth,We,Xe.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,oe,ot,Xe.width,Xe.height,Ae.depth,0,Xe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ut?X&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,0,Xe.width,Xe.height,Ae.depth,We,tt,Xe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,oe,ot,Xe.width,Xe.height,Ae.depth,0,We,tt,Xe.data)}else{ut&&Ot&&t.texStorage2D(r.TEXTURE_2D,be,ot,yt[0].width,yt[0].height);for(let oe=0,ge=yt.length;oe<ge;oe++)Xe=yt[oe],A.format!==Yi?We!==null?ut?X&&t.compressedTexSubImage2D(r.TEXTURE_2D,oe,0,0,Xe.width,Xe.height,We,Xe.data):t.compressedTexImage2D(r.TEXTURE_2D,oe,ot,Xe.width,Xe.height,0,Xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ut?X&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,Xe.width,Xe.height,We,tt,Xe.data):t.texImage2D(r.TEXTURE_2D,oe,ot,Xe.width,Xe.height,0,We,tt,Xe.data)}else if(A.isDataArrayTexture)if(ut){if(Ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,be,ot,Ae.width,Ae.height,Ae.depth),X)if(A.layerUpdates.size>0){const oe=Wv(Ae.width,Ae.height,A.format,A.type);for(const ge of A.layerUpdates){const Oe=Ae.data.subarray(ge*oe/Ae.data.BYTES_PER_ELEMENT,(ge+1)*oe/Ae.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,ge,Ae.width,Ae.height,1,We,tt,Oe)}A.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Ae.width,Ae.height,Ae.depth,We,tt,Ae.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,ot,Ae.width,Ae.height,Ae.depth,0,We,tt,Ae.data);else if(A.isData3DTexture)ut?(Ot&&t.texStorage3D(r.TEXTURE_3D,be,ot,Ae.width,Ae.height,Ae.depth),X&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Ae.width,Ae.height,Ae.depth,We,tt,Ae.data)):t.texImage3D(r.TEXTURE_3D,0,ot,Ae.width,Ae.height,Ae.depth,0,We,tt,Ae.data);else if(A.isFramebufferTexture){if(Ot)if(ut)t.texStorage2D(r.TEXTURE_2D,be,ot,Ae.width,Ae.height);else{let oe=Ae.width,ge=Ae.height;for(let Oe=0;Oe<be;Oe++)t.texImage2D(r.TEXTURE_2D,Oe,ot,oe,ge,0,We,tt,null),oe>>=1,ge>>=1}}else if(yt.length>0){if(ut&&Ot){const oe=Ke(yt[0]);t.texStorage2D(r.TEXTURE_2D,be,ot,oe.width,oe.height)}for(let oe=0,ge=yt.length;oe<ge;oe++)Xe=yt[oe],ut?X&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,We,tt,Xe):t.texImage2D(r.TEXTURE_2D,oe,ot,We,tt,Xe);A.generateMipmaps=!1}else if(ut){if(Ot){const oe=Ke(Ae);t.texStorage2D(r.TEXTURE_2D,be,ot,oe.width,oe.height)}X&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,We,tt,Ae)}else t.texImage2D(r.TEXTURE_2D,0,ot,We,tt,Ae);S(A)&&x(_e),je.__version=me.version,A.onUpdate&&A.onUpdate(A)}b.__version=A.version}function pe(b,A,J){if(A.image.length!==6)return;const _e=ke(b,A),ye=A.source;t.bindTexture(r.TEXTURE_CUBE_MAP,b.__webglTexture,r.TEXTURE0+J);const me=n.get(ye);if(ye.version!==me.__version||_e===!0){t.activeTexture(r.TEXTURE0+J);const je=gt.getPrimaries(gt.workingColorSpace),Pe=A.colorSpace===nr?null:gt.getPrimaries(A.colorSpace),Ve=A.colorSpace===nr||je===Pe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ve);const _t=A.isCompressedTexture||A.image[0].isCompressedTexture,Ae=A.image[0]&&A.image[0].isDataTexture,We=[];for(let ge=0;ge<6;ge++)!_t&&!Ae?We[ge]=E(A.image[ge],!0,s.maxCubemapSize):We[ge]=Ae?A.image[ge].image:A.image[ge],We[ge]=zt(A,We[ge]);const tt=We[0],ot=a.convert(A.format,A.colorSpace),Xe=a.convert(A.type),yt=R(A.internalFormat,ot,Xe,A.colorSpace),ut=A.isVideoTexture!==!0,Ot=me.__version===void 0||_e===!0,X=ye.dataReady;let be=z(A,tt);re(r.TEXTURE_CUBE_MAP,A);let oe;if(_t){ut&&Ot&&t.texStorage2D(r.TEXTURE_CUBE_MAP,be,yt,tt.width,tt.height);for(let ge=0;ge<6;ge++){oe=We[ge].mipmaps;for(let Oe=0;Oe<oe.length;Oe++){const Ue=oe[Oe];A.format!==Yi?ot!==null?ut?X&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe,0,0,Ue.width,Ue.height,ot,Ue.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe,yt,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ut?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe,0,0,Ue.width,Ue.height,ot,Xe,Ue.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe,yt,Ue.width,Ue.height,0,ot,Xe,Ue.data)}}}else{if(oe=A.mipmaps,ut&&Ot){oe.length>0&&be++;const ge=Ke(We[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,be,yt,ge.width,ge.height)}for(let ge=0;ge<6;ge++)if(Ae){ut?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,0,0,We[ge].width,We[ge].height,ot,Xe,We[ge].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,yt,We[ge].width,We[ge].height,0,ot,Xe,We[ge].data);for(let Oe=0;Oe<oe.length;Oe++){const ht=oe[Oe].image[ge].image;ut?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe+1,0,0,ht.width,ht.height,ot,Xe,ht.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe+1,yt,ht.width,ht.height,0,ot,Xe,ht.data)}}else{ut?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,0,0,ot,Xe,We[ge]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,yt,ot,Xe,We[ge]);for(let Oe=0;Oe<oe.length;Oe++){const Ue=oe[Oe];ut?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe+1,0,0,ot,Xe,Ue.image[ge]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Oe+1,yt,ot,Xe,Ue.image[ge])}}}S(A)&&x(r.TEXTURE_CUBE_MAP),me.__version=ye.version,A.onUpdate&&A.onUpdate(A)}b.__version=A.version}function Re(b,A,J,_e,ye,me){const je=a.convert(J.format,J.colorSpace),Pe=a.convert(J.type),Ve=R(J.internalFormat,je,Pe,J.colorSpace),_t=n.get(A),Ae=n.get(J);if(Ae.__renderTarget=A,!_t.__hasExternalTextures){const We=Math.max(1,A.width>>me),tt=Math.max(1,A.height>>me);ye===r.TEXTURE_3D||ye===r.TEXTURE_2D_ARRAY?t.texImage3D(ye,me,Ve,We,tt,A.depth,0,je,Pe,null):t.texImage2D(ye,me,Ve,We,tt,0,je,Pe,null)}t.bindFramebuffer(r.FRAMEBUFFER,b),xt(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,_e,ye,Ae.__webglTexture,0,Mt(A)):(ye===r.TEXTURE_2D||ye>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ye<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,_e,ye,Ae.__webglTexture,me),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ee(b,A,J){if(r.bindRenderbuffer(r.RENDERBUFFER,b),A.depthBuffer){const _e=A.depthTexture,ye=_e&&_e.isDepthTexture?_e.type:null,me=w(A.stencilBuffer,ye),je=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Pe=Mt(A);xt(A)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Pe,me,A.width,A.height):J?r.renderbufferStorageMultisample(r.RENDERBUFFER,Pe,me,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,me,A.width,A.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,je,r.RENDERBUFFER,b)}else{const _e=A.textures;for(let ye=0;ye<_e.length;ye++){const me=_e[ye],je=a.convert(me.format,me.colorSpace),Pe=a.convert(me.type),Ve=R(me.internalFormat,je,Pe,me.colorSpace),_t=Mt(A);J&&xt(A)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,_t,Ve,A.width,A.height):xt(A)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,_t,Ve,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,Ve,A.width,A.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Le(b,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,b),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const _e=n.get(A.depthTexture);_e.__renderTarget=A,(!_e.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),ve(A.depthTexture,0);const ye=_e.__webglTexture,me=Mt(A);if(A.depthTexture.format===Go)xt(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ye,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ye,0);else if(A.depthTexture.format===$o)xt(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ye,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ye,0);else throw new Error("Unknown depthTexture format")}function Be(b){const A=n.get(b),J=b.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==b.depthTexture){const _e=b.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),_e){const ye=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,_e.removeEventListener("dispose",ye)};_e.addEventListener("dispose",ye),A.__depthDisposeCallback=ye}A.__boundDepthTexture=_e}if(b.depthTexture&&!A.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");Le(A.__webglFramebuffer,b)}else if(J){A.__webglDepthbuffer=[];for(let _e=0;_e<6;_e++)if(t.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer[_e]),A.__webglDepthbuffer[_e]===void 0)A.__webglDepthbuffer[_e]=r.createRenderbuffer(),Ee(A.__webglDepthbuffer[_e],b,!1);else{const ye=b.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,me=A.__webglDepthbuffer[_e];r.bindRenderbuffer(r.RENDERBUFFER,me),r.framebufferRenderbuffer(r.FRAMEBUFFER,ye,r.RENDERBUFFER,me)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=r.createRenderbuffer(),Ee(A.__webglDepthbuffer,b,!1);else{const _e=b.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ye=A.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,ye),r.framebufferRenderbuffer(r.FRAMEBUFFER,_e,r.RENDERBUFFER,ye)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function rt(b,A,J){const _e=n.get(b);A!==void 0&&Re(_e.__webglFramebuffer,b,b.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),J!==void 0&&Be(b)}function Bt(b){const A=b.texture,J=n.get(b),_e=n.get(A);b.addEventListener("dispose",O);const ye=b.textures,me=b.isWebGLCubeRenderTarget===!0,je=ye.length>1;if(je||(_e.__webglTexture===void 0&&(_e.__webglTexture=r.createTexture()),_e.__version=A.version,c.memory.textures++),me){J.__webglFramebuffer=[];for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0){J.__webglFramebuffer[Pe]=[];for(let Ve=0;Ve<A.mipmaps.length;Ve++)J.__webglFramebuffer[Pe][Ve]=r.createFramebuffer()}else J.__webglFramebuffer[Pe]=r.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){J.__webglFramebuffer=[];for(let Pe=0;Pe<A.mipmaps.length;Pe++)J.__webglFramebuffer[Pe]=r.createFramebuffer()}else J.__webglFramebuffer=r.createFramebuffer();if(je)for(let Pe=0,Ve=ye.length;Pe<Ve;Pe++){const _t=n.get(ye[Pe]);_t.__webglTexture===void 0&&(_t.__webglTexture=r.createTexture(),c.memory.textures++)}if(b.samples>0&&xt(b)===!1){J.__webglMultisampledFramebuffer=r.createFramebuffer(),J.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let Pe=0;Pe<ye.length;Pe++){const Ve=ye[Pe];J.__webglColorRenderbuffer[Pe]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,J.__webglColorRenderbuffer[Pe]);const _t=a.convert(Ve.format,Ve.colorSpace),Ae=a.convert(Ve.type),We=R(Ve.internalFormat,_t,Ae,Ve.colorSpace,b.isXRRenderTarget===!0),tt=Mt(b);r.renderbufferStorageMultisample(r.RENDERBUFFER,tt,We,b.width,b.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Pe,r.RENDERBUFFER,J.__webglColorRenderbuffer[Pe])}r.bindRenderbuffer(r.RENDERBUFFER,null),b.depthBuffer&&(J.__webglDepthRenderbuffer=r.createRenderbuffer(),Ee(J.__webglDepthRenderbuffer,b,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(me){t.bindTexture(r.TEXTURE_CUBE_MAP,_e.__webglTexture),re(r.TEXTURE_CUBE_MAP,A);for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0)for(let Ve=0;Ve<A.mipmaps.length;Ve++)Re(J.__webglFramebuffer[Pe][Ve],b,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ve);else Re(J.__webglFramebuffer[Pe],b,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0);S(A)&&x(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(je){for(let Pe=0,Ve=ye.length;Pe<Ve;Pe++){const _t=ye[Pe],Ae=n.get(_t);t.bindTexture(r.TEXTURE_2D,Ae.__webglTexture),re(r.TEXTURE_2D,_t),Re(J.__webglFramebuffer,b,_t,r.COLOR_ATTACHMENT0+Pe,r.TEXTURE_2D,0),S(_t)&&x(r.TEXTURE_2D)}t.unbindTexture()}else{let Pe=r.TEXTURE_2D;if((b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(Pe=b.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(Pe,_e.__webglTexture),re(Pe,A),A.mipmaps&&A.mipmaps.length>0)for(let Ve=0;Ve<A.mipmaps.length;Ve++)Re(J.__webglFramebuffer[Ve],b,A,r.COLOR_ATTACHMENT0,Pe,Ve);else Re(J.__webglFramebuffer,b,A,r.COLOR_ATTACHMENT0,Pe,0);S(A)&&x(Pe),t.unbindTexture()}b.depthBuffer&&Be(b)}function Tt(b){const A=b.textures;for(let J=0,_e=A.length;J<_e;J++){const ye=A[J];if(S(ye)){const me=L(b),je=n.get(ye).__webglTexture;t.bindTexture(me,je),x(me),t.unbindTexture()}}}const Gt=[],B=[];function Bn(b){if(b.samples>0){if(xt(b)===!1){const A=b.textures,J=b.width,_e=b.height;let ye=r.COLOR_BUFFER_BIT;const me=b.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,je=n.get(b),Pe=A.length>1;if(Pe)for(let Ve=0;Ve<A.length;Ve++)t.bindFramebuffer(r.FRAMEBUFFER,je.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ve,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,je.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ve,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,je.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,je.__webglFramebuffer);for(let Ve=0;Ve<A.length;Ve++){if(b.resolveDepthBuffer&&(b.depthBuffer&&(ye|=r.DEPTH_BUFFER_BIT),b.stencilBuffer&&b.resolveStencilBuffer&&(ye|=r.STENCIL_BUFFER_BIT)),Pe){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,je.__webglColorRenderbuffer[Ve]);const _t=n.get(A[Ve]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,_t,0)}r.blitFramebuffer(0,0,J,_e,0,0,J,_e,ye,r.NEAREST),d===!0&&(Gt.length=0,B.length=0,Gt.push(r.COLOR_ATTACHMENT0+Ve),b.depthBuffer&&b.resolveDepthBuffer===!1&&(Gt.push(me),B.push(me),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,B)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Gt))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Pe)for(let Ve=0;Ve<A.length;Ve++){t.bindFramebuffer(r.FRAMEBUFFER,je.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ve,r.RENDERBUFFER,je.__webglColorRenderbuffer[Ve]);const _t=n.get(A[Ve]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,je.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ve,r.TEXTURE_2D,_t,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,je.__webglMultisampledFramebuffer)}else if(b.depthBuffer&&b.resolveDepthBuffer===!1&&d){const A=b.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[A])}}}function Mt(b){return Math.min(s.maxSamples,b.samples)}function xt(b){const A=n.get(b);return b.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Je(b){const A=c.render.frame;p.get(b)!==A&&(p.set(b,A),b.update())}function zt(b,A){const J=b.colorSpace,_e=b.format,ye=b.type;return b.isCompressedTexture===!0||b.isVideoTexture===!0||J!==Ko&&J!==nr&&(gt.getTransfer(J)===Ft?(_e!==Yi||ye!==Cr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),A}function Ke(b){return typeof HTMLImageElement<"u"&&b instanceof HTMLImageElement?(f.width=b.naturalWidth||b.width,f.height=b.naturalHeight||b.height):typeof VideoFrame<"u"&&b instanceof VideoFrame?(f.width=b.displayWidth,f.height=b.displayHeight):(f.width=b.width,f.height=b.height),f}this.allocateTextureUnit=K,this.resetTextureUnits=se,this.setTexture2D=ve,this.setTexture2DArray=ue,this.setTexture3D=de,this.setTextureCube=V,this.rebindTextures=rt,this.setupRenderTarget=Bt,this.updateRenderTargetMipmap=Tt,this.updateMultisampleRenderTarget=Bn,this.setupDepthRenderbuffer=Be,this.setupFrameBufferTexture=Re,this.useMultisampledRTT=xt}function F1(r,e){function t(n,s=nr){let a;const c=gt.getTransfer(s);if(n===Cr)return r.UNSIGNED_BYTE;if(n===rp)return r.UNSIGNED_SHORT_4_4_4_4;if(n===sp)return r.UNSIGNED_SHORT_5_5_5_1;if(n===U_)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===I_)return r.BYTE;if(n===D_)return r.SHORT;if(n===il)return r.UNSIGNED_SHORT;if(n===Su)return r.INT;if(n===cs)return r.UNSIGNED_INT;if(n===Ar)return r.FLOAT;if(n===ea)return r.HALF_FLOAT;if(n===O_)return r.ALPHA;if(n===F_)return r.RGB;if(n===Yi)return r.RGBA;if(n===z_)return r.LUMINANCE;if(n===k_)return r.LUMINANCE_ALPHA;if(n===Go)return r.DEPTH_COMPONENT;if(n===$o)return r.DEPTH_STENCIL;if(n===B_)return r.RED;if(n===op)return r.RED_INTEGER;if(n===V_)return r.RG;if(n===ap)return r.RG_INTEGER;if(n===lp)return r.RGBA_INTEGER;if(n===iu||n===ru||n===su||n===ou)if(c===Ft)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(n===iu)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ru)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===su)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ou)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(n===iu)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ru)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===su)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ou)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Sf||n===Mf||n===Ef||n===Tf)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(n===Sf)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Mf)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ef)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Tf)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===wf||n===Af||n===Rf)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(n===wf||n===Af)return c===Ft?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===Rf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Cf||n===Nf||n===Lf||n===Pf||n===bf||n===If||n===Df||n===Uf||n===Of||n===Ff||n===zf||n===kf||n===Bf||n===Vf)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(n===Cf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Nf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Lf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Pf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===bf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===If)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Df)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Uf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Of)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ff)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===zf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===kf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Bf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Vf)return c===Ft?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===au||n===Hf||n===Gf)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(n===au)return c===Ft?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Hf)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Gf)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===H_||n===Wf||n===Xf||n===Yf)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(n===au)return a.COMPRESSED_RED_RGTC1_EXT;if(n===Wf)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Xf)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Yf)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===jo?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}const z1={type:"move"};class Jd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new jc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new jc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new W,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new W),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new jc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new W,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new W),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,a=null,c=null;const u=this._targetRay,d=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){c=!0;for(const E of e.hand.values()){const S=t.getJointPose(E,n),x=this._getHandJoint(f,E);S!==null&&(x.matrix.fromArray(S.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.matrixWorldNeedsUpdate=!0,x.jointRadius=S.radius),x.visible=S!==null}const p=f.joints["index-finger-tip"],g=f.joints["thumb-tip"],v=p.position.distanceTo(g.position),y=.02,M=.005;f.inputState.pinching&&v>y+M?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&v<=y-M&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else d!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(d.matrix.fromArray(a.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,a.linearVelocity?(d.hasLinearVelocity=!0,d.linearVelocity.copy(a.linearVelocity)):d.hasLinearVelocity=!1,a.angularVelocity?(d.hasAngularVelocity=!0,d.angularVelocity.copy(a.angularVelocity)):d.hasAngularVelocity=!1));u!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&a!==null&&(s=a),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1,this.dispatchEvent(z1)))}return u!==null&&(u.visible=s!==null),d!==null&&(d.visible=a!==null),f!==null&&(f.visible=c!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new jc;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const k1=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,B1=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class V1{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const s=new Zn,a=e.properties.get(s);a.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new us({vertexShader:k1,fragmentShader:B1,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Pn(new wu(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class H1 extends hs{constructor(e,t){super();const n=this;let s=null,a=1,c=null,u="local-floor",d=1,f=null,p=null,g=null,v=null,y=null,M=null;const E=new V1,S=t.getContextAttributes();let x=null,L=null;const R=[],w=[],z=new Q;let U=null;const O=new bi;O.viewport=new $t;const Y=new bi;Y.viewport=new $t;const P=[O,Y],N=new aE;let I=null,se=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ee){let pe=R[ee];return pe===void 0&&(pe=new Jd,R[ee]=pe),pe.getTargetRaySpace()},this.getControllerGrip=function(ee){let pe=R[ee];return pe===void 0&&(pe=new Jd,R[ee]=pe),pe.getGripSpace()},this.getHand=function(ee){let pe=R[ee];return pe===void 0&&(pe=new Jd,R[ee]=pe),pe.getHandSpace()};function K(ee){const pe=w.indexOf(ee.inputSource);if(pe===-1)return;const Re=R[pe];Re!==void 0&&(Re.update(ee.inputSource,ee.frame,f||c),Re.dispatchEvent({type:ee.type,data:ee.inputSource}))}function fe(){s.removeEventListener("select",K),s.removeEventListener("selectstart",K),s.removeEventListener("selectend",K),s.removeEventListener("squeeze",K),s.removeEventListener("squeezestart",K),s.removeEventListener("squeezeend",K),s.removeEventListener("end",fe),s.removeEventListener("inputsourceschange",ve);for(let ee=0;ee<R.length;ee++){const pe=w[ee];pe!==null&&(w[ee]=null,R[ee].disconnect(pe))}I=null,se=null,E.reset(),e.setRenderTarget(x),y=null,v=null,g=null,s=null,L=null,ke.stop(),n.isPresenting=!1,e.setPixelRatio(U),e.setSize(z.width,z.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ee){a=ee,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ee){u=ee,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||c},this.setReferenceSpace=function(ee){f=ee},this.getBaseLayer=function(){return v!==null?v:y},this.getBinding=function(){return g},this.getFrame=function(){return M},this.getSession=function(){return s},this.setSession=async function(ee){if(s=ee,s!==null){if(x=e.getRenderTarget(),s.addEventListener("select",K),s.addEventListener("selectstart",K),s.addEventListener("selectend",K),s.addEventListener("squeeze",K),s.addEventListener("squeezestart",K),s.addEventListener("squeezeend",K),s.addEventListener("end",fe),s.addEventListener("inputsourceschange",ve),S.xrCompatible!==!0&&await t.makeXRCompatible(),U=e.getPixelRatio(),e.getSize(z),s.renderState.layers===void 0){const pe={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:a};y=new XRWebGLLayer(s,t,pe),s.updateRenderState({baseLayer:y}),e.setPixelRatio(1),e.setSize(y.framebufferWidth,y.framebufferHeight,!1),L=new Xs(y.framebufferWidth,y.framebufferHeight,{format:Yi,type:Cr,colorSpace:e.outputColorSpace,stencilBuffer:S.stencil})}else{let pe=null,Re=null,Ee=null;S.depth&&(Ee=S.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,pe=S.stencil?$o:Go,Re=S.stencil?jo:cs);const Le={colorFormat:t.RGBA8,depthFormat:Ee,scaleFactor:a};g=new XRWebGLBinding(s,t),v=g.createProjectionLayer(Le),s.updateRenderState({layers:[v]}),e.setPixelRatio(1),e.setSize(v.textureWidth,v.textureHeight,!1),L=new Xs(v.textureWidth,v.textureHeight,{format:Yi,type:Cr,depthTexture:new hl(v.textureWidth,v.textureHeight,Re,void 0,void 0,void 0,void 0,void 0,void 0,pe),stencilBuffer:S.stencil,colorSpace:e.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:v.ignoreDepthValues===!1})}L.isXRRenderTarget=!0,this.setFoveation(d),f=null,c=await s.requestReferenceSpace(u),ke.setContext(s),ke.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return E.getDepthTexture()};function ve(ee){for(let pe=0;pe<ee.removed.length;pe++){const Re=ee.removed[pe],Ee=w.indexOf(Re);Ee>=0&&(w[Ee]=null,R[Ee].disconnect(Re))}for(let pe=0;pe<ee.added.length;pe++){const Re=ee.added[pe];let Ee=w.indexOf(Re);if(Ee===-1){for(let Be=0;Be<R.length;Be++)if(Be>=w.length){w.push(Re),Ee=Be;break}else if(w[Be]===null){w[Be]=Re,Ee=Be;break}if(Ee===-1)break}const Le=R[Ee];Le&&Le.connect(Re)}}const ue=new W,de=new W;function V(ee,pe,Re){ue.setFromMatrixPosition(pe.matrixWorld),de.setFromMatrixPosition(Re.matrixWorld);const Ee=ue.distanceTo(de),Le=pe.projectionMatrix.elements,Be=Re.projectionMatrix.elements,rt=Le[14]/(Le[10]-1),Bt=Le[14]/(Le[10]+1),Tt=(Le[9]+1)/Le[5],Gt=(Le[9]-1)/Le[5],B=(Le[8]-1)/Le[0],Bn=(Be[8]+1)/Be[0],Mt=rt*B,xt=rt*Bn,Je=Ee/(-B+Bn),zt=Je*-B;if(pe.matrixWorld.decompose(ee.position,ee.quaternion,ee.scale),ee.translateX(zt),ee.translateZ(Je),ee.matrixWorld.compose(ee.position,ee.quaternion,ee.scale),ee.matrixWorldInverse.copy(ee.matrixWorld).invert(),Le[10]===-1)ee.projectionMatrix.copy(pe.projectionMatrix),ee.projectionMatrixInverse.copy(pe.projectionMatrixInverse);else{const Ke=rt+Je,b=Bt+Je,A=Mt-zt,J=xt+(Ee-zt),_e=Tt*Bt/b*Ke,ye=Gt*Bt/b*Ke;ee.projectionMatrix.makePerspective(A,J,_e,ye,Ke,b),ee.projectionMatrixInverse.copy(ee.projectionMatrix).invert()}}function he(ee,pe){pe===null?ee.matrixWorld.copy(ee.matrix):ee.matrixWorld.multiplyMatrices(pe.matrixWorld,ee.matrix),ee.matrixWorldInverse.copy(ee.matrixWorld).invert()}this.updateCamera=function(ee){if(s===null)return;let pe=ee.near,Re=ee.far;E.texture!==null&&(E.depthNear>0&&(pe=E.depthNear),E.depthFar>0&&(Re=E.depthFar)),N.near=Y.near=O.near=pe,N.far=Y.far=O.far=Re,(I!==N.near||se!==N.far)&&(s.updateRenderState({depthNear:N.near,depthFar:N.far}),I=N.near,se=N.far),O.layers.mask=ee.layers.mask|2,Y.layers.mask=ee.layers.mask|4,N.layers.mask=O.layers.mask|Y.layers.mask;const Ee=ee.parent,Le=N.cameras;he(N,Ee);for(let Be=0;Be<Le.length;Be++)he(Le[Be],Ee);Le.length===2?V(N,O,Y):N.projectionMatrix.copy(O.projectionMatrix),ae(ee,N,Ee)};function ae(ee,pe,Re){Re===null?ee.matrix.copy(pe.matrixWorld):(ee.matrix.copy(Re.matrixWorld),ee.matrix.invert(),ee.matrix.multiply(pe.matrixWorld)),ee.matrix.decompose(ee.position,ee.quaternion,ee.scale),ee.updateMatrixWorld(!0),ee.projectionMatrix.copy(pe.projectionMatrix),ee.projectionMatrixInverse.copy(pe.projectionMatrixInverse),ee.isPerspectiveCamera&&(ee.fov=sl*2*Math.atan(1/ee.projectionMatrix.elements[5]),ee.zoom=1)}this.getCamera=function(){return N},this.getFoveation=function(){if(!(v===null&&y===null))return d},this.setFoveation=function(ee){d=ee,v!==null&&(v.fixedFoveation=ee),y!==null&&y.fixedFoveation!==void 0&&(y.fixedFoveation=ee)},this.hasDepthSensing=function(){return E.texture!==null},this.getDepthSensingMesh=function(){return E.getMesh(N)};let F=null;function re(ee,pe){if(p=pe.getViewerPose(f||c),M=pe,p!==null){const Re=p.views;y!==null&&(e.setRenderTargetFramebuffer(L,y.framebuffer),e.setRenderTarget(L));let Ee=!1;Re.length!==N.cameras.length&&(N.cameras.length=0,Ee=!0);for(let Be=0;Be<Re.length;Be++){const rt=Re[Be];let Bt=null;if(y!==null)Bt=y.getViewport(rt);else{const Gt=g.getViewSubImage(v,rt);Bt=Gt.viewport,Be===0&&(e.setRenderTargetTextures(L,Gt.colorTexture,v.ignoreDepthValues?void 0:Gt.depthStencilTexture),e.setRenderTarget(L))}let Tt=P[Be];Tt===void 0&&(Tt=new bi,Tt.layers.enable(Be),Tt.viewport=new $t,P[Be]=Tt),Tt.matrix.fromArray(rt.transform.matrix),Tt.matrix.decompose(Tt.position,Tt.quaternion,Tt.scale),Tt.projectionMatrix.fromArray(rt.projectionMatrix),Tt.projectionMatrixInverse.copy(Tt.projectionMatrix).invert(),Tt.viewport.set(Bt.x,Bt.y,Bt.width,Bt.height),Be===0&&(N.matrix.copy(Tt.matrix),N.matrix.decompose(N.position,N.quaternion,N.scale)),Ee===!0&&N.cameras.push(Tt)}const Le=s.enabledFeatures;if(Le&&Le.includes("depth-sensing")){const Be=g.getDepthInformation(Re[0]);Be&&Be.isValid&&Be.texture&&E.init(e,Be,s.renderState)}}for(let Re=0;Re<R.length;Re++){const Ee=w[Re],Le=R[Re];Ee!==null&&Le!==void 0&&Le.update(Ee,pe,f||c)}F&&F(ee,pe),pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:pe}),M=null}const ke=new d0;ke.setAnimationLoop(re),this.setAnimationLoop=function(ee){F=ee},this.dispose=function(){}}}const Ds=new $i,G1=new Kt;function W1(r,e){function t(S,x){S.matrixAutoUpdate===!0&&S.updateMatrix(),x.value.copy(S.matrix)}function n(S,x){x.color.getRGB(S.fogColor.value,Q_(r)),x.isFog?(S.fogNear.value=x.near,S.fogFar.value=x.far):x.isFogExp2&&(S.fogDensity.value=x.density)}function s(S,x,L,R,w){x.isMeshBasicMaterial||x.isMeshLambertMaterial?a(S,x):x.isMeshToonMaterial?(a(S,x),g(S,x)):x.isMeshPhongMaterial?(a(S,x),p(S,x)):x.isMeshStandardMaterial?(a(S,x),v(S,x),x.isMeshPhysicalMaterial&&y(S,x,w)):x.isMeshMatcapMaterial?(a(S,x),M(S,x)):x.isMeshDepthMaterial?a(S,x):x.isMeshDistanceMaterial?(a(S,x),E(S,x)):x.isMeshNormalMaterial?a(S,x):x.isLineBasicMaterial?(c(S,x),x.isLineDashedMaterial&&u(S,x)):x.isPointsMaterial?d(S,x,L,R):x.isSpriteMaterial?f(S,x):x.isShadowMaterial?(S.color.value.copy(x.color),S.opacity.value=x.opacity):x.isShaderMaterial&&(x.uniformsNeedUpdate=!1)}function a(S,x){S.opacity.value=x.opacity,x.color&&S.diffuse.value.copy(x.color),x.emissive&&S.emissive.value.copy(x.emissive).multiplyScalar(x.emissiveIntensity),x.map&&(S.map.value=x.map,t(x.map,S.mapTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.bumpMap&&(S.bumpMap.value=x.bumpMap,t(x.bumpMap,S.bumpMapTransform),S.bumpScale.value=x.bumpScale,x.side===Kn&&(S.bumpScale.value*=-1)),x.normalMap&&(S.normalMap.value=x.normalMap,t(x.normalMap,S.normalMapTransform),S.normalScale.value.copy(x.normalScale),x.side===Kn&&S.normalScale.value.negate()),x.displacementMap&&(S.displacementMap.value=x.displacementMap,t(x.displacementMap,S.displacementMapTransform),S.displacementScale.value=x.displacementScale,S.displacementBias.value=x.displacementBias),x.emissiveMap&&(S.emissiveMap.value=x.emissiveMap,t(x.emissiveMap,S.emissiveMapTransform)),x.specularMap&&(S.specularMap.value=x.specularMap,t(x.specularMap,S.specularMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest);const L=e.get(x),R=L.envMap,w=L.envMapRotation;R&&(S.envMap.value=R,Ds.copy(w),Ds.x*=-1,Ds.y*=-1,Ds.z*=-1,R.isCubeTexture&&R.isRenderTargetTexture===!1&&(Ds.y*=-1,Ds.z*=-1),S.envMapRotation.value.setFromMatrix4(G1.makeRotationFromEuler(Ds)),S.flipEnvMap.value=R.isCubeTexture&&R.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=x.reflectivity,S.ior.value=x.ior,S.refractionRatio.value=x.refractionRatio),x.lightMap&&(S.lightMap.value=x.lightMap,S.lightMapIntensity.value=x.lightMapIntensity,t(x.lightMap,S.lightMapTransform)),x.aoMap&&(S.aoMap.value=x.aoMap,S.aoMapIntensity.value=x.aoMapIntensity,t(x.aoMap,S.aoMapTransform))}function c(S,x){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,x.map&&(S.map.value=x.map,t(x.map,S.mapTransform))}function u(S,x){S.dashSize.value=x.dashSize,S.totalSize.value=x.dashSize+x.gapSize,S.scale.value=x.scale}function d(S,x,L,R){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,S.size.value=x.size*L,S.scale.value=R*.5,x.map&&(S.map.value=x.map,t(x.map,S.uvTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest)}function f(S,x){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,S.rotation.value=x.rotation,x.map&&(S.map.value=x.map,t(x.map,S.mapTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest)}function p(S,x){S.specular.value.copy(x.specular),S.shininess.value=Math.max(x.shininess,1e-4)}function g(S,x){x.gradientMap&&(S.gradientMap.value=x.gradientMap)}function v(S,x){S.metalness.value=x.metalness,x.metalnessMap&&(S.metalnessMap.value=x.metalnessMap,t(x.metalnessMap,S.metalnessMapTransform)),S.roughness.value=x.roughness,x.roughnessMap&&(S.roughnessMap.value=x.roughnessMap,t(x.roughnessMap,S.roughnessMapTransform)),x.envMap&&(S.envMapIntensity.value=x.envMapIntensity)}function y(S,x,L){S.ior.value=x.ior,x.sheen>0&&(S.sheenColor.value.copy(x.sheenColor).multiplyScalar(x.sheen),S.sheenRoughness.value=x.sheenRoughness,x.sheenColorMap&&(S.sheenColorMap.value=x.sheenColorMap,t(x.sheenColorMap,S.sheenColorMapTransform)),x.sheenRoughnessMap&&(S.sheenRoughnessMap.value=x.sheenRoughnessMap,t(x.sheenRoughnessMap,S.sheenRoughnessMapTransform))),x.clearcoat>0&&(S.clearcoat.value=x.clearcoat,S.clearcoatRoughness.value=x.clearcoatRoughness,x.clearcoatMap&&(S.clearcoatMap.value=x.clearcoatMap,t(x.clearcoatMap,S.clearcoatMapTransform)),x.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=x.clearcoatRoughnessMap,t(x.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),x.clearcoatNormalMap&&(S.clearcoatNormalMap.value=x.clearcoatNormalMap,t(x.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),x.side===Kn&&S.clearcoatNormalScale.value.negate())),x.dispersion>0&&(S.dispersion.value=x.dispersion),x.iridescence>0&&(S.iridescence.value=x.iridescence,S.iridescenceIOR.value=x.iridescenceIOR,S.iridescenceThicknessMinimum.value=x.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=x.iridescenceThicknessRange[1],x.iridescenceMap&&(S.iridescenceMap.value=x.iridescenceMap,t(x.iridescenceMap,S.iridescenceMapTransform)),x.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=x.iridescenceThicknessMap,t(x.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),x.transmission>0&&(S.transmission.value=x.transmission,S.transmissionSamplerMap.value=L.texture,S.transmissionSamplerSize.value.set(L.width,L.height),x.transmissionMap&&(S.transmissionMap.value=x.transmissionMap,t(x.transmissionMap,S.transmissionMapTransform)),S.thickness.value=x.thickness,x.thicknessMap&&(S.thicknessMap.value=x.thicknessMap,t(x.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=x.attenuationDistance,S.attenuationColor.value.copy(x.attenuationColor)),x.anisotropy>0&&(S.anisotropyVector.value.set(x.anisotropy*Math.cos(x.anisotropyRotation),x.anisotropy*Math.sin(x.anisotropyRotation)),x.anisotropyMap&&(S.anisotropyMap.value=x.anisotropyMap,t(x.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=x.specularIntensity,S.specularColor.value.copy(x.specularColor),x.specularColorMap&&(S.specularColorMap.value=x.specularColorMap,t(x.specularColorMap,S.specularColorMapTransform)),x.specularIntensityMap&&(S.specularIntensityMap.value=x.specularIntensityMap,t(x.specularIntensityMap,S.specularIntensityMapTransform))}function M(S,x){x.matcap&&(S.matcap.value=x.matcap)}function E(S,x){const L=e.get(x).light;S.referencePosition.value.setFromMatrixPosition(L.matrixWorld),S.nearDistance.value=L.shadow.camera.near,S.farDistance.value=L.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function X1(r,e,t,n){let s={},a={},c=[];const u=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function d(L,R){const w=R.program;n.uniformBlockBinding(L,w)}function f(L,R){let w=s[L.id];w===void 0&&(M(L),w=p(L),s[L.id]=w,L.addEventListener("dispose",S));const z=R.program;n.updateUBOMapping(L,z);const U=e.render.frame;a[L.id]!==U&&(v(L),a[L.id]=U)}function p(L){const R=g();L.__bindingPointIndex=R;const w=r.createBuffer(),z=L.__size,U=L.usage;return r.bindBuffer(r.UNIFORM_BUFFER,w),r.bufferData(r.UNIFORM_BUFFER,z,U),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,R,w),w}function g(){for(let L=0;L<u;L++)if(c.indexOf(L)===-1)return c.push(L),L;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function v(L){const R=s[L.id],w=L.uniforms,z=L.__cache;r.bindBuffer(r.UNIFORM_BUFFER,R);for(let U=0,O=w.length;U<O;U++){const Y=Array.isArray(w[U])?w[U]:[w[U]];for(let P=0,N=Y.length;P<N;P++){const I=Y[P];if(y(I,U,P,z)===!0){const se=I.__offset,K=Array.isArray(I.value)?I.value:[I.value];let fe=0;for(let ve=0;ve<K.length;ve++){const ue=K[ve],de=E(ue);typeof ue=="number"||typeof ue=="boolean"?(I.__data[0]=ue,r.bufferSubData(r.UNIFORM_BUFFER,se+fe,I.__data)):ue.isMatrix3?(I.__data[0]=ue.elements[0],I.__data[1]=ue.elements[1],I.__data[2]=ue.elements[2],I.__data[3]=0,I.__data[4]=ue.elements[3],I.__data[5]=ue.elements[4],I.__data[6]=ue.elements[5],I.__data[7]=0,I.__data[8]=ue.elements[6],I.__data[9]=ue.elements[7],I.__data[10]=ue.elements[8],I.__data[11]=0):(ue.toArray(I.__data,fe),fe+=de.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,se,I.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function y(L,R,w,z){const U=L.value,O=R+"_"+w;if(z[O]===void 0)return typeof U=="number"||typeof U=="boolean"?z[O]=U:z[O]=U.clone(),!0;{const Y=z[O];if(typeof U=="number"||typeof U=="boolean"){if(Y!==U)return z[O]=U,!0}else if(Y.equals(U)===!1)return Y.copy(U),!0}return!1}function M(L){const R=L.uniforms;let w=0;const z=16;for(let O=0,Y=R.length;O<Y;O++){const P=Array.isArray(R[O])?R[O]:[R[O]];for(let N=0,I=P.length;N<I;N++){const se=P[N],K=Array.isArray(se.value)?se.value:[se.value];for(let fe=0,ve=K.length;fe<ve;fe++){const ue=K[fe],de=E(ue),V=w%z,he=V%de.boundary,ae=V+he;w+=he,ae!==0&&z-ae<de.storage&&(w+=z-ae),se.__data=new Float32Array(de.storage/Float32Array.BYTES_PER_ELEMENT),se.__offset=w,w+=de.storage}}}const U=w%z;return U>0&&(w+=z-U),L.__size=w,L.__cache={},this}function E(L){const R={boundary:0,storage:0};return typeof L=="number"||typeof L=="boolean"?(R.boundary=4,R.storage=4):L.isVector2?(R.boundary=8,R.storage=8):L.isVector3||L.isColor?(R.boundary=16,R.storage=12):L.isVector4?(R.boundary=16,R.storage=16):L.isMatrix3?(R.boundary=48,R.storage=48):L.isMatrix4?(R.boundary=64,R.storage=64):L.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",L),R}function S(L){const R=L.target;R.removeEventListener("dispose",S);const w=c.indexOf(R.__bindingPointIndex);c.splice(w,1),r.deleteBuffer(s[R.id]),delete s[R.id],delete a[R.id]}function x(){for(const L in s)r.deleteBuffer(s[L]);c=[],s={},a={}}return{bind:d,update:f,dispose:x}}class Y1{constructor(e={}){const{canvas:t=$S(),context:n=null,depth:s=!0,stencil:a=!1,alpha:c=!1,antialias:u=!1,premultipliedAlpha:d=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:g=!1,reverseDepthBuffer:v=!1}=e;this.isWebGLRenderer=!0;let y;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");y=n.getContextAttributes().alpha}else y=c;const M=new Uint32Array(4),E=new Int32Array(4);let S=null,x=null;const L=[],R=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Pi,this.toneMapping=qi,this.toneMappingExposure=1;const w=this;let z=!1,U=0,O=0,Y=null,P=-1,N=null;const I=new $t,se=new $t;let K=null;const fe=new st(0);let ve=0,ue=t.width,de=t.height,V=1,he=null,ae=null;const F=new $t(0,0,ue,de),re=new $t(0,0,ue,de);let ke=!1;const ee=new n0;let pe=!1,Re=!1;const Ee=new Kt,Le=new Kt,Be=new W,rt=new $t,Bt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Tt=!1;function Gt(){return Y===null?V:1}let B=n;function Bn(C,q){return t.getContext(C,q)}try{const C={alpha:!0,depth:s,stencil:a,antialias:u,premultipliedAlpha:d,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:g};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${np}`),t.addEventListener("webglcontextlost",ge,!1),t.addEventListener("webglcontextrestored",Oe,!1),t.addEventListener("webglcontextcreationerror",Ue,!1),B===null){const q="webgl2";if(B=Bn(q,C),B===null)throw Bn(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Mt,xt,Je,zt,Ke,b,A,J,_e,ye,me,je,Pe,Ve,_t,Ae,We,tt,ot,Xe,yt,ut,Ot,X;function be(){Mt=new tA(B),Mt.init(),ut=new F1(B,Mt),xt=new $w(B,Mt,e,ut),Je=new U1(B,Mt),xt.reverseDepthBuffer&&v&&Je.buffers.depth.setReversed(!0),zt=new rA(B),Ke=new M1,b=new O1(B,Mt,Je,Ke,xt,ut,zt),A=new Zw(w),J=new eA(w),_e=new hE(B),Ot=new qw(B,_e),ye=new nA(B,_e,zt,Ot),me=new oA(B,ye,_e,zt),ot=new sA(B,xt,b),Ae=new Kw(Ke),je=new S1(w,A,J,Mt,xt,Ot,Ae),Pe=new W1(w,Ke),Ve=new T1,_t=new L1(Mt),tt=new Yw(w,A,J,Je,me,y,d),We=new I1(w,me,xt),X=new X1(B,zt,xt,Je),Xe=new jw(B,Mt,zt),yt=new iA(B,Mt,zt),zt.programs=je.programs,w.capabilities=xt,w.extensions=Mt,w.properties=Ke,w.renderLists=Ve,w.shadowMap=We,w.state=Je,w.info=zt}be();const oe=new H1(w,B);this.xr=oe,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const C=Mt.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Mt.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(C){C!==void 0&&(V=C,this.setSize(ue,de,!1))},this.getSize=function(C){return C.set(ue,de)},this.setSize=function(C,q,ne=!0){if(oe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ue=C,de=q,t.width=Math.floor(C*V),t.height=Math.floor(q*V),ne===!0&&(t.style.width=C+"px",t.style.height=q+"px"),this.setViewport(0,0,C,q)},this.getDrawingBufferSize=function(C){return C.set(ue*V,de*V).floor()},this.setDrawingBufferSize=function(C,q,ne){ue=C,de=q,V=ne,t.width=Math.floor(C*ne),t.height=Math.floor(q*ne),this.setViewport(0,0,C,q)},this.getCurrentViewport=function(C){return C.copy(I)},this.getViewport=function(C){return C.copy(F)},this.setViewport=function(C,q,ne,ie){C.isVector4?F.set(C.x,C.y,C.z,C.w):F.set(C,q,ne,ie),Je.viewport(I.copy(F).multiplyScalar(V).round())},this.getScissor=function(C){return C.copy(re)},this.setScissor=function(C,q,ne,ie){C.isVector4?re.set(C.x,C.y,C.z,C.w):re.set(C,q,ne,ie),Je.scissor(se.copy(re).multiplyScalar(V).round())},this.getScissorTest=function(){return ke},this.setScissorTest=function(C){Je.setScissorTest(ke=C)},this.setOpaqueSort=function(C){he=C},this.setTransparentSort=function(C){ae=C},this.getClearColor=function(C){return C.copy(tt.getClearColor())},this.setClearColor=function(){tt.setClearColor.apply(tt,arguments)},this.getClearAlpha=function(){return tt.getClearAlpha()},this.setClearAlpha=function(){tt.setClearAlpha.apply(tt,arguments)},this.clear=function(C=!0,q=!0,ne=!0){let ie=0;if(C){let H=!1;if(Y!==null){const we=Y.texture.format;H=we===lp||we===ap||we===op}if(H){const we=Y.texture.type,Ie=we===Cr||we===cs||we===il||we===jo||we===rp||we===sp,ze=tt.getClearColor(),He=tt.getClearAlpha(),at=ze.r,lt=ze.g,Ze=ze.b;Ie?(M[0]=at,M[1]=lt,M[2]=Ze,M[3]=He,B.clearBufferuiv(B.COLOR,0,M)):(E[0]=at,E[1]=lt,E[2]=Ze,E[3]=He,B.clearBufferiv(B.COLOR,0,E))}else ie|=B.COLOR_BUFFER_BIT}q&&(ie|=B.DEPTH_BUFFER_BIT),ne&&(ie|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(ie)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ge,!1),t.removeEventListener("webglcontextrestored",Oe,!1),t.removeEventListener("webglcontextcreationerror",Ue,!1),tt.dispose(),Ve.dispose(),_t.dispose(),Ke.dispose(),A.dispose(),J.dispose(),me.dispose(),Ot.dispose(),X.dispose(),je.dispose(),oe.dispose(),oe.removeEventListener("sessionstart",$s),oe.removeEventListener("sessionend",Lr),cr.stop()};function ge(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),z=!0}function Oe(){console.log("THREE.WebGLRenderer: Context Restored."),z=!1;const C=zt.autoReset,q=We.enabled,ne=We.autoUpdate,ie=We.needsUpdate,H=We.type;be(),zt.autoReset=C,We.enabled=q,We.autoUpdate=ne,We.needsUpdate=ie,We.type=H}function Ue(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function ht(C){const q=C.target;q.removeEventListener("dispose",ht),Xt(q)}function Xt(C){fn(C),Ke.remove(C)}function fn(C){const q=Ke.get(C).programs;q!==void 0&&(q.forEach(function(ne){je.releaseProgram(ne)}),C.isShaderMaterial&&je.releaseShaderCache(C))}this.renderBufferDirect=function(C,q,ne,ie,H,we){q===null&&(q=Bt);const Ie=H.isMesh&&H.matrixWorld.determinant()<0,ze=El(C,q,ne,ie,H);Je.setMaterial(ie,Ie);let He=ne.index,at=1;if(ie.wireframe===!0){if(He=ye.getWireframeAttribute(ne),He===void 0)return;at=2}const lt=ne.drawRange,Ze=ne.attributes.position;let dt=lt.start*at,Lt=(lt.start+lt.count)*at;we!==null&&(dt=Math.max(dt,we.start*at),Lt=Math.min(Lt,(we.start+we.count)*at)),He!==null?(dt=Math.max(dt,0),Lt=Math.min(Lt,He.count)):Ze!=null&&(dt=Math.max(dt,0),Lt=Math.min(Lt,Ze.count));const Pt=Lt-dt;if(Pt<0||Pt===1/0)return;Ot.setup(H,ie,ze,ne,He);let Zt,At=Xe;if(He!==null&&(Zt=_e.get(He),At=yt,At.setIndex(Zt)),H.isMesh)ie.wireframe===!0?(Je.setLineWidth(ie.wireframeLinewidth*Gt()),At.setMode(B.LINES)):At.setMode(B.TRIANGLES);else if(H.isLine){let et=ie.linewidth;et===void 0&&(et=1),Je.setLineWidth(et*Gt()),H.isLineSegments?At.setMode(B.LINES):H.isLineLoop?At.setMode(B.LINE_LOOP):At.setMode(B.LINE_STRIP)}else H.isPoints?At.setMode(B.POINTS):H.isSprite&&At.setMode(B.TRIANGLES);if(H.isBatchedMesh)if(H._multiDrawInstances!==null)At.renderMultiDrawInstances(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount,H._multiDrawInstances);else if(Mt.get("WEBGL_multi_draw"))At.renderMultiDraw(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount);else{const et=H._multiDrawStarts,rn=H._multiDrawCounts,wt=H._multiDrawCount,Rn=He?_e.get(He).bytesPerElement:1,Di=Ke.get(ie).currentProgram.getUniforms();for(let Hn=0;Hn<wt;Hn++)Di.setValue(B,"_gl_DrawID",Hn),At.render(et[Hn]/Rn,rn[Hn])}else if(H.isInstancedMesh)At.renderInstances(dt,Pt,H.count);else if(ne.isInstancedBufferGeometry){const et=ne._maxInstanceCount!==void 0?ne._maxInstanceCount:1/0,rn=Math.min(ne.instanceCount,et);At.renderInstances(dt,Pt,rn)}else At.render(dt,Pt)};function Ct(C,q,ne){C.transparent===!0&&C.side===$n&&C.forceSinglePass===!1?(C.side=Kn,C.needsUpdate=!0,Ks(C,q,ne),C.side=ls,C.needsUpdate=!0,Ks(C,q,ne),C.side=$n):Ks(C,q,ne)}this.compile=function(C,q,ne=null){ne===null&&(ne=C),x=_t.get(ne),x.init(q),R.push(x),ne.traverseVisible(function(H){H.isLight&&H.layers.test(q.layers)&&(x.pushLight(H),H.castShadow&&x.pushShadow(H))}),C!==ne&&C.traverseVisible(function(H){H.isLight&&H.layers.test(q.layers)&&(x.pushLight(H),H.castShadow&&x.pushShadow(H))}),x.setupLights();const ie=new Set;return C.traverse(function(H){if(!(H.isMesh||H.isPoints||H.isLine||H.isSprite))return;const we=H.material;if(we)if(Array.isArray(we))for(let Ie=0;Ie<we.length;Ie++){const ze=we[Ie];Ct(ze,ne,H),ie.add(ze)}else Ct(we,ne,H),ie.add(we)}),R.pop(),x=null,ie},this.compileAsync=function(C,q,ne=null){const ie=this.compile(C,q,ne);return new Promise(H=>{function we(){if(ie.forEach(function(Ie){Ke.get(Ie).currentProgram.isReady()&&ie.delete(Ie)}),ie.size===0){H(C);return}setTimeout(we,10)}Mt.get("KHR_parallel_shader_compile")!==null?we():setTimeout(we,10)})};let Qn=null;function Vn(C){Qn&&Qn(C)}function $s(){cr.stop()}function Lr(){cr.start()}const cr=new d0;cr.setAnimationLoop(Vn),typeof self<"u"&&cr.setContext(self),this.setAnimationLoop=function(C){Qn=C,oe.setAnimationLoop(C),C===null?cr.stop():cr.start()},oe.addEventListener("sessionstart",$s),oe.addEventListener("sessionend",Lr),this.render=function(C,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(z===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),oe.enabled===!0&&oe.isPresenting===!0&&(oe.cameraAutoUpdate===!0&&oe.updateCamera(q),q=oe.getCamera()),C.isScene===!0&&C.onBeforeRender(w,C,q,Y),x=_t.get(C,R.length),x.init(q),R.push(x),Le.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),ee.setFromProjectionMatrix(Le),Re=this.localClippingEnabled,pe=Ae.init(this.clippingPlanes,Re),S=Ve.get(C,L.length),S.init(),L.push(S),oe.enabled===!0&&oe.isPresenting===!0){const we=w.xr.getDepthSensingMesh();we!==null&&ur(we,q,-1/0,w.sortObjects)}ur(C,q,0,w.sortObjects),S.finish(),w.sortObjects===!0&&S.sort(he,ae),Tt=oe.enabled===!1||oe.isPresenting===!1||oe.hasDepthSensing()===!1,Tt&&tt.addToRenderList(S,C),this.info.render.frame++,pe===!0&&Ae.beginShadows();const ne=x.state.shadowsArray;We.render(ne,C,q),pe===!0&&Ae.endShadows(),this.info.autoReset===!0&&this.info.reset();const ie=S.opaque,H=S.transmissive;if(x.setupLights(),q.isArrayCamera){const we=q.cameras;if(H.length>0)for(let Ie=0,ze=we.length;Ie<ze;Ie++){const He=we[Ie];fs(ie,H,C,He)}Tt&&tt.render(C);for(let Ie=0,ze=we.length;Ie<ze;Ie++){const He=we[Ie];ds(S,C,He,He.viewport)}}else H.length>0&&fs(ie,H,C,q),Tt&&tt.render(C),ds(S,C,q);Y!==null&&(b.updateMultisampleRenderTarget(Y),b.updateRenderTargetMipmap(Y)),C.isScene===!0&&C.onAfterRender(w,C,q),Ot.resetDefaultState(),P=-1,N=null,R.pop(),R.length>0?(x=R[R.length-1],pe===!0&&Ae.setGlobalState(w.clippingPlanes,x.state.camera)):x=null,L.pop(),L.length>0?S=L[L.length-1]:S=null};function ur(C,q,ne,ie){if(C.visible===!1)return;if(C.layers.test(q.layers)){if(C.isGroup)ne=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(q);else if(C.isLight)x.pushLight(C),C.castShadow&&x.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||ee.intersectsSprite(C)){ie&&rt.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Le);const Ie=me.update(C),ze=C.material;ze.visible&&S.push(C,Ie,ze,ne,rt.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||ee.intersectsObject(C))){const Ie=me.update(C),ze=C.material;if(ie&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),rt.copy(C.boundingSphere.center)):(Ie.boundingSphere===null&&Ie.computeBoundingSphere(),rt.copy(Ie.boundingSphere.center)),rt.applyMatrix4(C.matrixWorld).applyMatrix4(Le)),Array.isArray(ze)){const He=Ie.groups;for(let at=0,lt=He.length;at<lt;at++){const Ze=He[at],dt=ze[Ze.materialIndex];dt&&dt.visible&&S.push(C,Ie,dt,ne,rt.z,Ze)}}else ze.visible&&S.push(C,Ie,ze,ne,rt.z,null)}}const we=C.children;for(let Ie=0,ze=we.length;Ie<ze;Ie++)ur(we[Ie],q,ne,ie)}function ds(C,q,ne,ie){const H=C.opaque,we=C.transmissive,Ie=C.transparent;x.setupLightsView(ne),pe===!0&&Ae.setGlobalState(w.clippingPlanes,ne),ie&&Je.viewport(I.copy(ie)),H.length>0&&Pr(H,q,ne),we.length>0&&Pr(we,q,ne),Ie.length>0&&Pr(Ie,q,ne),Je.buffers.depth.setTest(!0),Je.buffers.depth.setMask(!0),Je.buffers.color.setMask(!0),Je.setPolygonOffset(!1)}function fs(C,q,ne,ie){if((ne.isScene===!0?ne.overrideMaterial:null)!==null)return;x.state.transmissionRenderTarget[ie.id]===void 0&&(x.state.transmissionRenderTarget[ie.id]=new Xs(1,1,{generateMipmaps:!0,type:Mt.has("EXT_color_buffer_half_float")||Mt.has("EXT_color_buffer_float")?ea:Cr,minFilter:ss,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:gt.workingColorSpace}));const we=x.state.transmissionRenderTarget[ie.id],Ie=ie.viewport||I;we.setSize(Ie.z,Ie.w);const ze=w.getRenderTarget();w.setRenderTarget(we),w.getClearColor(fe),ve=w.getClearAlpha(),ve<1&&w.setClearColor(16777215,.5),w.clear(),Tt&&tt.render(ne);const He=w.toneMapping;w.toneMapping=qi;const at=ie.viewport;if(ie.viewport!==void 0&&(ie.viewport=void 0),x.setupLightsView(ie),pe===!0&&Ae.setGlobalState(w.clippingPlanes,ie),Pr(C,ne,ie),b.updateMultisampleRenderTarget(we),b.updateRenderTargetMipmap(we),Mt.has("WEBGL_multisampled_render_to_texture")===!1){let lt=!1;for(let Ze=0,dt=q.length;Ze<dt;Ze++){const Lt=q[Ze],Pt=Lt.object,Zt=Lt.geometry,At=Lt.material,et=Lt.group;if(At.side===$n&&Pt.layers.test(ie.layers)){const rn=At.side;At.side=Kn,At.needsUpdate=!0,Sl(Pt,ne,ie,Zt,At,et),At.side=rn,At.needsUpdate=!0,lt=!0}}lt===!0&&(b.updateMultisampleRenderTarget(we),b.updateRenderTargetMipmap(we))}w.setRenderTarget(ze),w.setClearColor(fe,ve),at!==void 0&&(ie.viewport=at),w.toneMapping=He}function Pr(C,q,ne){const ie=q.isScene===!0?q.overrideMaterial:null;for(let H=0,we=C.length;H<we;H++){const Ie=C[H],ze=Ie.object,He=Ie.geometry,at=ie===null?Ie.material:ie,lt=Ie.group;ze.layers.test(ne.layers)&&Sl(ze,q,ne,He,at,lt)}}function Sl(C,q,ne,ie,H,we){C.onBeforeRender(w,q,ne,ie,H,we),C.modelViewMatrix.multiplyMatrices(ne.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),H.onBeforeRender(w,q,ne,ie,C,we),H.transparent===!0&&H.side===$n&&H.forceSinglePass===!1?(H.side=Kn,H.needsUpdate=!0,w.renderBufferDirect(ne,q,ie,H,C,we),H.side=ls,H.needsUpdate=!0,w.renderBufferDirect(ne,q,ie,H,C,we),H.side=$n):w.renderBufferDirect(ne,q,ie,H,C,we),C.onAfterRender(w,q,ne,ie,H,we)}function Ks(C,q,ne){q.isScene!==!0&&(q=Bt);const ie=Ke.get(C),H=x.state.lights,we=x.state.shadowsArray,Ie=H.state.version,ze=je.getParameters(C,H.state,we,q,ne),He=je.getProgramCacheKey(ze);let at=ie.programs;ie.environment=C.isMeshStandardMaterial?q.environment:null,ie.fog=q.fog,ie.envMap=(C.isMeshStandardMaterial?J:A).get(C.envMap||ie.environment),ie.envMapRotation=ie.environment!==null&&C.envMap===null?q.environmentRotation:C.envMapRotation,at===void 0&&(C.addEventListener("dispose",ht),at=new Map,ie.programs=at);let lt=at.get(He);if(lt!==void 0){if(ie.currentProgram===lt&&ie.lightsStateVersion===Ie)return Ki(C,ze),lt}else ze.uniforms=je.getUniforms(C),C.onBeforeCompile(ze,w),lt=je.acquireProgram(ze,He),at.set(He,lt),ie.uniforms=ze.uniforms;const Ze=ie.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(Ze.clippingPlanes=Ae.uniform),Ki(C,ze),ie.needsLights=Ou(C),ie.lightsStateVersion=Ie,ie.needsLights&&(Ze.ambientLightColor.value=H.state.ambient,Ze.lightProbe.value=H.state.probe,Ze.directionalLights.value=H.state.directional,Ze.directionalLightShadows.value=H.state.directionalShadow,Ze.spotLights.value=H.state.spot,Ze.spotLightShadows.value=H.state.spotShadow,Ze.rectAreaLights.value=H.state.rectArea,Ze.ltc_1.value=H.state.rectAreaLTC1,Ze.ltc_2.value=H.state.rectAreaLTC2,Ze.pointLights.value=H.state.point,Ze.pointLightShadows.value=H.state.pointShadow,Ze.hemisphereLights.value=H.state.hemi,Ze.directionalShadowMap.value=H.state.directionalShadowMap,Ze.directionalShadowMatrix.value=H.state.directionalShadowMatrix,Ze.spotShadowMap.value=H.state.spotShadowMap,Ze.spotLightMatrix.value=H.state.spotLightMatrix,Ze.spotLightMap.value=H.state.spotLightMap,Ze.pointShadowMap.value=H.state.pointShadowMap,Ze.pointShadowMatrix.value=H.state.pointShadowMatrix),ie.currentProgram=lt,ie.uniformsList=null,lt}function Ml(C){if(C.uniformsList===null){const q=C.currentProgram.getUniforms();C.uniformsList=lu.seqWithValue(q.seq,C.uniforms)}return C.uniformsList}function Ki(C,q){const ne=Ke.get(C);ne.outputColorSpace=q.outputColorSpace,ne.batching=q.batching,ne.batchingColor=q.batchingColor,ne.instancing=q.instancing,ne.instancingColor=q.instancingColor,ne.instancingMorph=q.instancingMorph,ne.skinning=q.skinning,ne.morphTargets=q.morphTargets,ne.morphNormals=q.morphNormals,ne.morphColors=q.morphColors,ne.morphTargetsCount=q.morphTargetsCount,ne.numClippingPlanes=q.numClippingPlanes,ne.numIntersection=q.numClipIntersection,ne.vertexAlphas=q.vertexAlphas,ne.vertexTangents=q.vertexTangents,ne.toneMapping=q.toneMapping}function El(C,q,ne,ie,H){q.isScene!==!0&&(q=Bt),b.resetTextureUnits();const we=q.fog,Ie=ie.isMeshStandardMaterial?q.environment:null,ze=Y===null?w.outputColorSpace:Y.isXRRenderTarget===!0?Y.texture.colorSpace:Ko,He=(ie.isMeshStandardMaterial?J:A).get(ie.envMap||Ie),at=ie.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,lt=!!ne.attributes.tangent&&(!!ie.normalMap||ie.anisotropy>0),Ze=!!ne.morphAttributes.position,dt=!!ne.morphAttributes.normal,Lt=!!ne.morphAttributes.color;let Pt=qi;ie.toneMapped&&(Y===null||Y.isXRRenderTarget===!0)&&(Pt=w.toneMapping);const Zt=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,At=Zt!==void 0?Zt.length:0,et=Ke.get(ie),rn=x.state.lights;if(pe===!0&&(Re===!0||C!==N)){const on=C===N&&ie.id===P;Ae.setState(ie,C,on)}let wt=!1;ie.version===et.__version?(et.needsLights&&et.lightsStateVersion!==rn.state.version||et.outputColorSpace!==ze||H.isBatchedMesh&&et.batching===!1||!H.isBatchedMesh&&et.batching===!0||H.isBatchedMesh&&et.batchingColor===!0&&H.colorTexture===null||H.isBatchedMesh&&et.batchingColor===!1&&H.colorTexture!==null||H.isInstancedMesh&&et.instancing===!1||!H.isInstancedMesh&&et.instancing===!0||H.isSkinnedMesh&&et.skinning===!1||!H.isSkinnedMesh&&et.skinning===!0||H.isInstancedMesh&&et.instancingColor===!0&&H.instanceColor===null||H.isInstancedMesh&&et.instancingColor===!1&&H.instanceColor!==null||H.isInstancedMesh&&et.instancingMorph===!0&&H.morphTexture===null||H.isInstancedMesh&&et.instancingMorph===!1&&H.morphTexture!==null||et.envMap!==He||ie.fog===!0&&et.fog!==we||et.numClippingPlanes!==void 0&&(et.numClippingPlanes!==Ae.numPlanes||et.numIntersection!==Ae.numIntersection)||et.vertexAlphas!==at||et.vertexTangents!==lt||et.morphTargets!==Ze||et.morphNormals!==dt||et.morphColors!==Lt||et.toneMapping!==Pt||et.morphTargetsCount!==At)&&(wt=!0):(wt=!0,et.__version=ie.version);let Rn=et.currentProgram;wt===!0&&(Rn=Ks(ie,q,H));let Di=!1,Hn=!1,ps=!1;const Vt=Rn.getUniforms(),Gn=et.uniforms;if(Je.useProgram(Rn.program)&&(Di=!0,Hn=!0,ps=!0),ie.id!==P&&(P=ie.id,Hn=!0),Di||N!==C){Je.buffers.depth.getReversed()?(Ee.copy(C.projectionMatrix),ZS(Ee),JS(Ee),Vt.setValue(B,"projectionMatrix",Ee)):Vt.setValue(B,"projectionMatrix",C.projectionMatrix),Vt.setValue(B,"viewMatrix",C.matrixWorldInverse);const In=Vt.map.cameraPosition;In!==void 0&&In.setValue(B,Be.setFromMatrixPosition(C.matrixWorld)),xt.logarithmicDepthBuffer&&Vt.setValue(B,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),(ie.isMeshPhongMaterial||ie.isMeshToonMaterial||ie.isMeshLambertMaterial||ie.isMeshBasicMaterial||ie.isMeshStandardMaterial||ie.isShaderMaterial)&&Vt.setValue(B,"isOrthographic",C.isOrthographicCamera===!0),N!==C&&(N=C,Hn=!0,ps=!0)}if(H.isSkinnedMesh){Vt.setOptional(B,H,"bindMatrix"),Vt.setOptional(B,H,"bindMatrixInverse");const on=H.skeleton;on&&(on.boneTexture===null&&on.computeBoneTexture(),Vt.setValue(B,"boneTexture",on.boneTexture,b))}H.isBatchedMesh&&(Vt.setOptional(B,H,"batchingTexture"),Vt.setValue(B,"batchingTexture",H._matricesTexture,b),Vt.setOptional(B,H,"batchingIdTexture"),Vt.setValue(B,"batchingIdTexture",H._indirectTexture,b),Vt.setOptional(B,H,"batchingColorTexture"),H._colorsTexture!==null&&Vt.setValue(B,"batchingColorTexture",H._colorsTexture,b));const bn=ne.morphAttributes;if((bn.position!==void 0||bn.normal!==void 0||bn.color!==void 0)&&ot.update(H,ne,Rn),(Hn||et.receiveShadow!==H.receiveShadow)&&(et.receiveShadow=H.receiveShadow,Vt.setValue(B,"receiveShadow",H.receiveShadow)),ie.isMeshGouraudMaterial&&ie.envMap!==null&&(Gn.envMap.value=He,Gn.flipEnvMap.value=He.isCubeTexture&&He.isRenderTargetTexture===!1?-1:1),ie.isMeshStandardMaterial&&ie.envMap===null&&q.environment!==null&&(Gn.envMapIntensity.value=q.environmentIntensity),Hn&&(Vt.setValue(B,"toneMappingExposure",w.toneMappingExposure),et.needsLights&&Tl(Gn,ps),we&&ie.fog===!0&&Pe.refreshFogUniforms(Gn,we),Pe.refreshMaterialUniforms(Gn,ie,V,de,x.state.transmissionRenderTarget[C.id]),lu.upload(B,Ml(et),Gn,b)),ie.isShaderMaterial&&ie.uniformsNeedUpdate===!0&&(lu.upload(B,Ml(et),Gn,b),ie.uniformsNeedUpdate=!1),ie.isSpriteMaterial&&Vt.setValue(B,"center",H.center),Vt.setValue(B,"modelViewMatrix",H.modelViewMatrix),Vt.setValue(B,"normalMatrix",H.normalMatrix),Vt.setValue(B,"modelMatrix",H.matrixWorld),ie.isShaderMaterial||ie.isRawShaderMaterial){const on=ie.uniformsGroups;for(let In=0,ms=on.length;In<ms;In++){const Et=on[In];X.update(Et,Rn),X.bind(Et,Rn)}}return Rn}function Tl(C,q){C.ambientLightColor.needsUpdate=q,C.lightProbe.needsUpdate=q,C.directionalLights.needsUpdate=q,C.directionalLightShadows.needsUpdate=q,C.pointLights.needsUpdate=q,C.pointLightShadows.needsUpdate=q,C.spotLights.needsUpdate=q,C.spotLightShadows.needsUpdate=q,C.rectAreaLights.needsUpdate=q,C.hemisphereLights.needsUpdate=q}function Ou(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return O},this.getRenderTarget=function(){return Y},this.setRenderTargetTextures=function(C,q,ne){Ke.get(C.texture).__webglTexture=q,Ke.get(C.depthTexture).__webglTexture=ne;const ie=Ke.get(C);ie.__hasExternalTextures=!0,ie.__autoAllocateDepthBuffer=ne===void 0,ie.__autoAllocateDepthBuffer||Mt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ie.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(C,q){const ne=Ke.get(C);ne.__webglFramebuffer=q,ne.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(C,q=0,ne=0){Y=C,U=q,O=ne;let ie=!0,H=null,we=!1,Ie=!1;if(C){const He=Ke.get(C);if(He.__useDefaultFramebuffer!==void 0)Je.bindFramebuffer(B.FRAMEBUFFER,null),ie=!1;else if(He.__webglFramebuffer===void 0)b.setupRenderTarget(C);else if(He.__hasExternalTextures)b.rebindTextures(C,Ke.get(C.texture).__webglTexture,Ke.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const Ze=C.depthTexture;if(He.__boundDepthTexture!==Ze){if(Ze!==null&&Ke.has(Ze)&&(C.width!==Ze.image.width||C.height!==Ze.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");b.setupDepthRenderbuffer(C)}}const at=C.texture;(at.isData3DTexture||at.isDataArrayTexture||at.isCompressedArrayTexture)&&(Ie=!0);const lt=Ke.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(lt[q])?H=lt[q][ne]:H=lt[q],we=!0):C.samples>0&&b.useMultisampledRTT(C)===!1?H=Ke.get(C).__webglMultisampledFramebuffer:Array.isArray(lt)?H=lt[ne]:H=lt,I.copy(C.viewport),se.copy(C.scissor),K=C.scissorTest}else I.copy(F).multiplyScalar(V).floor(),se.copy(re).multiplyScalar(V).floor(),K=ke;if(Je.bindFramebuffer(B.FRAMEBUFFER,H)&&ie&&Je.drawBuffers(C,H),Je.viewport(I),Je.scissor(se),Je.setScissorTest(K),we){const He=Ke.get(C.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+q,He.__webglTexture,ne)}else if(Ie){const He=Ke.get(C.texture),at=q||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,He.__webglTexture,ne||0,at)}P=-1},this.readRenderTargetPixels=function(C,q,ne,ie,H,we,Ie){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ze=Ke.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ie!==void 0&&(ze=ze[Ie]),ze){Je.bindFramebuffer(B.FRAMEBUFFER,ze);try{const He=C.texture,at=He.format,lt=He.type;if(!xt.textureFormatReadable(at)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!xt.textureTypeReadable(lt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=C.width-ie&&ne>=0&&ne<=C.height-H&&B.readPixels(q,ne,ie,H,ut.convert(at),ut.convert(lt),we)}finally{const He=Y!==null?Ke.get(Y).__webglFramebuffer:null;Je.bindFramebuffer(B.FRAMEBUFFER,He)}}},this.readRenderTargetPixelsAsync=async function(C,q,ne,ie,H,we,Ie){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ze=Ke.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ie!==void 0&&(ze=ze[Ie]),ze){const He=C.texture,at=He.format,lt=He.type;if(!xt.textureFormatReadable(at))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!xt.textureTypeReadable(lt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(q>=0&&q<=C.width-ie&&ne>=0&&ne<=C.height-H){Je.bindFramebuffer(B.FRAMEBUFFER,ze);const Ze=B.createBuffer();B.bindBuffer(B.PIXEL_PACK_BUFFER,Ze),B.bufferData(B.PIXEL_PACK_BUFFER,we.byteLength,B.STREAM_READ),B.readPixels(q,ne,ie,H,ut.convert(at),ut.convert(lt),0);const dt=Y!==null?Ke.get(Y).__webglFramebuffer:null;Je.bindFramebuffer(B.FRAMEBUFFER,dt);const Lt=B.fenceSync(B.SYNC_GPU_COMMANDS_COMPLETE,0);return B.flush(),await KS(B,Lt,4),B.bindBuffer(B.PIXEL_PACK_BUFFER,Ze),B.getBufferSubData(B.PIXEL_PACK_BUFFER,0,we),B.deleteBuffer(Ze),B.deleteSync(Lt),we}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(C,q=null,ne=0){C.isTexture!==!0&&(Uo("WebGLRenderer: copyFramebufferToTexture function signature has changed."),q=arguments[0]||null,C=arguments[1]);const ie=Math.pow(2,-ne),H=Math.floor(C.image.width*ie),we=Math.floor(C.image.height*ie),Ie=q!==null?q.x:0,ze=q!==null?q.y:0;b.setTexture2D(C,0),B.copyTexSubImage2D(B.TEXTURE_2D,ne,0,0,Ie,ze,H,we),Je.unbindTexture()};const wl=B.createFramebuffer(),Al=B.createFramebuffer();this.copyTextureToTexture=function(C,q,ne=null,ie=null,H=0,we=null){C.isTexture!==!0&&(Uo("WebGLRenderer: copyTextureToTexture function signature has changed."),ie=arguments[0]||null,C=arguments[1],q=arguments[2],we=arguments[3]||0,ne=null),we===null&&(H!==0?(Uo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),we=H,H=0):we=0);let Ie,ze,He,at,lt,Ze,dt,Lt,Pt;const Zt=C.isCompressedTexture?C.mipmaps[we]:C.image;if(ne!==null)Ie=ne.max.x-ne.min.x,ze=ne.max.y-ne.min.y,He=ne.isBox3?ne.max.z-ne.min.z:1,at=ne.min.x,lt=ne.min.y,Ze=ne.isBox3?ne.min.z:0;else{const bn=Math.pow(2,-H);Ie=Math.floor(Zt.width*bn),ze=Math.floor(Zt.height*bn),C.isDataArrayTexture?He=Zt.depth:C.isData3DTexture?He=Math.floor(Zt.depth*bn):He=1,at=0,lt=0,Ze=0}ie!==null?(dt=ie.x,Lt=ie.y,Pt=ie.z):(dt=0,Lt=0,Pt=0);const At=ut.convert(q.format),et=ut.convert(q.type);let rn;q.isData3DTexture?(b.setTexture3D(q,0),rn=B.TEXTURE_3D):q.isDataArrayTexture||q.isCompressedArrayTexture?(b.setTexture2DArray(q,0),rn=B.TEXTURE_2D_ARRAY):(b.setTexture2D(q,0),rn=B.TEXTURE_2D),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,q.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,q.unpackAlignment);const wt=B.getParameter(B.UNPACK_ROW_LENGTH),Rn=B.getParameter(B.UNPACK_IMAGE_HEIGHT),Di=B.getParameter(B.UNPACK_SKIP_PIXELS),Hn=B.getParameter(B.UNPACK_SKIP_ROWS),ps=B.getParameter(B.UNPACK_SKIP_IMAGES);B.pixelStorei(B.UNPACK_ROW_LENGTH,Zt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Zt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,at),B.pixelStorei(B.UNPACK_SKIP_ROWS,lt),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Ze);const Vt=C.isDataArrayTexture||C.isData3DTexture,Gn=q.isDataArrayTexture||q.isData3DTexture;if(C.isDepthTexture){const bn=Ke.get(C),on=Ke.get(q),In=Ke.get(bn.__renderTarget),ms=Ke.get(on.__renderTarget);Je.bindFramebuffer(B.READ_FRAMEBUFFER,In.__webglFramebuffer),Je.bindFramebuffer(B.DRAW_FRAMEBUFFER,ms.__webglFramebuffer);for(let Et=0;Et<He;Et++)Vt&&(B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,Ke.get(C).__webglTexture,H,Ze+Et),B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,Ke.get(q).__webglTexture,we,Pt+Et)),B.blitFramebuffer(at,lt,Ie,ze,dt,Lt,Ie,ze,B.DEPTH_BUFFER_BIT,B.NEAREST);Je.bindFramebuffer(B.READ_FRAMEBUFFER,null),Je.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else if(H!==0||C.isRenderTargetTexture||Ke.has(C)){const bn=Ke.get(C),on=Ke.get(q);Je.bindFramebuffer(B.READ_FRAMEBUFFER,wl),Je.bindFramebuffer(B.DRAW_FRAMEBUFFER,Al);for(let In=0;In<He;In++)Vt?B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,bn.__webglTexture,H,Ze+In):B.framebufferTexture2D(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,bn.__webglTexture,H),Gn?B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,on.__webglTexture,we,Pt+In):B.framebufferTexture2D(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,on.__webglTexture,we),H!==0?B.blitFramebuffer(at,lt,Ie,ze,dt,Lt,Ie,ze,B.COLOR_BUFFER_BIT,B.NEAREST):Gn?B.copyTexSubImage3D(rn,we,dt,Lt,Pt+In,at,lt,Ie,ze):B.copyTexSubImage2D(rn,we,dt,Lt,at,lt,Ie,ze);Je.bindFramebuffer(B.READ_FRAMEBUFFER,null),Je.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else Gn?C.isDataTexture||C.isData3DTexture?B.texSubImage3D(rn,we,dt,Lt,Pt,Ie,ze,He,At,et,Zt.data):q.isCompressedArrayTexture?B.compressedTexSubImage3D(rn,we,dt,Lt,Pt,Ie,ze,He,At,Zt.data):B.texSubImage3D(rn,we,dt,Lt,Pt,Ie,ze,He,At,et,Zt):C.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,we,dt,Lt,Ie,ze,At,et,Zt.data):C.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,we,dt,Lt,Zt.width,Zt.height,At,Zt.data):B.texSubImage2D(B.TEXTURE_2D,we,dt,Lt,Ie,ze,At,et,Zt);B.pixelStorei(B.UNPACK_ROW_LENGTH,wt),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Rn),B.pixelStorei(B.UNPACK_SKIP_PIXELS,Di),B.pixelStorei(B.UNPACK_SKIP_ROWS,Hn),B.pixelStorei(B.UNPACK_SKIP_IMAGES,ps),we===0&&q.generateMipmaps&&B.generateMipmap(rn),Je.unbindTexture()},this.copyTextureToTexture3D=function(C,q,ne=null,ie=null,H=0){return C.isTexture!==!0&&(Uo("WebGLRenderer: copyTextureToTexture3D function signature has changed."),ne=arguments[0]||null,ie=arguments[1]||null,C=arguments[2],q=arguments[3],H=arguments[4]||0),Uo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(C,q,ne,ie,H)},this.initRenderTarget=function(C){Ke.get(C).__webglFramebuffer===void 0&&b.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?b.setTextureCube(C,0):C.isData3DTexture?b.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?b.setTexture2DArray(C,0):b.setTexture2D(C,0),Je.unbindTexture()},this.resetState=function(){U=0,O=0,Y=null,Je.reset(),Ot.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return rr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=gt._getDrawingBufferColorSpace(e),t.unpackColorSpace=gt._getUnpackColorSpace()}}const m_={type:"change"},gp={type:"start"},v0={type:"end"},tu=new hp,g_=new wr,q1=Math.cos(70*X_.DEG2RAD),gn=new W,oi=2*Math.PI,Ht={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Qd=1e-6;class j1 extends cE{constructor(e,t=null){super(e,t),this.state=Ht.NONE,this.enabled=!0,this.target=new W,this.cursor=new W,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Vo.ROTATE,MIDDLE:Vo.DOLLY,RIGHT:Vo.PAN},this.touches={ONE:Fo.ROTATE,TWO:Fo.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new W,this._lastQuaternion=new Ys,this._lastTargetPosition=new W,this._quat=new Ys().setFromUnitVectors(e.up,new W(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Hv,this._sphericalDelta=new Hv,this._scale=1,this._panOffset=new W,this._rotateStart=new Q,this._rotateEnd=new Q,this._rotateDelta=new Q,this._panStart=new Q,this._panEnd=new Q,this._panDelta=new Q,this._dollyStart=new Q,this._dollyEnd=new Q,this._dollyDelta=new Q,this._dollyDirection=new W,this._mouse=new Q,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=K1.bind(this),this._onPointerDown=$1.bind(this),this._onPointerUp=Z1.bind(this),this._onContextMenu=rR.bind(this),this._onMouseWheel=eR.bind(this),this._onKeyDown=tR.bind(this),this._onTouchStart=nR.bind(this),this._onTouchMove=iR.bind(this),this._onMouseDown=J1.bind(this),this._onMouseMove=Q1.bind(this),this._interceptControlDown=sR.bind(this),this._interceptControlUp=oR.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(m_),this.update(),this.state=Ht.NONE}update(e=null){const t=this.object.position;gn.copy(t).sub(this.target),gn.applyQuaternion(this._quat),this._spherical.setFromVector3(gn),this.autoRotate&&this.state===Ht.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(n)&&isFinite(s)&&(n<-Math.PI?n+=oi:n>Math.PI&&(n-=oi),s<-Math.PI?s+=oi:s>Math.PI&&(s-=oi),n<=s?this._spherical.theta=Math.max(n,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+s)/2?Math.max(n,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let a=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const c=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),a=c!=this._spherical.radius}if(gn.setFromSpherical(this._spherical),gn.applyQuaternion(this._quatInverse),t.copy(this.target).add(gn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let c=null;if(this.object.isPerspectiveCamera){const u=gn.length();c=this._clampDistance(u*this._scale);const d=u-c;this.object.position.addScaledVector(this._dollyDirection,d),this.object.updateMatrixWorld(),a=!!d}else if(this.object.isOrthographicCamera){const u=new W(this._mouse.x,this._mouse.y,0);u.unproject(this.object);const d=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),a=d!==this.object.zoom;const f=new W(this._mouse.x,this._mouse.y,0);f.unproject(this.object),this.object.position.sub(f).add(u),this.object.updateMatrixWorld(),c=gn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;c!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(c).add(this.object.position):(tu.origin.copy(this.object.position),tu.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(tu.direction))<q1?this.object.lookAt(this.target):(g_.setFromNormalAndCoplanarPoint(this.object.up,this.target),tu.intersectPlane(g_,this.target))))}else if(this.object.isOrthographicCamera){const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),c!==this.object.zoom&&(this.object.updateProjectionMatrix(),a=!0)}return this._scale=1,this._performCursorZoom=!1,a||this._lastPosition.distanceToSquared(this.object.position)>Qd||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Qd||this._lastTargetPosition.distanceToSquared(this.target)>Qd?(this.dispatchEvent(m_),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?oi/60*this.autoRotateSpeed*e:oi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){gn.setFromMatrixColumn(t,0),gn.multiplyScalar(-e),this._panOffset.add(gn)}_panUp(e,t){this.screenSpacePanning===!0?gn.setFromMatrixColumn(t,1):(gn.setFromMatrixColumn(t,0),gn.crossVectors(this.object.up,gn)),gn.multiplyScalar(e),this._panOffset.add(gn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;gn.copy(s).sub(this.target);let a=gn.length();a*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*a/n.clientHeight,this.object.matrix),this._panUp(2*t*a/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),s=e-n.left,a=t-n.top,c=n.width,u=n.height;this._mouse.x=s/c*2-1,this._mouse.y=-(a/u)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(oi*this._rotateDelta.x/t.clientHeight),this._rotateUp(oi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(oi*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-oi*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(oi*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-oi*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._rotateStart.set(n,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panStart.set(n,s)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,a=Math.sqrt(n*n+s*s);this._dollyStart.set(0,a)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),s=.5*(e.pageX+n.x),a=.5*(e.pageY+n.y);this._rotateEnd.set(s,a)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(oi*this._rotateDelta.x/t.clientHeight),this._rotateUp(oi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panEnd.set(n,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,a=Math.sqrt(n*n+s*s);this._dollyEnd.set(0,a),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const c=(e.pageX+t.x)*.5,u=(e.pageY+t.y)*.5;this._updateZoomParameters(c,u)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Q,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function $1(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(r)&&(this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r)))}function K1(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function Z1(r){switch(this._removePointer(r),this._pointers.length){case 0:this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(v0),this.state=Ht.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function J1(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Vo.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(r),this.state=Ht.DOLLY;break;case Vo.ROTATE:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Ht.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Ht.ROTATE}break;case Vo.PAN:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Ht.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Ht.PAN}break;default:this.state=Ht.NONE}this.state!==Ht.NONE&&this.dispatchEvent(gp)}function Q1(r){switch(this.state){case Ht.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(r);break;case Ht.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(r);break;case Ht.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(r);break}}function eR(r){this.enabled===!1||this.enableZoom===!1||this.state!==Ht.NONE||(r.preventDefault(),this.dispatchEvent(gp),this._handleMouseWheel(this._customWheelEvent(r)),this.dispatchEvent(v0))}function tR(r){this.enabled!==!1&&this._handleKeyDown(r)}function nR(r){switch(this._trackPointer(r),this._pointers.length){case 1:switch(this.touches.ONE){case Fo.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(r),this.state=Ht.TOUCH_ROTATE;break;case Fo.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(r),this.state=Ht.TOUCH_PAN;break;default:this.state=Ht.NONE}break;case 2:switch(this.touches.TWO){case Fo.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(r),this.state=Ht.TOUCH_DOLLY_PAN;break;case Fo.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(r),this.state=Ht.TOUCH_DOLLY_ROTATE;break;default:this.state=Ht.NONE}break;default:this.state=Ht.NONE}this.state!==Ht.NONE&&this.dispatchEvent(gp)}function iR(r){switch(this._trackPointer(r),this.state){case Ht.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(r),this.update();break;case Ht.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(r),this.update();break;case Ht.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(r),this.update();break;case Ht.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(r),this.update();break;default:this.state=Ht.NONE}}function rR(r){this.enabled!==!1&&r.preventDefault()}function sR(r){r.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function oR(r){r.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Kf(r,e=0){let t=3735928559^e,n=1103547991^e;if(r instanceof Array)for(let s=0,a;s<r.length;s++)a=r[s],t=Math.imul(t^a,2654435761),n=Math.imul(n^a,1597334677);else for(let s=0,a;s<r.length;s++)a=r.charCodeAt(s),t=Math.imul(t^a,2654435761),n=Math.imul(n^a,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const aR=(...r)=>Kf(r);function lR(r,e=!1){const t=[];r.isNode===!0&&(t.push(r.id),r=r.getSelf());for(const{property:n,childNode:s}of Zf(r))t.push(t,Kf(n.slice(0,-4)),s.getCacheKey(e));return Kf(t)}function*Zf(r,e=!1){for(const t in r){if(t.startsWith("_")===!0)continue;const n=r[t];if(Array.isArray(n)===!0)for(let s=0;s<n.length;s++){const a=n[s];a&&(a.isNode===!0||e&&typeof a.toJSON=="function")&&(yield{property:t,index:s,childNode:a})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(const s in n){const a=n[s];a&&(a.isNode===!0||e&&typeof a.toJSON=="function")&&(yield{property:t,index:s,childNode:a})}}}function gu(r){if(r==null)return null;const e=typeof r;return r.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":r.isVector2===!0?"vec2":r.isVector3===!0?"vec3":r.isVector4===!0?"vec4":r.isMatrix3===!0?"mat3":r.isMatrix4===!0?"mat4":r.isColor===!0?"color":r instanceof ArrayBuffer?"ArrayBuffer":null}function _0(r,...e){const t=r?r.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),r==="color"?new st(...e):t==="vec2"?new Q(...e):t==="vec3"?new W(...e):t==="vec4"?new $t(...e):t==="mat3"?new ft(...e):t==="mat4"?new Kt(...e):r==="bool"?e[0]||!1:r==="float"||r==="int"||r==="uint"?e[0]||0:r==="string"?e[0]||"":r==="ArrayBuffer"?uR(e[0]):null}function cR(r){let e="";const t=new Uint8Array(r);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function uR(r){return Uint8Array.from(atob(r),e=>e.charCodeAt(0)).buffer}const v_={VERTEX:"vertex",FRAGMENT:"fragment"},vn={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},ef={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},hR=["fragment","vertex"];[...hR];const fl=["x","y","z","w"];let dR=0;class Rt extends hs{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=vn.NONE,this.updateBeforeType=vn.NONE,this.updateAfterType=vn.NONE,this.uuid=X_.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:dR++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,vn.FRAME)}onRenderUpdate(e){return this.onUpdate(e,vn.RENDER)}onObjectUpdate(e){return this.onUpdate(e,vn.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Zf(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=lR(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const s of this.getChildren())t["node"+n++]=s;return null}analyze(e){if(e.increaseUsage(this)===1){const n=e.getNodeProperties(this);for(const s of Object.values(n))s&&s.isNode===!0&&s.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let s=null;const a=e.getBuildStage();if(a==="setup"){this.updateReference(e);const c=e.getNodeProperties(this);if(c.initialized!==!0){const u=e.stack.nodes.length;c.initialized=!0,c.outputNode=this.setup(e),c.outputNode!==null&&e.stack.nodes.length;for(const d of Object.values(c))d&&d.isNode===!0&&d.build(e)}}else if(a==="analyze")this.analyze(e);else if(a==="generate")if(this.generate.length===1){const u=this.getNodeType(e),d=e.getDataFromNode(this);s=d.snippet,s===void 0?(s=this.generate(e)||"",d.snippet=s):d.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),s=e.format(s,u,t)}else s=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),s}getSerializeChildren(){return Zf(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:s,index:a,childNode:c}of t)a!==void 0?(n[s]===void 0&&(n[s]=Number.isInteger(a)?[]:{}),n[s][a]=c.toJSON(e.meta).uuid):n[s]=c.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const s=[];for(const a of e.inputNodes[n])s.push(t[a]);this[n]=s}else if(typeof e.inputNodes[n]=="object"){const s={};for(const a in e.inputNodes[n]){const c=e.inputNodes[n][a];s[a]=t[c]}this[n]=s}else{const s=e.inputNodes[n];this[n]=t[s]}}}toJSON(e){const{uuid:t,type:n}=this,s=e===void 0||typeof e=="string";s&&(e={textures:{},images:{},nodes:{}});let a=e.nodes[t];a===void 0&&(a={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},s!==!0&&(e.nodes[a.uuid]=a),this.serialize(a),delete a.meta);function c(u){const d=[];for(const f in u){const p=u[f];delete p.metadata,d.push(p)}return d}if(s){const u=c(e.textures),d=c(e.images),f=c(e.nodes);u.length>0&&(a.textures=u),d.length>0&&(a.images=d),f.length>0&&(a.nodes=f)}return a}}class pl extends Rt{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),n=this.indexNode.build(e,"uint");return`${t}[ ${n} ]`}}class x0 extends Rt{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const s of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(s))&&(n=s);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,s=this.getNodeType(e),a=n.build(e,s);return e.format(a,s,t)}}class di extends Rt{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const s=e.getVectorType(this.getNodeType(e,t)),a=e.getDataFromNode(this);if(a.propertyName!==void 0)return e.format(a.propertyName,s,t);if(s!=="void"&&t!=="void"&&this.hasDependencies(e)){const c=super.build(e,s),u=e.getVarFromNode(this,null,s),d=e.getPropertyName(u);return e.addLineFlowCode(`${d} = ${c}`,this),a.snippet=c,a.propertyName=d,e.format(a.propertyName,s,t)}}return super.build(e,t)}}class fR extends di{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),s=this.nodes,a=e.getComponentType(n),c=[];for(const d of s){let f=d.build(e);const p=e.getComponentType(d.getNodeType(e));p!==a&&(f=e.format(f,p,a)),c.push(f)}const u=`${e.getType(n)}( ${c.join(", ")} )`;return e.format(u,n,t)}}const pR=fl.join("");class __ extends Rt{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(fl.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const n=this.node,s=e.getTypeLength(n.getNodeType(e));let a=null;if(s>1){let c=null;this.getVectorLength()>=s&&(c=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const d=n.build(e,c);this.components.length===s&&this.components===pR.slice(0,this.components.length)?a=e.format(d,c,t):a=e.format(`${d}.${this.components}`,this.getNodeType(e),t)}else a=n.build(e,t);return a}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class mR extends di{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:s}=this,a=this.getNodeType(e),c=e.getTypeFromLength(n.length,s.getNodeType(e)),u=s.build(e,c),d=t.build(e,a),f=e.getTypeLength(a),p=[];for(let g=0;g<f;g++){const v=fl[g];v===n[0]?(p.push(u),g+=n.length-1):p.push(d+"."+v)}return`${e.getType(a)}( ${p.join(", ")} )`}}class gR extends di{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,s=this.getNodeType(e),a=n.build(e),c=e.getVarFromNode(this),u=e.getPropertyName(c);e.addLineFlowCode(u+" = "+a,this);const d=e.getTypeLength(s),f=[];let p=0;for(let g=0;g<d;g++){const v=fl[g];v===t[p]?(f.push("1.0 - "+(u+"."+v)),p++):f.push(u+"."+v)}return`${e.getType(s)}( ${f.join(", ")} )`}}class vp extends Rt{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?gu(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=gu(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=cR(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?_0(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class Nr extends vp{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return e.format(this.generateConst(e),n,t)}}let y0=null;const Bo=new Map;function ce(r,e){if(Bo.has(r)){console.warn(`Redefinition of method chaining ${r}`);return}if(typeof e!="function")throw new Error(`Node element ${r} is not a function`);Bo.set(r,e)}const S0=r=>r.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),x_=r=>S0(r).split("").sort().join(""),M0={setup(r,e){const t=e.shift();return r(Nu(t),...e)},get(r,e,t){if(typeof e=="string"&&r[e]===void 0){if(r.isStackNode!==!0&&e==="assign")return(...n)=>(y0.assign(t,...n),t);if(Bo.has(e)){const n=Bo.get(e);return r.isStackNode?(...s)=>t.add(n(...s)):(...s)=>n(t,...s)}else{if(e==="self")return r;if(e.endsWith("Assign")&&Bo.has(e.slice(0,e.length-6))){const n=Bo.get(e.slice(0,e.length-6));return r.isStackNode?(...s)=>t.assign(s[0],n(...s)):(...s)=>t.assign(n(t,...s))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=S0(e),Ne(new __(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=x_(e.slice(3).toLowerCase()),n=>Ne(new mR(r,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=x_(e.slice(4).toLowerCase()),()=>Ne(new gR(Ne(r),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),Ne(new __(r,e));if(/^\d+$/.test(e)===!0)return Ne(new pl(t,new Nr(Number(e),"uint")))}}}return Reflect.get(r,e,t)},set(r,e,t,n){return typeof e=="string"&&r[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(r,e,t,n)}},tf=new WeakMap,y_=new WeakMap,vR=function(r,e=null){const t=gu(r);if(t==="node"){let n=tf.get(r);return n===void 0&&(n=new Proxy(r,M0),tf.set(r,n),tf.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return Ne(Jf(r,e));if(t==="shader")return xn(r)}return r},_R=function(r,e=null){for(const t in r)r[t]=Ne(r[t],e);return r},xR=function(r,e=null){const t=r.length;for(let n=0;n<t;n++)r[n]=Ne(r[n],e);return r},yR=function(r,e=null,t=null,n=null){const s=a=>Ne(n!==null?Object.assign(a,n):a);return e===null?(...a)=>s(new r(...Yo(a))):t!==null?(t=Ne(t),(...a)=>s(new r(e,...Yo(a),t))):(...a)=>s(new r(e,...Yo(a)))},SR=function(r,...e){return Ne(new r(...Yo(e)))};class MR extends Rt{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:n}=this,s=e.getNodeProperties(t);if(s.onceOutput)return s.onceOutput;let a=null;if(t.layout){let c=y_.get(e.constructor);c===void 0&&(c=new WeakMap,y_.set(e.constructor,c));let u=c.get(t);u===void 0&&(u=Ne(e.buildFunctionNode(t)),c.set(t,u)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(u),a=Ne(u.call(n))}else{const c=t.jsFunc,u=n!==null?c(n,e):c(e);a=Ne(u)}return t.once&&(s.onceOutput=a),a}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class ER extends Rt{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Nu(e),Ne(new MR(this,e))}setup(){return this.call()}}const TR=[!1,!0],wR=[0,1,2,3],AR=[-1,-2],E0=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],_p=new Map;for(const r of TR)_p.set(r,new Nr(r));const xp=new Map;for(const r of wR)xp.set(r,new Nr(r,"uint"));const yp=new Map([...xp].map(r=>new Nr(r.value,"int")));for(const r of AR)yp.set(r,new Nr(r,"int"));const Ru=new Map([...yp].map(r=>new Nr(r.value)));for(const r of E0)Ru.set(r,new Nr(r));for(const r of E0)Ru.set(-r,new Nr(-r));const Cu={bool:_p,uint:xp,ints:yp,float:Ru},S_=new Map([..._p,...Ru]),Jf=(r,e)=>S_.has(r)?S_.get(r):r.isNode===!0?r:new Nr(r,e),RR=r=>{try{return r.getNodeType()}catch{return}},dn=function(r,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(r)&&t.every(s=>typeof s!="object"))&&(t=[_0(r,...t)]),t.length===1&&e!==null&&e.has(t[0]))return Ne(e.get(t[0]));if(t.length===1){const s=Jf(t[0],r);return RR(s)===r?Ne(s):Ne(new x0(s,r))}const n=t.map(s=>Jf(s));return Ne(new fR(n,r))}},CR=r=>r!=null?r.nodeType||r.convertTo||(typeof r=="string"?r:null):null;function NR(r,e){return new Proxy(new ER(r,e),M0)}const Ne=(r,e=null)=>vR(r,e),Nu=(r,e=null)=>new _R(r,e),Yo=(r,e=null)=>new xR(r,e),Me=(...r)=>new yR(...r),Qe=(...r)=>new SR(...r),xn=(r,e)=>{const t=new NR(r,e),n=(...s)=>{let a;return Nu(s),s[0]&&s[0].isNode?a=[...s]:a=s[0],t.call(a)};return n.shaderNode=t,n.setLayout=s=>(t.setLayout(s),n),n.once=()=>(t.once=!0,n),n};ce("toGlobal",r=>(r.global=!0,r));const T0=(...r)=>y0.If(...r);function LR(r){return r}ce("append",LR);const PR=new dn("color"),li=new dn("float",Cu.float),w0=new dn("int",Cu.ints),bR=new dn("uint",Cu.uint),A0=new dn("bool",Cu.bool),ml=new dn("vec2"),IR=new dn("ivec2"),DR=new dn("uvec2"),UR=new dn("bvec2"),Dt=new dn("vec3"),OR=new dn("ivec3"),FR=new dn("uvec3"),zR=new dn("bvec3"),as=new dn("vec4"),kR=new dn("ivec4"),BR=new dn("uvec4"),VR=new dn("bvec4"),R0=new dn("mat2"),gl=new dn("mat3"),HR=new dn("mat4");ce("toColor",PR);ce("toFloat",li);ce("toInt",w0);ce("toUint",bR);ce("toBool",A0);ce("toVec2",ml);ce("toIVec2",IR);ce("toUVec2",DR);ce("toBVec2",UR);ce("toVec3",Dt);ce("toIVec3",OR);ce("toUVec3",FR);ce("toBVec3",zR);ce("toVec4",as);ce("toIVec4",kR);ce("toUVec4",BR);ce("toBVec4",VR);ce("toMat2",R0);ce("toMat3",gl);ce("toMat4",HR);const GR=Me(pl),WR=(r,e)=>Ne(new x0(Ne(r),e));ce("element",GR);ce("convert",WR);class C0 extends Rt{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=n,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const XR=r=>new C0(r),YR=(r,e=0)=>new C0(r,!0,e),vl=YR("render"),qR=XR("object");class _l extends vp{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=qR}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const n=this.getSelf();return e=e.bind(n),super.onUpdate(s=>{const a=e(s,n);a!==void 0&&(this.value=a)},t)}generate(e,t){const n=this.getNodeType(e),s=this.getUniformHash(e);let a=e.getNodeFromHash(s);a===void 0&&(e.setHashNode(this,s),a=this);const c=a.getInputType(e),u=e.getUniformFromNode(a,c,e.shaderStage,this.name||e.context.label),d=e.getPropertyName(u);return e.context.label!==void 0&&delete e.context.label,e.format(d,n,t)}}const hi=(r,e)=>{const t=CR(e||r),n=r&&r.isNode===!0?r.node&&r.node.value||r.value:r;return Ne(new _l(n,t))};class N0 extends Rt{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const jR=(r,e)=>Ne(new N0(r,e)),M_=Qe(N0,"vec4","DiffuseColor");class $R extends di{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return fl.join("").slice(0,n)!==t.components}return!1}generate(e,t){const{targetNode:n,sourceNode:s}=this,a=this.needsSplitAssign(e),c=n.getNodeType(e),u=n.context({assign:!0}).build(e),d=s.build(e,c),f=s.getNodeType(e),p=e.getDataFromNode(this);let g;if(p.initialized===!0)t!=="void"&&(g=u);else if(a){const v=e.getVarFromNode(this,null,c),y=e.getPropertyName(v);e.addLineFlowCode(`${y} = ${d}`,this);const M=n.node.context({assign:!0}).build(e);for(let E=0;E<n.components.length;E++){const S=n.components[E];e.addLineFlowCode(`${M}.${S} = ${y}[ ${E} ]`,this)}t!=="void"&&(g=u)}else g=`${u} = ${d}`,(t==="void"||f==="void")&&(e.addLineFlowCode(g,this),t!=="void"&&(g=u));return p.initialized=!0,e.format(g,c,t)}}const KR=Me($R);ce("assign",KR);class ZR extends di{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,s=n.getInputs(e),a=this.parameters,c=(d,f)=>{const p=f.type,g=p==="pointer";let v;return g?v="&"+d.build(e):v=d.build(e,p),v};if(Array.isArray(a))for(let d=0;d<a.length;d++)t.push(c(a[d],s[d]));else for(const d of s){const f=a[d.name];if(f!==void 0)t.push(c(f,d));else throw new Error(`FunctionCallNode: Input '${d.name}' not found in FunctionNode.`)}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const JR=(r,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Yo(e):Nu(e[0]),Ne(new ZR(Ne(r),e)));ce("call",JR);class Qt extends di{static get type(){return"OperatorNode"}constructor(e,t,n,...s){if(super(),s.length>0){let a=new Qt(e,t,n);for(let c=0;c<s.length-1;c++)a=new Qt(e,a,s[c]);t=a,n=s[s.length-1]}this.op=e,this.aNode=t,this.bNode=n}getNodeType(e,t){const n=this.op,s=this.aNode,a=this.bNode,c=s.getNodeType(e),u=typeof a<"u"?a.getNodeType(e):null;if(c==="void"||u==="void")return"void";if(n==="%")return c;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(c);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const d=t?e.getTypeLength(t):Math.max(e.getTypeLength(c),e.getTypeLength(u));return d>1?`bvec${d}`:"bool"}else return c==="float"&&e.isMatrix(u)?u:e.isMatrix(c)&&e.isVector(u)?e.getVectorFromMatrix(c):e.isVector(c)&&e.isMatrix(u)?e.getVectorFromMatrix(u):e.getTypeLength(u)>e.getTypeLength(c)?u:c}generate(e,t){const n=this.op,s=this.aNode,a=this.bNode,c=this.getNodeType(e,t);let u=null,d=null;c!=="void"?(u=s.getNodeType(e),d=typeof a<"u"?a.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?e.isVector(u)?d=u:u!==d&&(u=d="float"):n===">>"||n==="<<"?(u=c,d=e.changeComponentType(d,"uint")):e.isMatrix(u)&&e.isVector(d)?d=e.getVectorFromMatrix(u):e.isVector(u)&&e.isMatrix(d)?u=e.getVectorFromMatrix(d):u=d=c):u=d=c;const f=s.build(e,u),p=typeof a<"u"?a.build(e,d):null,g=e.getTypeLength(t),v=e.getFunctionOperator(n);if(t!=="void")return n==="<"&&g>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${f}, ${p} )`,c,t):e.format(`( ${f} < ${p} )`,c,t):n==="<="&&g>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${f}, ${p} )`,c,t):e.format(`( ${f} <= ${p} )`,c,t):n===">"&&g>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${f}, ${p} )`,c,t):e.format(`( ${f} > ${p} )`,c,t):n===">="&&g>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${f}, ${p} )`,c,t):e.format(`( ${f} >= ${p} )`,c,t):n==="!"||n==="~"?e.format(`(${n}${f})`,u,t):v?e.format(`${v}( ${f}, ${p} )`,c,t):e.format(`( ${f} ${n} ${p} )`,c,t);if(u!=="void")return v?e.format(`${v}( ${f}, ${p} )`,c,t):e.format(`${f} ${n} ${p}`,c,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const L0=Me(Qt,"+"),Qf=Me(Qt,"-"),Lu=Me(Qt,"*"),P0=Me(Qt,"/"),b0=Me(Qt,"%"),QR=Me(Qt,"=="),eC=Me(Qt,"!="),tC=Me(Qt,"<"),nC=Me(Qt,">"),iC=Me(Qt,"<="),rC=Me(Qt,">="),sC=Me(Qt,"&&"),oC=Me(Qt,"||"),aC=Me(Qt,"!"),lC=Me(Qt,"^^"),cC=Me(Qt,"&"),uC=Me(Qt,"~"),hC=Me(Qt,"|"),dC=Me(Qt,"^"),fC=Me(Qt,"<<"),pC=Me(Qt,">>");ce("add",L0);ce("sub",Qf);ce("mul",Lu);ce("div",P0);ce("modInt",b0);ce("equal",QR);ce("notEqual",eC);ce("lessThan",tC);ce("greaterThan",nC);ce("lessThanEqual",iC);ce("greaterThanEqual",rC);ce("and",sC);ce("or",oC);ce("not",aC);ce("xor",lC);ce("bitAnd",cC);ce("bitNot",uC);ce("bitOr",hC);ce("bitXor",dC);ce("shiftLeft",fC);ce("shiftRight",pC);const mC=(...r)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),b0(...r));ce("remainder",mC);class j extends di{static get type(){return"MathNode"}constructor(e,t,n=null,s=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=s}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,s=this.cNode?this.cNode.getNodeType(e):null,a=e.isMatrix(t)?0:e.getTypeLength(t),c=e.isMatrix(n)?0:e.getTypeLength(n),u=e.isMatrix(s)?0:e.getTypeLength(s);return a>c&&a>u?t:c>u?n:u>a?s:t}getNodeType(e){const t=this.method;return t===j.LENGTH||t===j.DISTANCE||t===j.DOT?"float":t===j.CROSS?"vec3":t===j.ALL?"bool":t===j.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===j.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const n=this.method,s=this.getNodeType(e),a=this.getInputType(e),c=this.aNode,u=this.bNode,d=this.cNode,f=e.renderer.isWebGLRenderer===!0;if(n===j.TRANSFORM_DIRECTION){let p=c,g=u;e.isMatrix(p.getNodeType(e))?g=as(Dt(g),0):p=as(Dt(p),0);const v=Lu(p,g).xyz;return I0(v).build(e,t)}else{if(n===j.NEGATE)return e.format("( - "+c.build(e,a)+" )",s,t);if(n===j.ONE_MINUS)return Qf(1,c).build(e,t);if(n===j.RECIPROCAL)return P0(1,c).build(e,t);if(n===j.DIFFERENCE)return Sp(Qf(c,u)).build(e,t);{const p=[];return n===j.CROSS||n===j.MOD?p.push(c.build(e,s),u.build(e,s)):f&&n===j.STEP?p.push(c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":a),u.build(e,a)):f&&(n===j.MIN||n===j.MAX)||n===j.MOD?p.push(c.build(e,a),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":a)):n===j.REFRACT?p.push(c.build(e,a),u.build(e,a),d.build(e,"float")):n===j.MIX?p.push(c.build(e,a),u.build(e,a),d.build(e,e.getTypeLength(d.getNodeType(e))===1?"float":a)):(p.push(c.build(e,a)),u!==null&&p.push(u.build(e,a)),d!==null&&p.push(d.build(e,a))),e.format(`${e.getMethod(n,s)}( ${p.join(", ")} )`,s,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}j.ALL="all";j.ANY="any";j.EQUALS="equals";j.RADIANS="radians";j.DEGREES="degrees";j.EXP="exp";j.EXP2="exp2";j.LOG="log";j.LOG2="log2";j.SQRT="sqrt";j.INVERSE_SQRT="inversesqrt";j.FLOOR="floor";j.CEIL="ceil";j.NORMALIZE="normalize";j.FRACT="fract";j.SIN="sin";j.COS="cos";j.TAN="tan";j.ASIN="asin";j.ACOS="acos";j.ATAN="atan";j.ABS="abs";j.SIGN="sign";j.LENGTH="length";j.NEGATE="negate";j.ONE_MINUS="oneMinus";j.DFDX="dFdx";j.DFDY="dFdy";j.ROUND="round";j.RECIPROCAL="reciprocal";j.TRUNC="trunc";j.FWIDTH="fwidth";j.BITCAST="bitcast";j.TRANSPOSE="transpose";j.ATAN2="atan2";j.MIN="min";j.MAX="max";j.MOD="mod";j.STEP="step";j.REFLECT="reflect";j.DISTANCE="distance";j.DIFFERENCE="difference";j.DOT="dot";j.CROSS="cross";j.POW="pow";j.TRANSFORM_DIRECTION="transformDirection";j.MIX="mix";j.CLAMP="clamp";j.REFRACT="refract";j.SMOOTHSTEP="smoothstep";j.FACEFORWARD="faceforward";const gC=li(Math.PI),vC=Me(j,j.ALL),_C=Me(j,j.ANY),xC=Me(j,j.EQUALS),yC=Me(j,j.RADIANS),SC=Me(j,j.DEGREES),MC=Me(j,j.EXP),EC=Me(j,j.EXP2),TC=Me(j,j.LOG),wC=Me(j,j.LOG2),AC=Me(j,j.SQRT),RC=Me(j,j.INVERSE_SQRT),CC=Me(j,j.FLOOR),NC=Me(j,j.CEIL),I0=Me(j,j.NORMALIZE),D0=Me(j,j.FRACT),U0=Me(j,j.SIN),LC=Me(j,j.COS),PC=Me(j,j.TAN),bC=Me(j,j.ASIN),IC=Me(j,j.ACOS),DC=Me(j,j.ATAN),Sp=Me(j,j.ABS),O0=Me(j,j.SIGN),UC=Me(j,j.LENGTH),OC=Me(j,j.NEGATE),FC=Me(j,j.ONE_MINUS),zC=Me(j,j.DFDX),kC=Me(j,j.DFDY),BC=Me(j,j.ROUND),VC=Me(j,j.RECIPROCAL),HC=Me(j,j.TRUNC),GC=Me(j,j.FWIDTH);j.BITCAST;const WC=Me(j,j.TRANSPOSE),XC=Me(j,j.ATAN2),YC=Me(j,j.MIN),qC=Me(j,j.MAX),F0=Me(j,j.MOD),jC=Me(j,j.STEP),$C=Me(j,j.REFLECT),KC=Me(j,j.DISTANCE),ZC=Me(j,j.DIFFERENCE),Mp=Me(j,j.DOT),JC=Me(j,j.CROSS),z0=Me(j,j.POW),QC=Me(j,j.POW,2),eN=Me(j,j.POW,3),tN=Me(j,j.POW,4),nN=Me(j,j.TRANSFORM_DIRECTION),iN=r=>Lu(O0(r),z0(Sp(r),1/3)),rN=r=>Mp(r,r),Ep=Me(j,j.MIX),k0=(r,e=0,t=1)=>Ne(new j(j.CLAMP,Ne(r),Ne(e),Ne(t))),sN=r=>k0(r),oN=Me(j,j.REFRACT),ep=Me(j,j.SMOOTHSTEP),aN=Me(j,j.FACEFORWARD),lN=xn(([r])=>{const n=43758.5453,s=Mp(r.xy,ml(12.9898,78.233)),a=F0(s,gC);return D0(U0(a).mul(n))}),cN=(r,e,t)=>Ep(e,t,r),uN=(r,e,t)=>ep(e,t,r);ce("all",vC);ce("any",_C);ce("equals",xC);ce("radians",yC);ce("degrees",SC);ce("exp",MC);ce("exp2",EC);ce("log",TC);ce("log2",wC);ce("sqrt",AC);ce("inverseSqrt",RC);ce("floor",CC);ce("ceil",NC);ce("normalize",I0);ce("fract",D0);ce("sin",U0);ce("cos",LC);ce("tan",PC);ce("asin",bC);ce("acos",IC);ce("atan",DC);ce("abs",Sp);ce("sign",O0);ce("length",UC);ce("lengthSq",rN);ce("negate",OC);ce("oneMinus",FC);ce("dFdx",zC);ce("dFdy",kC);ce("round",BC);ce("reciprocal",VC);ce("trunc",HC);ce("fwidth",GC);ce("atan2",XC);ce("min",YC);ce("max",qC);ce("mod",F0);ce("step",jC);ce("reflect",$C);ce("distance",KC);ce("dot",Mp);ce("cross",JC);ce("pow",z0);ce("pow2",QC);ce("pow3",eN);ce("pow4",tN);ce("transformDirection",nN);ce("mix",cN);ce("clamp",k0);ce("refract",oN);ce("smoothstep",uN);ce("faceForward",aN);ce("difference",ZC);ce("saturate",sN);ce("cbrt",iN);ce("transpose",WC);ce("rand",lN);class hN extends Rt{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const n=this.elseNode.getNodeType(e);if(e.getTypeLength(n)>e.getTypeLength(t))return n}return t}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),s=this.elseNode?this.elseNode.cache():null,a=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=a,s!==null&&(e.getDataFromNode(s).parentNodeBlock=a);const c=e.getNodeProperties(this);c.condNode=t,c.ifNode=n.context({nodeBlock:n}),c.elseNode=s?s.context({nodeBlock:s}):null}generate(e,t){const n=this.getNodeType(e),s=e.getDataFromNode(this);if(s.nodeProperty!==void 0)return s.nodeProperty;const{condNode:a,ifNode:c,elseNode:u}=e.getNodeProperties(this),d=t!=="void",f=d?jR(n).build(e):"";s.nodeProperty=f;const p=a.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${p} ) {

`).addFlowTab();let g=c.build(e,n);if(g&&(d?g=f+" = "+g+";":g="return "+g+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+g+`

`+e.tab+"}"),u!==null){e.addFlowCode(` else {

`).addFlowTab();let v=u.build(e,n);v&&(d?v=f+" = "+v+";":v="return "+v+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+v+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(f,n,t)}}const Tp=Me(hN);ce("select",Tp);const dN=(...r)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Tp(...r));ce("cond",dN);class fN extends Rt{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e,t);return e.setContext(n),s}}const B0=Me(fN),pN=(r,e)=>B0(r,{label:e});ce("context",B0);ce("label",pN);class mN extends Rt{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:n}=this,s=e.getVarFromNode(this,n,e.getVectorType(this.getNodeType(e))),a=e.getPropertyName(s),c=t.build(e,s.type);return e.addLineFlowCode(`${a} = ${c}`,this),a}}const V0=Me(mN);ce("toVar",(...r)=>V0(...r).append());const gN=r=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),V0(r));ce("temp",gN);class vN extends Rt{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const s=this.name,a=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,s,a),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),n=this.setupVarying(e);if(t.propertyName===void 0){const s=this.getNodeType(e),a=e.getPropertyName(n,v_.VERTEX);e.flowNodeFromShaderStage(v_.VERTEX,this.node,s,a),t.propertyName=a}return e.getPropertyName(n)}}const sa=Me(vN);ce("varying",sa);const _N=xn(([r])=>{const e=r.mul(.9478672986).add(.0521327014).pow(2.4),t=r.mul(.0773993808),n=r.lessThanEqual(.04045);return Ep(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),xN=xn(([r])=>{const e=r.pow(.41666).mul(1.055).sub(.055),t=r.mul(12.92),n=r.lessThanEqual(.0031308);return Ep(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),xl="WorkingColorSpace",wp="OutputColorSpace";class Pu extends di{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===xl?gt.workingColorSpace:t===wp?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),s=this.resolveColorSpace(e,this.target);let a=t;return gt.enabled===!1||n===s||!n||!s||(gt.getTransfer(n)===Ft&&(a=as(_N(a.rgb),a.a)),gt.getPrimaries(n)!==gt.getPrimaries(s)&&(a=as(gl(gt._getMatrix(new ft,n,s)).mul(a.rgb),a.a)),gt.getTransfer(s)===Ft&&(a=as(xN(a.rgb),a.a))),a}}const yN=r=>Ne(new Pu(Ne(r),xl,wp)),SN=r=>Ne(new Pu(Ne(r),wp,xl)),MN=(r,e)=>Ne(new Pu(Ne(r),xl,e)),H0=(r,e)=>Ne(new Pu(Ne(r),e,xl));ce("toOutputColorSpace",yN);ce("toWorkingColorSpace",SN);ce("workingToColorSpace",MN);ce("colorSpaceToWorking",H0);let EN=class extends pl{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,n,s)}};class TN extends Rt{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,s=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=s,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=vn.OBJECT}setGroup(e){return this.group=e,this}element(e){return Ne(new EN(this,Ne(e)))}setNodeType(e){const t=hi(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let s=1;s<t.length;s++)n=n[t[s]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class wN extends TN{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(vl)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const AN=(r,e,t)=>Ne(new wN(r,e,t));class RN extends di{static get type(){return"ToneMappingNode"}constructor(e,t=NN,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}getCacheKey(){return aR(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(n===qi)return t;let s=null;const a=e.renderer.library.getToneMappingFunction(n);return a!==null?s=as(a(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),s=t),s}}const CN=(r,e,t)=>Ne(new RN(r,Ne(e),Ne(t))),NN=AN("toneMappingExposure","float");ce("toneMapping",(r,e,t)=>CN(e,t,r));class LN extends vp{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=s,this.usage=du,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,s=e.getTypeLength(t),a=this.bufferStride||s,c=this.bufferOffset,u=n.isInterleavedBuffer===!0?n:new SM(n,a),d=new dp(u,s,c);u.setUsage(this.usage),this.attribute=d,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),s=e.getPropertyName(n);let a=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=s,a=s):a=sa(this).build(e,t),a}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const PN=(r,e,t,n)=>Ne(new LN(r,e,t,n));ce("toAttribute",r=>PN(r.value));class bN extends Rt{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=vn.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let s=1;s<t.length;s++)n*=t[s];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}}}const IN=(r,e,t)=>Ne(new bN(Ne(r),e,t));ce("compute",IN);class DN extends Rt{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const n=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const a=this.node.build(e,...t);return e.setCache(n),a}}const UN=(r,...e)=>Ne(new DN(Ne(r),...e));ce("cache",UN);class ON extends Rt{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const FN=Me(ON);ce("bypass",FN);class G0 extends Rt{static get type(){return"RemapNode"}constructor(e,t,n,s=li(0),a=li(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=s,this.outHighNode=a,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:s,outHighNode:a,doClamp:c}=this;let u=e.sub(t).div(n.sub(t));return c===!0&&(u=u.clamp()),u.mul(a.sub(s)).add(s)}}const zN=Me(G0,null,null,{doClamp:!1}),kN=Me(G0);ce("remap",zN);ce("remapClamp",kN);class BN extends Rt{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),s=this.snippet;if(n==="void")e.addLineFlowCode(s,this);else return e.format(`( ${s} )`,n,t)}}const vu=Me(BN),VN=r=>(r?Tp(r,vu("discard")):vu("discard")).append();ce("discard",VN);class HN extends di{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||qi,s=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||nr;return n!==qi&&(t=t.toneMapping(n)),s!==nr&&s!==gt.workingColorSpace&&(t=t.workingToColorSpace(s)),t}}const GN=(r,e=null,t=null)=>Ne(new HN(Ne(r),e,t));ce("renderOutput",GN);class WN extends Rt{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const s=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(s)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const a=e.geometry.getAttribute(t),c=e.getTypeFromAttribute(a),u=e.getAttribute(t,c);return e.shaderStage==="vertex"?e.format(u.name,c,n):sa(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const yl=(r,e)=>Ne(new WN(r,e)),bu=r=>yl("uv"+(r>0?r:""),"vec2");class XN extends Rt{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),s=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${s} )`,this.getNodeType(e),t)}}const E_=Me(XN);class YN extends _l{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=vn.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:s,height:a}=n;this.value=Math.log2(Math.max(s,a))}}}const qN=Me(YN);class Iu extends _l{static get type(){return"TextureNode"}constructor(e,t=null,n=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=s,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=vn.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===cs?"uvec4":this.value.type===Su?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return bu(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=hi(this.value.matrix)),this._matrixUniform.mul(Dt(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?vn.FRAME:vn.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(w0(E_(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let s=this.levelNode;s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=s,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,s,a,c,u,d){const f=this.value;let p;return s?p=e.generateTextureLevel(f,t,n,s,c):a?p=e.generateTextureBias(f,t,n,a,c):d?p=e.generateTextureGrad(f,t,n,d,c):u?p=e.generateTextureCompare(f,t,n,u,c):this.sampler===!1?p=e.generateTextureLoad(f,t,n,c):p=e.generateTexture(f,t,n,c),p}generate(e,t){const n=e.getNodeProperties(this),s=this.value;if(!s||s.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const a=super.generate(e,"property");if(t==="sampler")return a+"_sampler";if(e.isReference(t))return a;{const c=e.getDataFromNode(this);let u=c.propertyName;if(u===void 0){const{uvNode:p,levelNode:g,biasNode:v,compareNode:y,depthNode:M,gradNode:E}=n,S=this.generateUV(e,p),x=g?g.build(e,"float"):null,L=v?v.build(e,"float"):null,R=M?M.build(e,"int"):null,w=y?y.build(e,"float"):null,z=E?[E[0].build(e,"vec2"),E[1].build(e,"vec2")]:null,U=e.getVarFromNode(this);u=e.getPropertyName(U);const O=this.generateSnippet(e,a,S,x,L,R,w,z);e.addLineFlowCode(`${u} = ${O}`,this),c.snippet=O,c.propertyName=u}let d=u;const f=this.getNodeType(e);return e.needsToWorkingColorSpace(s)&&(d=H0(vu(d,f),s.colorSpace).setup(e).build(e,f)),e.format(d,f,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=Ne(e),t.referenceNode=this.getSelf(),Ne(t)}blur(e){const t=this.clone();return t.biasNode=Ne(e).mul(qN(t)),t.referenceNode=this.getSelf(),Ne(t)}level(e){const t=this.clone();return t.levelNode=Ne(e),t.referenceNode=this.getSelf(),Ne(t)}size(e){return E_(this,e)}bias(e){const t=this.clone();return t.biasNode=Ne(e),t.referenceNode=this.getSelf(),Ne(t)}compare(e){const t=this.clone();return t.compareNode=Ne(e),t.referenceNode=this.getSelf(),Ne(t)}grad(e,t){const n=this.clone();return n.gradNode=[Ne(e),Ne(t)],n.referenceNode=this.getSelf(),Ne(n)}depth(e){const t=this.clone();return t.depthNode=Ne(e),t.referenceNode=this.getSelf(),Ne(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const jN=Me(Iu),Ga=hi("float").label("cameraNear").setGroup(vl).onRenderUpdate(({camera:r})=>r.near),Wa=hi("float").label("cameraFar").setGroup(vl).onRenderUpdate(({camera:r})=>r.far),Du=hi("mat4").label("cameraViewMatrix").setGroup(vl).onRenderUpdate(({camera:r})=>r.matrixWorldInverse);class It extends Rt{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=vn.OBJECT,this._uniformNode=new _l(null)}getNodeType(){const e=this.scope;if(e===It.WORLD_MATRIX)return"mat4";if(e===It.POSITION||e===It.VIEW_POSITION||e===It.DIRECTION||e===It.SCALE)return"vec3"}update(e){const t=this.object3d,n=this._uniformNode,s=this.scope;if(s===It.WORLD_MATRIX)n.value=t.matrixWorld;else if(s===It.POSITION)n.value=n.value||new W,n.value.setFromMatrixPosition(t.matrixWorld);else if(s===It.SCALE)n.value=n.value||new W,n.value.setFromMatrixScale(t.matrixWorld);else if(s===It.DIRECTION)n.value=n.value||new W,t.getWorldDirection(n.value);else if(s===It.VIEW_POSITION){const a=e.camera;n.value=n.value||new W,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(a.matrixWorldInverse)}}generate(e){const t=this.scope;return t===It.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===It.POSITION||t===It.VIEW_POSITION||t===It.DIRECTION||t===It.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}It.WORLD_MATRIX="worldMatrix";It.POSITION="position";It.SCALE="scale";It.VIEW_POSITION="viewPosition";It.DIRECTION="direction";It.DIRECTION;It.WORLD_MATRIX;It.POSITION;It.SCALE;It.VIEW_POSITION;class or extends It{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}or.DIRECTION;const $N=Qe(or,or.WORLD_MATRIX);or.POSITION;or.SCALE;or.VIEW_POSITION;const KN=hi(new ft).onObjectUpdate(({object:r},e)=>e.value.getNormalMatrix(r.matrixWorld)),W0=Du.mul($N).toVar("modelViewMatrix"),ZN=yl("position","vec3"),JN=ZN.varying("positionLocal"),ai=W0.mul(JN).xyz.varying("v_positionView"),X0=ai.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class QN extends Rt{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:n}=e;return t.coordinateSystem===rr&&n.side===Kn?"false":e.getFrontFacing()}}const eL=Qe(QN),Ap=li(eL).mul(2).sub(1),tL=yl("normal","vec3"),nL=xn(r=>r.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Dt(0,1,0)):tL,"vec3").once()().toVar("normalLocal"),iL=ai.dFdx().cross(ai.dFdy()).normalize().toVar("normalFlat"),Qo=xn(r=>{let e;return r.material.flatShading===!0?e=iL:e=sa(q0(nL),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),Y0=xn(r=>r.context.setupNormal(),"vec3").once()().mul(Ap).toVar("transformedNormalView"),q0=xn(([r],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(r);const n=KN.mul(r);return Du.transformDirection(n)}),rL=hi(0).onReference(({material:r})=>r).onRenderUpdate(({material:r})=>r.refractionRatio),sL=X0.negate().reflect(Y0),oL=X0.negate().refract(Y0,rL),aL=sL.transformDirection(Du).toVar("reflectVector"),lL=oL.transformDirection(Du).toVar("reflectVector");class cL extends Iu{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,s=null){super(e,t,n,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Gs?aL:e.mapping===Ws?lL:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Dt(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.renderer.coordinateSystem===rl||!n.isRenderTargetTexture?Dt(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const uL=Me(cL);class j0 extends _l{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const hL=(r,e,t)=>Ne(new j0(r,e,t));class dL extends pl{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType();return e.format(t,"vec4",n)}}class fL extends j0{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=vn.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,n=this.getElementLength(),s=this.getElementType();if(n===1)for(let a=0;a<e.length;a++){const c=a*4;t[c]=e[a]}else if(s==="color")for(let a=0;a<e.length;a++){const c=a*4,u=e[a];t[c]=u.r,t[c+1]=u.g,t[c+2]=u.b||0}else for(let a=0;a<e.length;a++){const c=a*4,u=e[a];t[c]=u.x,t[c+1]=u.y,t[c+2]=u.z||0,t[c+3]=u.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?gu(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let n=Float32Array;return this._elementType.charAt(0)==="i"?n=Int32Array:this._elementType.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return Ne(new dL(this,Ne(e)))}}const Oo=(r,e)=>Ne(new fL(r,e));class pL extends pl{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,n,s)}}class $0 extends Rt{static get type(){return"ReferenceNode"}constructor(e,t,n=null,s=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=s,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=vn.OBJECT}element(e){return Ne(new pL(this,Ne(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=hL(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Oo(null,e):e==="texture"?t=jN(null):e==="cubeTexture"?t=uL(null):t=hi(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let s=1;s<t.length;s++)n=n[t[s]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const _u=(r,e,t)=>Ne(new $0(r,e,t));class mL extends $0{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const gL=(r,e,t)=>Ne(new mL(r,e,t)),K0=xn(r=>(r.geometry.hasAttribute("tangent")===!1&&r.geometry.computeTangents(),yl("tangent","vec4")))(),vL=K0.xyz.toVar("tangentLocal"),Z0=W0.mul(as(vL,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),_L=r=>r.mul(K0.w).xyz,xL=sa(_L(Qo.cross(Z0)),"v_bitangentView").normalize().toVar("bitangentView"),yL=gl(Z0,xL,Qo),SL=xn(r=>{const{eye_pos:e,surf_norm:t,mapN:n,uv:s}=r,a=e.dFdx(),c=e.dFdy(),u=s.dFdx(),d=s.dFdy(),f=t,p=c.cross(f),g=f.cross(a),v=p.mul(u.x).add(g.mul(d.x)),y=p.mul(u.y).add(g.mul(d.y)),M=v.dot(v).max(y.dot(y)),E=Ap.mul(M.inverseSqrt());return L0(v.mul(n.x,E),y.mul(n.y,E),f.mul(n.z)).normalize()});class ML extends di{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=uu}setup(e){const{normalMapType:t,scaleNode:n}=this;let s=this.node.mul(2).sub(1);n!==null&&(s=Dt(s.xy.mul(n),s.z));let a=null;return t===G_?a=q0(s):t===uu&&(e.hasGeometryAttribute("tangent")===!0?a=yL.mul(s).normalize():a=SL({eye_pos:ai,surf_norm:Qo,mapN:s,uv:bu()})),a}}const T_=Me(ML),EL=xn(({textureNode:r,bumpScale:e})=>{const t=s=>r.cache().context({getUV:a=>s(a.uvNode||bu()),forceUVContext:!0}),n=li(t(s=>s));return ml(li(t(s=>s.add(s.dFdx()))).sub(n),li(t(s=>s.add(s.dFdy()))).sub(n)).mul(e)}),TL=xn(r=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=r,s=e.dFdx().normalize(),a=e.dFdy().normalize(),c=t,u=a.cross(c),d=c.cross(s),f=s.dot(u).mul(Ap),p=f.sign().mul(n.x.mul(u).add(n.y.mul(d)));return f.abs().mul(t).sub(p).normalize()});class wL extends di{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=EL({textureNode:this.textureNode,bumpScale:e});return TL({surf_pos:ai,surf_norm:Qo,dHdxy:t})}}const AL=Me(wL),w_=new Map;class le extends Rt{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=w_.get(e);return n===void 0&&(n=gL(e,t),w_.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let s=null;if(n===le.COLOR){const a=t.color!==void 0?this.getColor(n):Dt();t.map&&t.map.isTexture===!0?s=a.mul(this.getTexture("map")):s=a}else if(n===le.OPACITY){const a=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?s=a.mul(this.getTexture("alpha")):s=a}else if(n===le.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?s=this.getTexture("specular").r:s=li(1);else if(n===le.SPECULAR_INTENSITY){const a=this.getFloat(n);t.specularMap?s=a.mul(this.getTexture(n).a):s=a}else if(n===le.SPECULAR_COLOR){const a=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?s=a.mul(this.getTexture(n).rgb):s=a}else if(n===le.ROUGHNESS){const a=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?s=a.mul(this.getTexture(n).g):s=a}else if(n===le.METALNESS){const a=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?s=a.mul(this.getTexture(n).b):s=a}else if(n===le.EMISSIVE){const a=this.getFloat("emissiveIntensity"),c=this.getColor(n).mul(a);t.emissiveMap&&t.emissiveMap.isTexture===!0?s=c.mul(this.getTexture(n)):s=c}else if(n===le.NORMAL)t.normalMap?(s=T_(this.getTexture("normal"),this.getCache("normalScale","vec2")),s.normalMapType=t.normalMapType):t.bumpMap?s=AL(this.getTexture("bump").r,this.getFloat("bumpScale")):s=Qo;else if(n===le.CLEARCOAT){const a=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?s=a.mul(this.getTexture(n).r):s=a}else if(n===le.CLEARCOAT_ROUGHNESS){const a=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?s=a.mul(this.getTexture(n).r):s=a}else if(n===le.CLEARCOAT_NORMAL)t.clearcoatNormalMap?s=T_(this.getTexture(n),this.getCache(n+"Scale","vec2")):s=Qo;else if(n===le.SHEEN){const a=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?s=a.mul(this.getTexture("sheenColor").rgb):s=a}else if(n===le.SHEEN_ROUGHNESS){const a=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?s=a.mul(this.getTexture(n).a):s=a,s=s.clamp(.07,1)}else if(n===le.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const a=this.getTexture(n);s=R0(Xa.x,Xa.y,Xa.y.negate(),Xa.x).mul(a.rg.mul(2).sub(ml(1)).normalize().mul(a.b))}else s=Xa;else if(n===le.IRIDESCENCE_THICKNESS){const a=_u("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const c=_u("0","float",t.iridescenceThicknessRange);s=a.sub(c).mul(this.getTexture(n).g).add(c)}else s=a}else if(n===le.TRANSMISSION){const a=this.getFloat(n);t.transmissionMap?s=a.mul(this.getTexture(n).r):s=a}else if(n===le.THICKNESS){const a=this.getFloat(n);t.thicknessMap?s=a.mul(this.getTexture(n).g):s=a}else if(n===le.IOR)s=this.getFloat(n);else if(n===le.LIGHT_MAP)s=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===le.AO_MAP)s=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const a=this.getNodeType(e);s=this.getCache(n,a)}return s}}le.ALPHA_TEST="alphaTest";le.COLOR="color";le.OPACITY="opacity";le.SHININESS="shininess";le.SPECULAR="specular";le.SPECULAR_STRENGTH="specularStrength";le.SPECULAR_INTENSITY="specularIntensity";le.SPECULAR_COLOR="specularColor";le.REFLECTIVITY="reflectivity";le.ROUGHNESS="roughness";le.METALNESS="metalness";le.NORMAL="normal";le.CLEARCOAT="clearcoat";le.CLEARCOAT_ROUGHNESS="clearcoatRoughness";le.CLEARCOAT_NORMAL="clearcoatNormal";le.EMISSIVE="emissive";le.ROTATION="rotation";le.SHEEN="sheen";le.SHEEN_ROUGHNESS="sheenRoughness";le.ANISOTROPY="anisotropy";le.IRIDESCENCE="iridescence";le.IRIDESCENCE_IOR="iridescenceIOR";le.IRIDESCENCE_THICKNESS="iridescenceThickness";le.IOR="ior";le.TRANSMISSION="transmission";le.THICKNESS="thickness";le.ATTENUATION_DISTANCE="attenuationDistance";le.ATTENUATION_COLOR="attenuationColor";le.LINE_SCALE="scale";le.LINE_DASH_SIZE="dashSize";le.LINE_GAP_SIZE="gapSize";le.LINE_WIDTH="linewidth";le.LINE_DASH_OFFSET="dashOffset";le.POINT_WIDTH="pointWidth";le.DISPERSION="dispersion";le.LIGHT_MAP="light";le.AO_MAP="ao";le.ALPHA_TEST;le.COLOR;le.SHININESS;le.EMISSIVE;le.OPACITY;le.SPECULAR;le.SPECULAR_INTENSITY;le.SPECULAR_COLOR;le.SPECULAR_STRENGTH;le.REFLECTIVITY;le.ROUGHNESS;le.METALNESS;le.CLEARCOAT;le.CLEARCOAT_ROUGHNESS;le.ROTATION;le.SHEEN;le.SHEEN_ROUGHNESS;le.ANISOTROPY;le.IRIDESCENCE;le.IRIDESCENCE_IOR;le.IRIDESCENCE_THICKNESS;le.TRANSMISSION;le.THICKNESS;le.IOR;le.ATTENUATION_DISTANCE;le.ATTENUATION_COLOR;le.LINE_SCALE;le.LINE_DASH_SIZE;le.LINE_GAP_SIZE;le.LINE_WIDTH;le.LINE_DASH_OFFSET;le.POINT_WIDTH;le.DISPERSION;le.LIGHT_MAP;le.AO_MAP;const Xa=hi(new Q).onReference(function(r){return r.material}).onRenderUpdate(function({material:r}){this.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation))});class jt extends Rt{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let s;if(n===jt.VERTEX)s=e.getVertexIndex();else if(n===jt.INSTANCE)s=e.getInstanceIndex();else if(n===jt.DRAW)s=e.getDrawIndex();else if(n===jt.INVOCATION_LOCAL)s=e.getInvocationLocalIndex();else if(n===jt.INVOCATION_SUBGROUP)s=e.getInvocationSubgroupIndex();else if(n===jt.SUBGROUP)s=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let a;return e.shaderStage==="vertex"||e.shaderStage==="compute"?a=s:a=sa(this).build(e,t),a}}jt.VERTEX="vertex";jt.INSTANCE="instance";jt.SUBGROUP="subgroup";jt.INVOCATION_LOCAL="invocationLocal";jt.INVOCATION_SUBGROUP="invocationSubgroup";jt.DRAW="draw";jt.VERTEX;jt.INSTANCE;jt.SUBGROUP;jt.INVOCATION_SUBGROUP;jt.INVOCATION_LOCAL;jt.DRAW;class RL extends Rt{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let a=0,c=this.params.length-1;a<c;a++){const u=this.params[a],d=u.isNode!==!0&&u.name||this.getVarName(a),f=u.isNode!==!0&&u.type||"int";n[d]=vu(d,f)}const s=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,s,e),t.stackNode=s,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,s=t.stackNode;for(let u=0,d=n.length-1;u<d;u++){const f=n[u];let p=null,g=null,v=null,y=null,M=null,E=null;f.isNode?(y="int",v=this.getVarName(u),p="0",g=f.build(e,y),M="<"):(y=f.type||"int",v=f.name||this.getVarName(u),p=f.start,g=f.end,M=f.condition,E=f.update,typeof p=="number"?p=e.generateConst(y,p):p&&p.isNode&&(p=p.build(e,y)),typeof g=="number"?g=e.generateConst(y,g):g&&g.isNode&&(g=g.build(e,y)),p!==void 0&&g===void 0?(p=p+" - 1",g="0",M=">="):g!==void 0&&p===void 0&&(p="0",M="<"),M===void 0&&(Number(p)>Number(g)?M=">=":M="<"));const S={start:p,end:g,condition:M},x=S.start,L=S.end;let R="",w="",z="";E||(y==="int"||y==="uint"?M.includes("<")?E="++":E="--":M.includes("<")?E="+= 1.":E="-= 1."),R+=e.getVar(y,v)+" = "+x,w+=v+" "+M+" "+L,z+=v+" "+E;const U=`for ( ${R}; ${w}; ${z} )`;e.addFlowCode((u===0?`
`:"")+e.tab+U+` {

`).addFlowTab()}const a=s.build(e,"void"),c=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+a);for(let u=0,d=this.params.length-1;u<d;u++)e.addFlowCode((u===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),c}}const Ya=(...r)=>Ne(new RL(Yo(r,"int"))).append();let qa,ja;class hn extends Rt{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===hn.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=vn.NONE;return(this.scope===hn.SIZE||this.scope===hn.VIEWPORT)&&(e=vn.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===hn.VIEWPORT?t!==null?ja.copy(t.viewport):(e.getViewport(ja),ja.multiplyScalar(e.getPixelRatio())):t!==null?(qa.width=t.width,qa.height=t.height):e.getDrawingBufferSize(qa)}setup(){const e=this.scope;let t=null;return e===hn.SIZE?t=hi(qa||(qa=new Q)):e===hn.VIEWPORT?t=hi(ja||(ja=new $t)):t=ml(J0.div(A_)),t}generate(e){if(this.scope===hn.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(A_).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}hn.COORDINATE="coordinate";hn.VIEWPORT="viewport";hn.SIZE="size";hn.UV="uv";const Rp=Qe(hn,hn.UV),A_=Qe(hn,hn.SIZE),J0=Qe(hn,hn.COORDINATE),Q0=Qe(hn,hn.VIEWPORT);Q0.zw;Q0.xy;const $a=new Q;class CL extends Iu{static get type(){return"ViewportTextureNode"}constructor(e=Rp,t=null,n=null){n===null&&(n=new TM,n.minFilter=ss),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=vn.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize($a);const n=this.value;(n.image.width!==$a.width||n.image.height!==$a.height)&&(n.image.width=$a.width,n.image.height=$a.height,n.needsUpdate=!0);const s=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=s}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}let nf=null;class NL extends CL{static get type(){return"ViewportDepthTextureNode"}constructor(e=Rp,t=null){nf===null&&(nf=new hl),super(e,t,nf)}}const LL=Me(NL);class ci extends Rt{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===ci.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let s=null;if(t===ci.DEPTH_BASE)n!==null&&(s=tx().assign(n));else if(t===ci.DEPTH)e.isPerspectiveCamera?s=PL(ai.z,Ga,Wa):s=cu(ai.z,Ga,Wa);else if(t===ci.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const a=ex(n,Ga,Wa);s=cu(a,Ga,Wa)}else s=n;else s=cu(ai.z,Ga,Wa);return s}}ci.DEPTH_BASE="depthBase";ci.DEPTH="depth";ci.LINEAR_DEPTH="linearDepth";const cu=(r,e,t)=>r.add(e).div(e.sub(t)),PL=(r,e,t)=>e.add(r).mul(t).div(t.sub(e).mul(r)),ex=(r,e,t)=>e.mul(t).div(t.sub(e).mul(r).sub(t)),tx=Me(ci,ci.DEPTH_BASE),bL=Qe(ci,ci.DEPTH),IL=Me(ci,ci.LINEAR_DEPTH);LL();bL.assign=r=>tx(r);class DL extends Rt{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const UL=Me(DL);class Hs extends Rt{static get type(){return"ClippingNode"}constructor(e=Hs.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:s}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Hs.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,s):this.scope===Hs.HARDWARE?this.setupHardwareClipping(s,e):this.setupDefault(n,s)}setupAlphaToCoverage(e,t){return xn(()=>{const n=li().toVar("distanceToPlane"),s=li().toVar("distanceToGradient"),a=li(1).toVar("clipOpacity"),c=t.length;if(!this.hardwareClipping&&c>0){const d=Oo(t);Ya(c,({i:f})=>{const p=d.element(f);n.assign(ai.dot(p.xyz).negate().add(p.w)),s.assign(n.fwidth().div(2)),a.mulAssign(ep(s.negate(),s,n))})}const u=e.length;if(u>0){const d=Oo(e),f=li(1).toVar("intersectionClipOpacity");Ya(u,({i:p})=>{const g=d.element(p);n.assign(ai.dot(g.xyz).negate().add(g.w)),s.assign(n.fwidth().div(2)),f.mulAssign(ep(s.negate(),s,n).oneMinus())}),a.mulAssign(f.oneMinus())}M_.a.mulAssign(a),M_.a.equal(0).discard()})()}setupDefault(e,t){return xn(()=>{const n=t.length;if(!this.hardwareClipping&&n>0){const a=Oo(t);Ya(n,({i:c})=>{const u=a.element(c);ai.dot(u.xyz).greaterThan(u.w).discard()})}const s=e.length;if(s>0){const a=Oo(e),c=A0(!0).toVar("clipped");Ya(s,({i:u})=>{const d=a.element(u);c.assign(ai.dot(d.xyz).greaterThan(d.w).and(c))}),c.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),xn(()=>{const s=Oo(e),a=UL(t.getClipDistance());Ya(n,({i:c})=>{const u=s.element(c),d=ai.dot(u.xyz).sub(u.w).negate();a.element(c).assign(d)})})()}}Hs.ALPHA_TO_COVERAGE="alphaToCoverage";Hs.DEFAULT="default";Hs.HARDWARE="hardware";Dt(.04);li(1);const OL=xn(([r,e])=>{const t=r.toVar();t.assign(Lu(2,t).sub(1));const n=Dt(t,1).toVar();return T0(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]});xn(({texture:r,uv:e})=>{const n=Dt().toVar();return T0(e.x.lessThan(1e-4),()=>{n.assign(Dt(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(Dt(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(Dt(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(Dt(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(Dt(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(Dt(0,0,-1))}).Else(()=>{const a=r.uv(e.add(Dt(-.01,0,0))).r.sub(r.uv(e.add(Dt(.01,0,0))).r),c=r.uv(e.add(Dt(0,-.01,0))).r.sub(r.uv(e.add(Dt(0,.01,0))).r),u=r.uv(e.add(Dt(0,0,-.01))).r.sub(r.uv(e.add(Dt(0,0,.01))).r);n.assign(Dt(a,c,u))}),n.normalize()});new wr;new W;new W;new W;new Kt;new W(0,0,-1);new $t;new W;new W;new $t;new Q;const FL=new up;Rp.flipX();FL.depthTexture=new hl(1,1);const Ka=new $i,rf=new Kt;class ui extends Rt{static get type(){return"SceneNode"}constructor(e=ui.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let s;return t===ui.BACKGROUND_BLURRINESS?s=_u("backgroundBlurriness","float",n):t===ui.BACKGROUND_INTENSITY?s=_u("backgroundIntensity","float",n):t===ui.BACKGROUND_ROTATION?s=hi("mat4").label("backgroundRotation").setGroup(vl).onRenderUpdate(()=>{const a=n.background;return a!==null&&a.isTexture&&a.mapping!==ip?(Ka.copy(n.backgroundRotation),Ka.x*=-1,Ka.y*=-1,Ka.z*=-1,rf.makeRotationFromEuler(Ka)):rf.identity(),rf}):console.error("THREE.SceneNode: Unknown scope:",t),s}}ui.BACKGROUND_BLURRINESS="backgroundBlurriness";ui.BACKGROUND_INTENSITY="backgroundIntensity";ui.BACKGROUND_ROTATION="backgroundRotation";ui.BACKGROUND_BLURRINESS;ui.BACKGROUND_INTENSITY;ui.BACKGROUND_ROTATION;const zL=new Q;class kL extends Iu{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class R_ extends kL{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Uu extends di{static get type(){return"PassNode"}constructor(e,t,n,s={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=s,this._pixelRatio=1,this._width=1,this._height=1;const a=new hl;a.isRenderTargetTexture=!0,a.name="depth";const c=new up(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ea,...s});c.texture.name="output",c.depthTexture=a,this.renderTarget=c,this.updateBeforeType=vn.FRAME,this._textures={output:c.texture,depth:a},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=hi(0),this._cameraFar=hi(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],s=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[s]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=Ne(new R_(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=Ne(new R_(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,s=this._cameraFar;this._viewZNodes[e]=t=ex(this.getTextureNode(e),n,s)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,s=this._cameraFar,a=this.getViewZNode(e);this._linearDepthNodes[e]=t=cu(a,n,s)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===Uu.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n,camera:s}=this;this._pixelRatio=t.getPixelRatio();const a=t.getSize(zL);this.setSize(a.width,a.height);const c=t.getRenderTarget(),u=t.getMRT();this._cameraNear.value=s.near,this._cameraFar.value=s.far;for(const d in this._previousTextures)this.toggleTexture(d);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,s),t.setRenderTarget(c),t.setMRT(u)}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget.setSize(n,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Uu.COLOR="color";Uu.DEPTH="depth";Dt(1.6605,-.1246,-.0182),Dt(-.5876,1.1329,-.1006),Dt(-.0728,-.0083,1.1187);Dt(.6274,.0691,.0164),Dt(.3293,.9195,.088),Dt(.0433,.0113,.8956);class Ln extends Rt{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=n,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class BL extends Rt{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}Me(BL);class lr extends di{static get type(){return"AtomicFunctionNode"}constructor(e,t,n,s=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.storeNode=s}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,n=this.getNodeType(e),s=this.getInputType(e),a=this.pointerNode,c=this.valueNode,u=[];u.push(`&${a.build(e,s)}`),u.push(c.build(e,s));const d=`${e.getMethod(t,n)}( ${u.join(", ")} )`;if(this.storeNode!==null){const f=this.storeNode.build(e,s);e.addLineFlowCode(`${f} = ${d}`,this)}else e.addLineFlowCode(d,this)}}lr.ATOMIC_LOAD="atomicLoad";lr.ATOMIC_STORE="atomicStore";lr.ATOMIC_ADD="atomicAdd";lr.ATOMIC_SUB="atomicSub";lr.ATOMIC_MAX="atomicMax";lr.ATOMIC_MIN="atomicMin";lr.ATOMIC_AND="atomicAnd";lr.ATOMIC_OR="atomicOr";lr.ATOMIC_XOR="atomicXor";Me(lr);const VL=xn(r=>{const{lightDistance:e,cutoffDistance:t,decayExponent:n}=r,s=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(s.mul(e.div(t).pow4().oneMinus().clamp().pow2()),s)});xn(({color:r,lightViewPosition:e,cutoffDistance:t,decayExponent:n},s)=>{const a=s.context.lightingModel,c=e.sub(ai),u=c.normalize(),d=c.length(),f=VL({lightDistance:d,cutoffDistance:t,decayExponent:n}),p=r.mul(f),g=s.context.reflectedLight;a.direct({lightDirection:u,lightColor:p,reflectedLight:g},s.stack,s)});const sf=OL(bu(),yl("faceIndex")).normalize();Dt(sf.x,sf.y.negate(),sf.z);const Do=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4};ef.READ_ONLY+"",ef.WRITE_ONLY+"",ef.READ_WRITE+"";Do&&Do.VERTEX,Do&&Do.FRAGMENT,Do&&Do.COMPUTE;const Us={tsl_xor:new Ln("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Ln("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Ln("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Ln("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Ln("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Ln("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Ln("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Ln("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Ln("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Ln("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Ln("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Ln("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Ln(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},nu={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(Us.pow_float=new Ln("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Us.pow_vec2=new Ln("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Us.pow_float]),Us.pow_vec3=new Ln("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Us.pow_float]),Us.pow_vec4=new Ln("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Us.pow_float]),nu.pow_float="tsl_pow_float",nu.pow_vec2="tsl_pow_vec2",nu.pow_vec3="tsl_pow_vec3",nu.pow_vec4="tsl_pow_vec4");class HL{constructor(e,t,n){fd(this,"handleWindowResize",()=>{this.camera&&this.renderer&&(console.log("Resize"),this.camera.aspect=this.wrapper.clientWidth/this.wrapper.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.wrapper.clientWidth,this.wrapper.clientHeight,!1))});fd(this,"animate",()=>{this.animationId=requestAnimationFrame(this.animate),this.cube&&(this.cube.rotation.x+=.01,this.cube.rotation.y+=.01),this.renderer&&this.scene&&this.camera&&this.renderer.render(this.scene,this.camera)});this.canvasRef=e,this.scene=new yM,this.wrapper=document.getElementById("canvas-wrapper"),console.log("Wrapper: ",this.wrapper),this.widthFactor=t,this.heightFactor=n,this.meshes=[],this.initCamera(),this.initRenderer(),this.initLights(),this.initHelpers(),this.initControls(),this.animate(),window.addEventListener("resize",this.handleWindowResize)}initCamera(){this.camera=new bi(75,window.innerWidth*this.widthFactor/window.innerHeight*this.heightFactor,.1,1e3)}initRenderer(){this.renderer=new Y1({canvas:this.canvasRef.current}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.wrapper.clientWidth,this.wrapper.clientHeight,!1),this.camera.position.setZ(30)}initLights(){const e=new oE(16777215,1.5);this.scene.add(e)}initHelpers(){new lE(200,50)}initControls(){this.oControls=new j1(this.camera,this.renderer.domElement)}unmount(){cancelAnimationFrame(this.animationId),window.removeEventListener("resize",this.handleWindowResize),this.renderer.dispose(),this.scene=null,this.camera=null,this.renderer=null}generateMeshFromVertices(e,t){if(e.length==2)return console.log("Go line"),this.generateLine(e,t.color);let n=new dl;const s=Object.values(e);if(s.length==2)return this.generateLine(s);console.log("Values of the vertices:",s),n.moveTo(s[0].x,s[0].y),s.slice(1).forEach(u=>{n.lineTo(u.x,u.y)});let a=new ia(n);return new Pn(a,t)}generateLine(e,t){const n=new W(e[0].x,e[0].y,0),s=new W(e[1].x,e[1].y,0),a=new Mi().setFromPoints([n,s]),c=new Eu({color:16729088});return new i0(a,c)}addToScene(e){this.scene.add(e),this.meshes.push(e)}addAllToScene(e){for(let t of e)this.scene.add(t),this.meshes.push(t)}clearScene(){this.scene.remove(...this.meshes),console.log(this.scene),this.meshes=[]}}class GL{constructor(e,t){this.vertices=e,this.width=null,this.height=null,this.aspectRatio=null,this.shape=null,this.geometry=null,this.material=new Xo({color:t,side:$n}),this.mesh=null,this.createShape()}createShape(){this.shape=new dl,this.shape.moveTo(this.vertices[0].x,this.vertices[0].y),this.vertices.slice(1).forEach(e=>{this.shape.lineTo(e.x,e.y)}),this.geometry=new ia(this.shape),this.mesh=new Pn(this.geometry,this.material)}getMesh(){return this.mesh}getWidth(){return this.width}getHeight(){return this.height}getAspectRatio(){return this.aspectRatio}}class Ii{constructor(e,t,n){if(this._area=e,t==null&&n==null)return console.log("Error! No widh and height!"),null;t==null?(this._width=e/n,this._height=n):n==null?(this._width=t,this._height=e/t):(this._width=t,this._height=n),this._aspectRatio=Math.max(this._width/this._height,this._height/this._width)}get area(){return this._area}get width(){return this._width}set width(e){this._width=e,this._height=this._area/this._width,this._aspectRatio=Math.max(this._width/this._height,this._height/this._width)}get height(){return this._height}set height(e){this._height=e,this._width=this._area/this._height,this._aspectRatio=Math.max(this._width/this._height,this._height/this._width)}get aspectRatio(){return this._aspectRatio}toApartment(e,t){console.log("toApartment not implemented")}}var Bs;const is=class is{constructor(){if(Cs(is,Bs))throw new Error("You can only create one instance of Tools. Use Tools.getInstance().");md(is,Bs,this),this.name="Utility Tools"}static getInstance(){return Cs(is,Bs)||new is,Cs(is,Bs)}distanceBetweenTwoVertices(e,t){var n=e.x-t.x,s=e.y-t.y;return Math.sqrt(Math.pow(n,2)+Math.pow(s,2))}logMessage(e){console.log(`[Tools]: ${e}`)}roundTwoDigits(e){return 100*Math.round(e)/100}divideValueIntoPartsMinMax(e,t,n,s){if(e<t*n)return console.error("Value too small to split into n min parts. Value:",e,"n * min:",t*n),null;if(e>t*s)return console.error("Value too large to split into n max parts. Value:",e,"n * max:",t*s),null;let a=[];for(let d=0;d<t;d++)a.push(n);let c=e-t*n,u=0;for(;c>0;){for(let d=0;d<t&&!(c<=0);d++){let f=s-a[d],p=Math.random()*f*100,g=Math.round(p)/100,v=Math.min(g,c);a[d]+=v,a[d]=Math.round(a[d]*100)/100,c-=v,c=Math.round(c*100)/100}if(u++,u>50)return console.error("ENDLESSMITIGATION 50 in divideValueIntoPartsMinMax"),[]}for(let d of a);return a}};Bs=new WeakMap,pd(is,Bs);let Li=is;class xu{constructor(e,t,n,s,a,c){this._apartmentArea=e,this._material=new Xo({color:t,side:$n}),this._width=n,this._height=s,this._position=new Q(a,c),this._verticeList=[],this._vertices={a:null,b:null,c:null,d:null},this._shape=null,this._geometry=null,this._mesh=null,this._aspectRatio=null,this.calculateVertices(),this.createShape()}calculateVertices(){let e=this._vertices.a=new Q(this._position.x-this._width/2,this._position.y-this._height/2),t=this._vertices.b=new Q(this._position.x+this._width/2,this._position.y-this._height/2),n=this._vertices.c=new Q(this._position.x+this._width/2,this._position.y+this._height/2),s=this._vertices.d=new Q(this._position.x-this._width/2,this._position.y+this._height/2);this._verticeList.push(e,t,n,s)}setVertices(e){this._vertices=e,this._width=e.b.x-e.a.x,this._height=e.c.y-e.a.y,this._aspectRatio=Math.max(this._width/this._height,this._height/this._width)}createShape(){if(this._verticeList==[]){console.log("Vertices not set!");return}this._shape=new dl,this._shape.moveTo(this._verticeList[0].x,this._verticeList[0].y),this._verticeList.slice(1).forEach(e=>{this._shape.lineTo(e.x,e.y)}),this._geometry=new ia(this._shape),this._mesh=new Pn(this._geometry,this._material)}get area(){return this._apartmentArea}get mesh(){return this._mesh}get width(){return this._width}get height(){return this._height}get area(){return this._apartmentArea}get aspectRatio(){return this._aspectRatio}get mesh(){return this._mesh}get vertices(){return this._vertices}logApartment(){console.log("Apartment width",this._width," | height ",this._height," | pos ",this._position)}convertToRectangle(){return new pt().fromCoords(this._width,this._height,this._position.x,this._position.y)}}class pt{constructor(){this._color=new st(Math.random(),Math.random(),Math.random()),this._material=new Xo({color:this._color,side:$n}),this._width=void 0,this._height=void 0,this._area=void 0,this._pos=void 0,this._isHorizontal=void 0,this._longerSideLength=void 0,this._shorterSideLength=void 0,this._vertices=void 0,this._edges=void 0}setColor(e){return this._color=e,this._material=new Xo({color:e,side:$n}),this}changeColor(e){this._color=e,this._material=new Xo({color:e,side:$n})}fromVertices(e){let t=e;typeof e=="object"&&(t=Object.values(e));let n=t[0],s=t[1],a=t[2],c=t[3];this._vertices={upperLeft:n,upperRight:s,lowerRight:a,lowerLeft:c},this._width=this._vertices.upperLeft.distanceTo(this._vertices.upperRight),this._height=this._vertices.upperLeft.distanceTo(this._vertices.lowerLeft),this._area=this._width*this._height;let u=this._vertices.upperLeft.x+this._width/2,d=this._vertices.lowerLeft.y+this._height/2;return this._pos={x:u,y:d},this.generateEdges(),this.calculateOrientation(),this}fromCoords(e,t,n,s){return this._width=e,this._height=t,this._area=this._width*this._height,this._pos={x:n,y:s},this.generateVertices(),this.generateEdges(),this.calculateOrientation(),this}generateVertices(){let e=new Q(this._pos.x-this._width/2,this._pos.y+this._height/2),t=new Q(this._pos.x+this._width/2,this._pos.y+this._height/2),n=new Q(this._pos.x+this._width/2,this._pos.y-this._height/2),s=new Q(this._pos.x-this._width/2,this._pos.y-this._height/2);this._vertices={upperLeft:e,upperRight:t,lowerRight:n,lowerLeft:s}}generateEdges(){this._vertices==null&&console.error("Cannot Generate Edges, vertices are not defined for this rect!");let e=new jn(this._vertices.upperLeft,this._vertices.upperRight),t=new jn(this._vertices.upperRight,this._vertices.lowerRight),n=new jn(this._vertices.lowerLeft,this._vertices.lowerRight),s=new jn(this._vertices.upperLeft,this._vertices.lowerLeft);this._edges={upperEdge:e,rightEdge:t,lowerEdge:n,leftEdge:s},this._longerSideLength=Math.max(this._width,this._height),this._shorterSideLength=Math.min(this._width,this._height)}generateShapeMesh(){const e=new dl,t=Object.values(this._vertices);e.moveTo(t[0].x,t[0].y),t.slice(1).forEach(a=>{e.lineTo(a.x,a.y)}),this._shape=e;const n=new ia(e);this._geometry=n;const s=new Pn(this._geometry,this._material);return this._mesh=s,this._mesh}splitEvenlyOriented(e,t){let n=[];if(console.log("> Split Rectangle evenly oriented along the longer side"),t){let s=this._edges.upperEdge.splitEvenly(e),a=this._edges.lowerEdge.splitEvenly(e);for(let c=0;c<e;c++){let u=[s[c].vertices.vertice1,s[c].vertices.vertice2,a[c].vertices.vertice2,a[c].vertices.vertice1],d=new pt().fromVertices(u);n.push(d)}}else{let s=this._edges.rightEdge.splitEvenly(e),a=this._edges.leftEdge.splitEvenly(e);for(let c=0;c<e;c++){let u=[a[c].vertices.vertice1,s[c].vertices.vertice1,s[c].vertices.vertice2,a[c].vertices.vertice2],d=new pt().fromVertices(u);n.push(d)}}return n}splitRandomlyMinMaxSizeOriented(e,t,n){if(console.log("> Split Rectangle in n randomly sized splits oriented along it's longer side"),this._area==null)return console.error("Area is not defined! Cannot split rectangle!"),null;let s=Li.getInstance().divideValueIntoPartsMinMax(this._area,e,t,n);return console.log(" Splitrandomlyminmaxoriented: n:",e," min:",t," max:",n," Parts: ",s),this.generateSubRectsFromAreaPartsOriented(s)}splitRandomlyMinMaxWidthOriented(e,t,n,s){let a=s?this.edges.lowerEdge.length:this.edges.rightEdge.length;console.log("> split LA of splitting edge width ",a," into ",e," parts ");const c=Li.getInstance().divideValueIntoPartsMinMax(a,e,t,n);return this.generateSubRectsFromEdgePartsOriented(c,s)}splitSTMMinMax(e,t,n){console.log(">>> Start Rect STM for Rect: ",this._pos,this._width,this._height);let s=Li.getInstance().divideValueIntoPartsMinMax(Li.getInstance().roundTwoDigits(this._area),e,Li.getInstance().roundTwoDigits(t*this._area),Li.getInstance().roundTwoDigits(n*this._area));console.log("splitSTMminmax unsorted Aps ",s),s.sort((p,g)=>g-p),console.log(s);let a=s.slice(0),c=[],u={a:new Q(0,this._height),b:new Q(0,0)},d={a:new Q(0,0),b:new Q(this._width,0)};for(;a.length>0;){let p=Li.getInstance().distanceBetweenTwoVertices(u.a,u.b),g=Li.getInstance().distanceBetweenTwoVertices(d.a,d.b),v=[];if(g>p)for(;a.length>0;){if(v.length==0){let w=a.shift();v.push(new Ii(w,null,p))}let y=Math.max(...v.map(w=>w.aspectRatio)),S=(v.reduce((w,z)=>w+z.area,0)+a[0])/p,x=v.map(w=>new Ii(w._area,w._width,w._height));for(let w of x)w.width=S;let L=new Ii(a[0],S,null);x.push(L);let R=Math.max(...x.map(w=>w.aspectRatio));if(y>R)v=x,a.shift();else{let w=u.b.x,z=u.b.y,U=1;for(let O of v){let Y=w+O.width/2,P=z+O.height/2,N=new st(Math.random(),Math.random(),Math.random()),I=new xu(O.area,N,O.width,O.height,Y,P);c.push(I),z+=O.height,U==1&&(u.b=I.vertices.b,d.a=I.vertices.b),U==v.length&&(u.a=I.vertices.c),U++}for(let O of c);break}}else for(;a.length>0;){if(v.length==0){let w=a.shift();console.log("left apartment sizes: ",a);let z=new Ii(w,g,null);v.push(z)}let y=Math.max(...v.map(w=>w.aspectRatio)),S=(v.reduce((w,z)=>w+z.area,0)+a[0])/g,x=v.map(w=>new Ii(w._area,w._width,w._height));for(let w of x)w.height=S;let L=new Ii(a[0],null,S);x.push(L);let R=Math.max(...x.map(w=>w.aspectRatio));if(y>R)v=x,a.shift();else{let w=d.a.y,z=d.a.x,U=1;for(let O of v){let Y=w+O.height/2,P=z+O.width/2,N=new st(Math.random(),Math.random(),Math.random()),I=new xu(O.area,N,O.width,O.height,P,Y);c.push(I),z+=O.width,U==1&&(d.a=I.vertices.d,u.b=I.vertices.d),U==v.length&&(d.b=I.vertices.c),U++}for(let O of c);break}}}const f=[];console.log("All Rect-STM-ed apartments: ");for(let p of c)p.logApartment(),f.push(p.convertToRectangle());return console.log(">>>>>> End Rect-STM "),f}generateSubRectsFromAreaPartsOriented(e){console.log("> Generate SubRects from Parts");let t=[],n=[];if(this._width>this._height){for(let c of e)t.push(c/this._height);let s=this.edges.upperEdge.splitIntoParts(t),a=this.edges.lowerEdge.splitIntoParts(t);for(let c of s);for(let c of a);for(let c=0;c<e.length;c++){let u=[s[c].vertices.vertice1,s[c].vertices.vertice2,a[c].vertices.vertice2,a[c].vertices.vertice1],d=new pt().fromVertices(u);n.push(d)}}else{for(let c of e)t.push(c/this._width);let s=this.edges.leftEdge.splitIntoParts(t),a=this.edges.rightEdge.splitIntoParts(t);for(let c of s);for(let c of a);for(let c=0;c<e.length;c++){let u=[s[c].vertices.vertice1,a[c].vertices.vertice1,a[c].vertices.vertice2,s[c].vertices.vertice2],d=new pt().fromVertices(u);n.push(d)}}return n}generateSubRectsFromEdgePartsOriented(e,t){let n=[];if(console.log(">generateSubRectsFromEdgePartsOriented",e," horizontally? ",t),t){const s=this.edges.lowerEdge.splitIntoParts(e);for(const a of s)n.push(a.spawnRectangle(this.edges.rightEdge.length,new Q(0,1)))}else{const s=this.edges.rightEdge.splitIntoParts(e);for(const a of s)n.push(a.spawnRectangle(this.edges.lowerEdge.length,new Q(-1,0)))}return n}getPointHelperMesh(){const e=new cl(.1,32,16),t=new Zo({color:16777215}),n=new Pn(e,t);return n.position.set(this._pos.x,this._pos.y,0),n}getVerticesPointHelperMeshes(){const e=[],t=[16711680,65280,255,65535];let n=0;for(let s of Object.values(this._vertices)){const a=new cl(.3,32,16),c=new Zo({color:t[n]}),u=new Pn(a,c);u.position.set(s.x,s.y,0),e.push(u),n++}return e}shapeAndVerticesPointHelperMesh(){return this.generateShapeMesh().add(...this.getVerticesPointHelperMeshes())}calculateOrientation(){(this._height==null||this._width==null)&&console.error(">calculateOrientation Error: height || width not set!"),this._isHorizontal=this._width>this._height}get material(){return this._material}get color(){return this._color}get edges(){return this._edges}get vertices(){return this._vertices}get isHorizontal(){return this._isHorizontal}get longerSideLength(){return this._longerSideLength}get shorterSideLength(){return this._shorterSideLength}}class jn{constructor(e,t){this._vertices={vertice1:e,vertice2:t},this._color=new st(Math.random(),Math.random(),Math.random()),this._material=new Xo({color:this._color,side:$n}),this._isHorizontal=this.vertices.vertice1.y==this.vertices.vertice2.y,this._middleVertice=new Q((this._vertices.vertice1.x+this._vertices.vertice2.x)/2,(this._vertices.vertice1.y+this._vertices.vertice2.y)/2)}get length(){return this._vertices.vertice1.distanceTo(this._vertices.vertice2)}get material(){return this._material}get vertices(){return this._vertices}get isHorizontal(){return this._isHorizontal}get middleVertice(){return this._middleVertice}splitEvenly(e){let t=[],n=new Q;n.subVectors(this._vertices.vertice2,this._vertices.vertice1);let s=this._vertices.vertice1;for(let a=0;a<e;a++){let c=s.clone(),u=c.clone().addScaledVector(n,1/e);t.push(new jn(c,u)),s=u}return t}splitByLength(e){let t=[];if(e>=this.length){console.error("Invalid splitting length: too long");return}let n=new Q;n.subVectors(this._vertices.vertice2,this._vertices.vertice1);let s=e/this.length,a=this._vertices.vertice1,c=a.clone();c.addScaledVector(n,s);let u=this._vertices.vertice2;return t.push(new jn(a,c)),t.push(new jn(c,u)),t}splitIntoParts(e){let t=[],n=new Q;n.subVectors(this._vertices.vertice2,this._vertices.vertice1);let s=this._vertices.vertice1,a=this.length;for(let c=0;c<e.length;c++){let u=s.clone(),d=u.clone().addScaledVector(n,e[c]/a);t.push(new jn(u,d)),s=d}return t}spawnRectangle(e,t){if(this._isHorizontal&&t.x!=0&&t.y==0){console.error("Invalid direction for horizontal edge!");return}if(!this._isHorizontal&&t.x==0&&t.y!=0){console.error("Invalid direction for vertical edge!");return}let n,s,a,c;return this._isHorizontal?(n=this._middleVertice.x,s=this._middleVertice.y+t.y*e/2,a=this.length,c=e):(n=this._middleVertice.x+t.x*e/2,s=this._middleVertice.y,a=e,c=this.length),new pt().fromCoords(a,c,n,s)}printEdge(){console.log("V1: ",this._vertices.vertice1,"V2: ",this._vertices.vertice2)}}var Vs;const rs=class rs{constructor(){if(Cs(rs,Vs))throw new Error("You can only create one instance of HouseCalculator. Use HouseCalculator.getInstance().");md(rs,Vs,this),this.name="House Calculator"}static getInstance(){return Cs(rs,Vs)||new rs,Cs(rs,Vs)}calculateK(e,t,n){return(e-n*t)/(2*t)}calculateMaxCorridorsOriented(e,t,n){console.log(">calculateMaxCorridorsOriented");let s=this.calculateK(e,1,t);if(s<n)return console.log("Max Corridors for side ",e," IS 0, because  k for i=1 is ",s," and minapWidth is ",n),0;let a=0;for(;this.calculateK(e,a+1,t)>=n;)a++;return console.log("Max Corridors for side ",e," corridorWidth ",t," minapwidth",n,"final k: ",this.calculateK(e,a,t)),console.log("=",a),a}calculateMinCorridorsOriented(e,t,n){if(console.log(">calculateMinCorridorsOriented"),e<=n)return console.log("no corr needed! because maxApartmentWidth is ",n,"which already fits into the placement side of length ",e),0;let s=1;for(;this.calculateK(e,s,t)>n;)s++;return console.log("Min Corridors for side ",e," corridorWidth ",t," maxapwidth",n,"final k: ",this.calculateK(e,s,t)),console.log("=",s),s}calculateCorridorThresholds(e,t,n,s){console.log(">calculateCorridorThresholds");let a=e>t?e:t,c=e<t?e:t,u=this.calculateMaxCorridorsOriented(a,n,s),d=this.calculateMaxCorridorsOriented(c,n,s),f=u>d?u:d,p=[];for(let g=1;g<=f;g++){let v={shorter:null,longer:null};if(this.calculateK(c,g,n)>=s){const E=this.calculateMaxApartmentsCountedOriented(n,s,g,a);v.shorter=E}if(this.calculateK(a,g,n)>=s){const E=this.calculateMaxApartmentsCountedOriented(n,s,g,c);v.longer=E}p.push(v)}return p}calculateMinMaxCorridorThresholds(e,t,n,s,a){console.log(">calculateMinMaxCorridorThresholds");let c=e>t?e:t,u=e<t?e:t,d=this.calculateMaxCorridorsOriented(c,n,s),f=this.calculateMaxCorridorsOriented(u,n,s),p=d>f?d:f,g=this.calculateMinCorridorsOriented(u,n,a),v=this.calculateMinCorridorsOriented(c,n,a),y=v<g?v:g,M=[];for(let E=y;E<=p;E++){console.log("---------- threshold iteration: current i = ",E);let S={i:E,shorter:null,longer:null};if(E==0){console.log("longerside:",c,"shorterside:",u,"minwidth",s,"maxwidth",a),console.log("Types: longer ",typeof c,"shorter ",typeof u," minw",typeof s," maxw",typeof a),a>=c&&(console.log("i = 0 / 1,1 fits because of max =",a," and longer = ",c,"and max >= longer",a>=c),S.shorter={min:1,max:1},S.longer={min:1,max:1}),console.log("---------- threshold iteration",E," end "),M.push(S);continue}const x=this.calculateK(u,E,n);if(console.log("shorter k would be ",x),x>=s&&x<=a){console.log("fits!");const R=this.calculateMaxApartmentsCountedOriented(n,s,E,c),w=this.calculateMinApartmentsCountedOriented(n,a,E,c);R==null&&w==null?(console.log("Invalides Layout bzgl. L, da ein oder mehr LAs nicht gefüllt werden können!"),S.shorter=null):S.shorter={min:w,max:R}}const L=this.calculateK(c,E,n);if(console.log(" longer k would be ",L),L>=s&&L<=a){console.log("fits!");const R=this.calculateMaxApartmentsCountedOriented(n,s,E,u),w=this.calculateMinApartmentsCountedOriented(n,a,E,u);S.longer={min:w,max:R}}console.log("---------- threshold iteration",E," end "),M.push(S)}return M}calculateMaxApartmentsLivingArea(e,t,n){return Math.floor(n?e.edges.lowerEdge.length/t:e.edges.rightEdge.length/t)}calculateMinApartmentsLivingArea(e,t,n){return Math.ceil(n?e.edges.lowerEdge.length/t:e.edges.rightEdge.length/t)}calculateMaxAparmentsLayout(e,t,n,s){console.log("> calculateMaxApartments and its layout");let a=e>t?e:t,c=e<t?e:t,u=this.calculateMaxCorridorsOriented(a,n,s),d=this.calculateMaxCorridorsOriented(c,n,s);if(console.log("longer side max corrs:",u,"shorter side max corrs:",d),u==0&&d==0)return console.log("No corridor could be produced, so no maxApartmentsLayout!"),null;let f=0,p=0,g=0,v;console.log("calc max apartments for longer side:");for(let M=0;M<=u;M++){let E=this.calculateMaxApartmentsCountedOriented(n,s,M,c);E>f&&(f=E,p=M)}console.log("calc max apartments for shorter side:");for(let M=0;M<=d;M++){let E=this.calculateMaxApartmentsCountedOriented(n,s,M,a);E>g&&(g=E,v=M)}let y;return f>g?(y=this.calculateK(a,p,n),[!0,p,y]):(y=this.calculateK(c,v,n),[!1,v,y])}calculateMinApartmentsAbsolute(){}calculateMaxAparmentsCounted(e,t,n,s,a){let c=e>t?e:t,u=e>t?t:e;console.log("> Calc max Apartment Size, longer side",c," shorter side",u);let d=Math.floor(u/s),f=Math.floor((u-n)*.5/s),p=(a-1)*2;return 2*d+p*f}calculateMaxApartmentsCountedOriented(e,t,n,s){if(console.log(">calc Max aps counted oriented for corwidth ",e,"minapW",t,"corrCount",n,"side",s),n==0)return 1;let a=Math.floor(s/t);if(n==1)return a==0?(console.error("maxApartments error: full LA (at i == 0) cannot be filled with apartments!"),null):2*a;let c=Math.floor((s-e)*.5/t);if(a==0||c==0)return console.error("maxApartments error: one LA cannot be filled with apartments!"),null;let u=(n-1)*4;return 2*a+u*c}calculateMinApartmentsCountedOriented(e,t,n,s){if(console.log(">calc min aps counted oriented for corwidth ",e,"maxapW",t,"corrCount",n,"side",s),n==0)return 1;let a=Math.ceil(s/t);if(n==1)return a==0?(console.error("minApartments error: full LA (at i == 0) cannot be filled with apartments!"),null):2*a;let c=Math.ceil((s-e)*.5/t),u=(n-1)*4;return a==0||c==0?(console.error("minApartments error: one LA cannot be filled with apartments!"),null):2*a+u*c}calculateRandomNDivisionsMinMax(e,t,n,s,a){console.log("> Calc N Divisions for Living Areas inputs",e,t,n,s);let c=[],u=[];if(e.length>t)return console.error("calcNDivisions error: n",t," too small! each of the ",e.length," la must at least have one apartment"),[];for(let g of e)c.push(this.calculateMaxApartmentsLivingArea(g,n,a)),u.push(this.calculateMinApartmentsLivingArea(g,s,a));console.log("maxsplits: ",c," minsplits: ",u);const d=c.reduce((g,v)=>g+v,0);console.log(" total max splits",d);const f=u.reduce((g,v)=>g+v,0);if(console.log("Total min splits: ",f),console.log("now you want to split it into n: ",t," apartments"),t>d)return console.error(" n too high! cant divide in so many apartments"),[];if(t<f)return console.error(" n too low! must divide in more apartments"),[];if(t==d)return c;if(t==f)return u;let p=0;for(;c.reduce((g,v)=>g+v,0)!=t;){let g=Math.floor(Math.random()*c.length);if(c[g]>u[g]&&c[g]--,p++,p>100)return console.error("ENDLESSMITIGATION in calculateRandomNDivisions"),[]}return console.log("calculateNDivisions produced following splits:",c),console.log("sums up to: ",c.reduce((g,v)=>g+v,0)),c}calculateEvenNDivisionsMinMax(e,t,n,s,a){console.log("> calculateEvenNDivisionsMINMAX");let c=[],u=[],d=[];for(let x of e)u.push(this.calculateMaxApartmentsLivingArea(x,n,a)),d.push(this.calculateMinApartmentsLivingArea(x,s,a));console.log("maxsplits: ",u," minsplits: ",d);let f=u.reduce((x,L)=>x+L,0),p=d.reduce((x,L)=>x+L,0);if(t>f)return console.error(" n too high! cant divide in so many apartments"),[];if(t<p)return console.error(" n too low! must divide in more apartments"),[];if(f==t)return u;if(p==t)return d;const g=e.reduce((x,L)=>x+L.longerSideLength,0),v=[];for(const x of e)v.push(x.longerSideLength/g);console.log("LAPERCENTAGES: ",v);let y=t-p;console.log("Remaining n:",y," = n (",t,") minus already divided minAps:",p);let M=0,E=0;for(const x of v){const L=x*y,R=Math.floor(x*y);if(M+=L-R,c.push(d[E]+R),c[E]>u[E])return console.error("one nSplit is already greater than its maxSplit!"),[];E++}console.log("nSplits with minSplits and added percentage splits",c),console.log("unrounded apartment rest:",M),M=Math.round(M),console.log("rounded apartment rest:",M);let S=0;for(;M>0;){for(let x=0;x<e.length&&!(c[x]<u[x]&&(c[x]++,M--,M==0));x++);if(S++,S>50){console.log("HURENSOHN: iwie kann der rest von n nicht aufgeteilt werden.");break}}return c}calculateRandomNDivisions(e,t,n){console.log("> Calc N Divisions for Living Areas inputs",e,t,n);let s=[];if(e.length>t)return console.error("calcNDivisions error: n",t," too small! each of the ",e.length," la must at least have one apartment"),[];for(let u of e)s.push(this.calculateMaxApartmentsLivingArea(u,n));const a=s.reduce((u,d)=>u+d,0);if(console.log(" sums up to ",a),console.log("now you want to split it into n: ",t," apartments"),t>a)return console.error(" n too high! cant divide in so many apartments"),[];if(t==a)return s;let c=0;for(;s.reduce((u,d)=>u+d,0)!=t;){let u=Math.floor(Math.random()*s.length);if(s[u]>1&&s[u]--,c++,c>100)return console.error("ENDLESSMITIGATION in calculateRandomNDivisions"),[]}return console.log("calculateNDivisions produced following splits:",s),s}calculateEvenNDivisions(e,t,n){console.log("> calculateEvenNDivisions");let s=[],a=[];for(let p of e)a.push(this.calculateMaxApartmentsLivingArea(p,n));const c=e.reduce((p,g)=>p+g.longerSideLength,0),u=[];for(const p of e)u.push(p.longerSideLength/c);let d=0;for(const p of u){const g=p*t,v=Math.floor(p*t);d+=g-v,s.push(v)}d=Math.round(d);let f=0;for(;d>0;){for(let p=0;p<e.length&&!(s[p]<a[p]&&(s[p]++,d--,d==0));p++);if(f++,f>50){console.log("HURENSOHN");break}}return s}};Vs=new WeakMap,pd(rs,Vs);let js=rs;class xi{constructor(){this.houseArea=void 0,this.apartmentCount=void 0,this.houseWidth=void 0,this.houseHeight=void 0,this.k=void 0,this.i=void 0,this.corridorWidth=void 0,this.corridorThresholds=[],this.corridorsHorizontal=void 0,this.houseRect=void 0,this.totalRects=[],this.apartmentRects=[],this.roomRects=[],this.mainCorridorRects=[],this.connectorRects=[],this.livingAreaRects=[],this.corridorColor=new st(16776960),this.livingAreaColor=new st(16711880),this.apartmentColors=[new st(7256020),new st(4434385),new st(2006737),new st(35778),new st(25482)],this.vertices={a:null,b:null,c:null,d:null},this.apartments=[],this.apartmentSizes=[],this.houseShapeObject=null,this.houseCalc=js.getInstance()}calculateRooms(){this.randomHouseShape(),this.setFixedApartmentSizes(),console.log("--------------------STM START-----------------------"),console.log("--------------------STM END -----------------------"),console.log("simple rectangle floor start"),this.simpleRectangleFloor(),console.log("simple rectangle floor end")}definedHouseShape(e,t){if(e==null||t==null){console.error(">calculateDefinedHouseShape: House width or height not specified!");return}this.corridorThresholds=[],this.houseWidth=e,this.houseHeight=t,this.houseArea=e*t,this.position={x:this.houseWidth/2,y:this.houseHeight/2},this.houseRect=new pt().fromCoords(this.houseWidth,this.houseHeight,this.position.x,this.position.y),this.calculateHouseVertices();const n=[this.vertices.a,this.vertices.b,this.vertices.c,this.vertices.d];return this.houseShapeObject=new GL(n,16776977),this}randomHouseShape(e){var t=.6+.8*Math.random(),n=Math.sqrt(e*t),s=e/n;return this.definedHouseShape(n,s)}calculateHouseVertices(){(this.houseWidth==null||this.houseHeight==null)&&console.error("Error calculating house vertices! HouseWidth or height not defined!"),this.vertices.a=new Q(0,0),this.vertices.b=new Q(this.houseWidth,0),this.vertices.c=new Q(this.houseWidth,this.houseHeight),this.vertices.d=new Q(0,this.houseHeight)}setFixedApartmentSizes(){this.apartmentSizes=[15,13,12,6,2,2]}generateRandomApartmentSizes(){console.log(" ----- CALCULATE APARTMENT SIZES"),(this.apartmentCount==null||this.minApartmentSize==null||this.maxApartmentSize==null)&&console.log("ERROR: Missing data for generateRandomApartmentSizes");var e=this.houseArea/this.apartmentCount,t=e-this.minApartmentSize,n=this.maxApartmentSize-e;console.log("Desired house area:"+this.houseArea),console.log("Min apartment size:"+this.minApartmentSize+" Max apartment size: "+this.maxApartmentSize),console.log("Mean apartmenz size: "+e),console.log(" Min negative difference between Mean and Min apartment size:"+-t),console.log("Max positive difference between Mean and Max apartment size: "+n);var s=[],a=Math.random()*(n- -t)+-t,c=0;c+=a;for(var u=0;u<this.apartmentCount-1;u++){for(a=Math.random()*(n- -t)+-t;c+a<-t||c+a>n;)a=Math.random()*(n- -t)+-t;c+=a,console.log("intermediate variation sum "+c),s.push(e)}s.push(-c+e),console.log("random apartment sizes: "+s);var d=0;for(var f of s)d+=f;console.log("sum of random apartment sizes:"+d),this.apartmentSizes=s}simpleICorridor(e,t){if(this.corridorWidth=e,this.resetRects(),this.houseWidth>this.houseHeight){let n=new pt().fromCoords(this.houseWidth,this.houseHeight,this.position.x,this.position.y),s=new pt().fromCoords(this.houseWidth,e,this.position.x,this.position.y);console.log("corridor:",s),this.totalRects.push(s);let a=[n.vertices.upperLeft,n.vertices.upperRight,s.edges.upperEdge.vertices.vertice2,s.edges.upperEdge.vertices.vertice1];console.log("Constructing Rect from Vertices");let c=new pt().fromVertices(a),u=[s.edges.lowerEdge.vertices.vertice1,s.edges.lowerEdge.vertices.vertice2,n.vertices.lowerRight,n.vertices.lowerLeft],d=new pt().fromVertices(u),f=c.splitEvenlyOriented(t/2),p=d.splitEvenlyOriented(t/2);this.totalRects=this.totalRects.concat(f,p)}else{let n=new pt().fromCoords(this.houseWidth,this.houseHeight,this.position.x,this.position.y),s=new pt().fromCoords(e,this.houseHeight,this.position.x,this.position.y);this.totalRects.push(s);let a=[n.vertices.upperLeft,s.vertices.upperLeft,s.vertices.lowerLeft,n.vertices.lowerLeft],c=new pt().fromVertices(a),u=[s.vertices.upperRight,n.vertices.upperRight,n.vertices.lowerRight,s.vertices.lowerRight],d=new pt().fromVertices(u),f=c.splitEvenlyOriented(t/2),p=d.splitEvenlyOriented(t/2);this.totalRects=this.totalRects.concat(f,p)}return this}randomizedICorridor(e,t){if(this.corridorWidth=t,console.log("> RandomizedICorridor"),this.resetRects(),this.houseWidth>this.houseHeight){this.totalRects=[],this.k=(this.houseHeight-t)/2,console.log("Horizontal Corridor! with k",this.k);let n=new pt().fromCoords(this.houseWidth,this.houseHeight,this.position.x,this.position.y),s=new pt().fromCoords(this.houseWidth,t,this.position.x,this.position.y);console.log("corridor:",s),this.mainCorridorRects.push(s),this.totalRects.push(s);let a=[n.vertices.upperLeft,n.vertices.upperRight,s.edges.upperEdge.vertices.vertice2,s.edges.upperEdge.vertices.vertice1];console.log("Constructing Rect from Vertices");let c=new pt().fromVertices(a),u=[s.edges.lowerEdge.vertices.vertice1,s.edges.lowerEdge.vertices.vertice2,n.vertices.lowerRight,n.vertices.lowerLeft],d=new pt().fromVertices(u);d._area/(e/2);let f,p,g,v;e%2!=0?(f=Math.floor(e/2),p=Math.ceil(e/2)):(f=e/2,p=e/2),g=c._area/f,v=d._area/p;let y=g-3,M=g+3,E=v-3,S=v+3,x=c.splitRandomlyMinMaxSizeOriented(f,y,M),L=d.splitRandomlyMinMaxSizeOriented(p,E,S);this.apartmentRects=this.apartmentRects.concat(x,L),this.totalRects=this.totalRects.concat(x,L)}else{this.k=(this.houseWidth-t)/2,console.log("Vertical Corridor! with k:",this.k);let n=new pt().fromCoords(this.houseWidth,this.houseHeight,this.position.x,this.position.y),s=new pt().fromCoords(t,this.houseHeight,this.position.x,this.position.y);this.mainCorridorRects.push(s),this.totalRects.push(s);let a=[n.vertices.upperLeft,s.vertices.upperLeft,s.vertices.lowerLeft,n.vertices.lowerLeft],c=new pt().fromVertices(a),u=[s.vertices.upperRight,n.vertices.upperRight,n.vertices.lowerRight,s.vertices.lowerRight],d=new pt().fromVertices(u),f,p;e%2!=0?(f=Math.floor(e/2),p=Math.ceil(e/2)):(f=e/2,p=e/2);let g=c.splitEvenlyOriented(f),v=d.splitEvenlyOriented(p);this.apartmentRects=this.apartmentRects.concat(g,v),this.totalRects=this.totalRects.concat(g,v)}return this}singleCorridor(e,t){return console.log(">singleCorridor"),t?this.mainCorridorRects.push(new pt().fromCoords(e,this.houseHeight,this.houseWidth/2,this.houseHeight/2).setColor(this.corridorColor)):this.mainCorridorRects.push(new pt().fromCoords(this.houseWidth,e,this.houseWidth/2,this.houseHeight/2).setColor(this.corridorColor)),this}multiCorridorLayout(e,t,n){this.resetRects(),this.k=void 0,console.log("------------------>multiCorridorLayout on shorterside: ",n),this.corridorWidth=e;let s=this.houseWidth>this.houseHeight?this.houseWidth:this.houseHeight,a=this.houseWidth>this.houseHeight?this.houseHeight:this.houseWidth,c=n?a:s,u=n?s:a;if(console.log("multicorr placementSide: ",c," nonplacement ",u),t==0)return console.error("No Corridors!"),this.k=a,this;let d=!!(this.houseRect.isHorizontal&&!n||!this.houseRect.isHorizontal&&n);if(console.log(d?"horizontalplacement":"verticalplacement"),t==1){let v=this.houseCalc.calculateK(c,t,e);return this.k=v,this.i=1,this.singleCorridor(e,d)}let f=this.houseCalc.calculateK(c,t,e),p=[],g=[];if(d){let v=f+e/2,y=new pt().fromCoords(e,u,v,u/2).setColor(this.corridorColor);p.push(y);for(let M=2;M<=t;M++){v=v+2*f+e;let E=new pt().fromCoords(e,u,v,u/2).setColor(this.corridorColor);p.push(E)}for(let M=1;M<=t-1;M++){let E=M*(2*f+e),S=new pt().fromCoords(2*f,e,E,u/2).setColor(this.corridorColor);g.push(S)}this.k=f,this.i=t,this.mainCorridorRects=p,this.connectorRects=g}else{let v=f+e/2,y=new pt().fromCoords(u,e,u/2,v).setColor(this.corridorColor);p.push(y);for(let M=2;M<=t;M++){v=v+2*f+e;let E=new pt().fromCoords(u,e,u/2,v).setColor(this.corridorColor);p.push(E)}for(let M=1;M<=t-1;M++){let E=M*(2*f+e),S=new pt().fromCoords(e,2*f,u/2,E).setColor(this.corridorColor);g.push(S)}this.k=f,this.i=t,this.mainCorridorRects=p,this.connectorRects=g}return this}generateThresholds(e,t,n){return this.corridorThresholds=this.houseCalc.calculateMinMaxCorridorThresholds(this.houseWidth,this.houseHeight,e,t,n),this}adaptiveMultiCorridorLayout(e,t,n){if(this.resetRects(),console.log("------------------>adaptiveMultiCorridorLayout"),n==1)return this.multiCorridorLayout(e,0);this.corridorThresholds==[]&&(console.error("No thresholds generated beforehand! Do it now!"),this.corridorThresholds=this.houseCalc.calculateCorridorThresholds(this.houseWidth,this.houseHeight,e,t)),console.log("New Thresholds: ",this.corridorThresholds);let s=1,a;for(let c of this.corridorThresholds){if(c.longer>=n){a=!1,console.log("the best threshold is ",c.longer," and on longer side");break}if(c.shorter>=n){a=!0,console.log("the best threshold is ",c.shorter," and on shorter side");break}s++}return console.log("adapted to amount of corridors: ",s," and ",a?" shorter":" longer"),this.multiCorridorLayout(e,s,a)}adaptiveMinMaxMultiCorridorLayout(e,t,n,s){if(this.resetRects(),console.log("------------------>adaptiveMultiCorridorLayout with cw",e,"minWidth",t,"maxWidth",n," and n ",s),s==1)return console.log("n is 1, do i=0 layout"),this.multiCorridorLayout(e,0);this.corridorThresholds=this.houseCalc.calculateMinMaxCorridorThresholds(this.houseWidth,this.houseHeight,e,t,n),console.log("New Thresholds: ",this.corridorThresholds);let a=null,c;for(let u of this.corridorThresholds){if(u.longer!=null&&u.longer.min<=s&&u.longer.max>=s){c=!1,a=u.i,console.log("the best threshold is ",u.longer," for ",a," corridors on longer side");break}if(u.shorter!=null&&u.shorter.min<=s&&u.shorter.max>=s){c=!0,a=u.i,console.log("the best threshold is ",u.shorter," for ",a," corridors on shorter side");break}}return a==null?(console.error("ERROR: no house could be produced for this exact value of n"),null):(console.log("adapted to amount of corridors: ",a," and ",c?" shorter":" longer"),this.multiCorridorLayout(e,a,c))}generateLivingAreaRects(){console.log("------------------>generateLivingAreaRects");let e=this.livingAreaColor;this.livingAreaRects=[];const t=this.mainCorridorRects.length;if(this.k==null)return console.error(">LA Generation error: corridor generation was skipped!"),this;if(t==0)return console.log("0 corridors: 1 Living Area"),this.livingAreaRects.push(this.houseRect),this;if(t==1){let a=this.mainCorridorRects[0];if(a.isHorizontal){let c=a.edges.upperEdge.spawnRectangle(this.k,new Q(0,1)).setColor(e),u=a.edges.lowerEdge.spawnRectangle(this.k,new Q(0,-1)).setColor(e);this.livingAreaRects.push(c,u)}else{let c=a.edges.leftEdge.spawnRectangle(this.k,new Q(-1,0)).setColor(e),u=a.edges.rightEdge.spawnRectangle(this.k,new Q(1,0)).setColor(e);this.livingAreaRects.push(c,u)}return this}let n=this.mainCorridorRects[0].isHorizontal;if(n){console.log("LArects: horizontal corridors");const a=this.mainCorridorRects[0].edges.lowerEdge.spawnRectangle(this.k,new Q(0,-1)).setColor(e),c=this.mainCorridorRects[this.i-1].edges.upperEdge.spawnRectangle(this.k,new Q(0,1)).setColor(e);this.livingAreaRects.push(c,a)}else{console.log("LArects: vertical corridors");const a=this.mainCorridorRects[0].edges.leftEdge.spawnRectangle(this.k,new Q(-1,0)).setColor(e),c=this.mainCorridorRects[this.i-1].edges.rightEdge.spawnRectangle(this.k,new Q(1,0)).setColor(e);this.livingAreaRects.push(a,c)}const s=(this.mainCorridorRects[0].longerSideLength-this.corridorWidth)/2;if(n){const a=this.connectorRects.flatMap(u=>u.edges.leftEdge.splitEvenly(2)),c=this.connectorRects.flatMap(u=>u.edges.rightEdge.splitEvenly(2));for(const u of a)this.livingAreaRects.push(u.spawnRectangle(s,new Q(-1,0)).setColor(e));for(const u of c)this.livingAreaRects.push(u.spawnRectangle(s,new Q(1,0)).setColor(e))}else{const a=this.connectorRects.flatMap(u=>u.edges.upperEdge.splitEvenly(2)),c=this.connectorRects.flatMap(u=>u.edges.lowerEdge.splitEvenly(2));for(const u of a)this.livingAreaRects.push(u.spawnRectangle(s,new Q(0,1)).setColor(e));for(const u of c)this.livingAreaRects.push(u.spawnRectangle(s,new Q(0,-1)).setColor(e))}return console.log("laRects:  ",this.livingAreaRects),this}fillLivingAreasWithApartments(e,t,n){if(this.apartmentRects=[],console.log("------------------>fillLivingAreasWithApartments normal/Random"),this.livingAreaRects==null){console.error("fillLivingAreasWithRooms error: no living areas present!");return}if(this.livingAreaRects.length==1)return console.log("1 living area: 1 room"),this.apartmentRects.push(this.houseRect),this;let s,a=this.mainCorridorRects[0].isHorizontal;return n?(console.log("do fillings n-Splitting considering MIN MAX"),s=this.houseCalc.calculateRandomNDivisionsMinMax(this.livingAreaRects,e,t,n,a)):(console.log("do fillings n-Splitting only considering MIN"),s=this.houseCalc.calculateRandomNDivisions(this.livingAreaRects,e,t)),console.log("Random Living area Splits: ",s),console.log("sum: ",s.reduce((c,u)=>c+u,0)),this.livingAreaRects.forEach((c,u)=>{this.apartmentRects.push(...c.splitRandomlyMinMaxWidthOriented(s[u],t,n,a))}),this.recolorApartments(),this}fillLivingAreasWithApartmentsEvenly(e,t,n){if(this.apartmentRects=[],console.log("------------------> fillLivingAreasWithAps evenly"),this.livingAreaRects==null){console.error("fillLivingAreasWithRooms error: no living areas present!");return}if(this.livingAreaRects.length==1)return console.log("1 living area: 1 room"),this.apartmentRects.push(this.houseRect),this;let s=this.mainCorridorRects[0].isHorizontal,a;return n?(console.log(" split n evenly MINMAX"),a=this.houseCalc.calculateEvenNDivisionsMinMax(this.livingAreaRects,e,t,n,s)):(console.log(" split n evenly regular"),a=this.houseCalc.calculateEvenNDivisions(this.livingAreaRects,e,t)),console.log("Even Living area Splits: ",a),console.log("sum: ",a.reduce((c,u)=>c+u,0)),this.livingAreaRects.forEach((c,u)=>{this.apartmentRects.push(...c.splitEvenlyOriented(a[u],s))}),this.recolorApartments(),this}recolorApartments(){let e=0;for(let t of this.apartmentRects)t.changeColor(this.apartmentColors[e]),e++,e>this.apartmentColors.length-1&&(e=0)}fillApartmentsWithSTMRooms(e,t,n){console.log("> Rect-STM for apartmentRects:  ",this.apartmentRects);let s=0,c=this.apartmentRects[2].splitSTMMinMax(e,t,n);this.roomRects=c;for(let u of this.apartmentRects){console.log("STMing Apartment no. ",s);let d=u.splitSTMMinMax(e,t,n);this.roomRects=this.roomRects.concat(d),this.totalRects=this.totalRects.concat(d),s++}return this}squarifiedTreeMap(e){console.log("Start STM"),this.apartmentSizeList==[]&&console.error("ERROR: STM requires apartmentSizeList");let t=e.slice(0),n={a:new Q(0,this.houseHeight),b:new Q(0,0)},s={a:new Q(0,0),b:new Q(this.houseWidth,0)};for(;t.length>0;){let a=Li.getInstance().distanceBetweenTwoVertices(n.a,n.b),c=Li.getInstance().distanceBetweenTwoVertices(s.a,s.b),u=[];if(console.log("current width",c,"currentheigt",a),c>a)for(console.log("wider than high");t.length>0;){if(console.log(">>>>>>>>>>>>>>>New Iteration of trying to add preApartments to left wall row"),u.length==0){let E=t.shift();console.log("left apartment sizes: ",t),console.log("First in Row:"),u.push(new Ii(E,null,a))}let d=Math.max(...u.map(E=>E.aspectRatio)),g=(u.reduce((E,S)=>E+S.area,0)+t[0])/a;console.log("Copying currentRow preAp list");let v=u.map(E=>new Ii(E._area,E._width,E._height));for(let E of v)E.width=g;console.log("Create possible next preAp:");let y=new Ii(t[0],g,null);v.push(y);let M=Math.max(...v.map(E=>E.aspectRatio));if(console.log("Test: nextRow worst aspect Ratio",M,"vs currentRow worst aspect Ratio",d),d>M)u=v,console.log("aspect Ratio improved"),t.shift(),console.log("left apartment sizes: ",t);else{console.log("aspect Ratio worsened");let E=n.b.x,S=n.b.y,x=1;for(let L of u){let R=E+L.width/2,w=S+L.height/2,z=new st(Math.random(),Math.random(),Math.random()),U=new xu(L.area,z,L.width,L.height,R,w);this.apartments.push(U),S+=L.height,x==1&&(console.log("set left wall b"),n.b=U.vertices.b,s.a=U.vertices.b),x==u.length&&(console.log("set left wall a"),n.a=U.vertices.c),x++}console.log("new left wall:",n),console.log("new lower wall ",s),console.log("fixed apartments after left wall placement:");for(let L of this.apartments)L.logApartment();console.log(">>>>>>>>>>>>>>> END of left wall placement ");break}}else for(console.log("higher than wide");t.length>0;){if(console.log("vvvvvvvvvvvvvvvvvvv New Iteration of trying to add preApartments to lower wall row"),u.length==0){let E=t.shift();console.log("left apartment sizes: ",t);let S=new Ii(E,c,null);u.push(S)}let d=Math.max(...u.map(E=>E.aspectRatio)),g=(u.reduce((E,S)=>E+S.area,0)+t[0])/c,v=u.map(E=>new Ii(E._area,E._width,E._height));for(let E of v)E.height=g;let y=new Ii(t[0],null,g);v.push(y);let M=Math.max(...v.map(E=>E.aspectRatio));if(console.log("Test: nextRow worst aspect Ratio",M,"vs currentRow worst aspect Ratio",d),d>M)u=v,console.log(" lower aspect Ratio improved"),t.shift(),console.log("left apartment sizes: ",t);else{console.log("aspect Ratio worsened");let E=s.a.y,S=s.a.x,x=1;for(let L of u){let R=E+L.height/2,w=S+L.width/2,z=new st(Math.random(),Math.random(),Math.random()),U=new xu(L.area,z,L.width,L.height,w,R);this.apartments.push(U),S+=L.width,console.log("setting lower wall"),x==1&&(s.a=U.vertices.d,n.b=U.vertices.d),x==u.length&&(s.b=U.vertices.c),x++}console.log("new left wall:",n),console.log("new lower wall ",s),console.log("fixed apartments after lower wall placement:");for(let L of this.apartments)L.logApartment();console.log("vvvvvvvvvvvvvvvvvvv END of iteration of trying to add preApartments to lower wall row");break}}}}getHouseMesh(){return this.houseShapeObject.getMesh()}getAllMeshes(){let e=[this.getHouseMesh()];e[0].position.add(new W(0,0,-.1));for(let t of this.apartments)e.push(t.mesh);return e}getPointHelperMesh(e,t){const n=new cl(.1,32,16),s=new Zo({color:16776960}),a=new Pn(n,s);return a.position.set(e,t,0),a}calculateFloorPlan(){this.vertices.a,this.vertices.c;var e=[];this.vertices.a,this.vertices.b,this.vertices.b,this.vertices.c,this.vertices.c,this.vertices.d,e=this.apartments.slice(0,3),console.log("Räume 1-3:",e);let t=e.reduce((s,a)=>s+a.area,0);console.log("Räume 1-3 Area sum: ",t);let n=t/placementWallLength;console.log("roomblockwidth: ",n,"wall length: ",placementWallLength," roomblock area sum redone: ",n*placementWallLength)}resetRects(){this.totalRects=[],this.apartmentRects=[],this.roomRects=[],this.mainCorridorRects=[],this.connectorRects=[],this.livingAreaRects=[]}}L_();class nx{constructor(e,t,n,s){this.houseWidth=void 0,this.houseHeight=void 0,this.corridorWidth=n,this.minApartmentWidth=s,this.houseCalc=js.getInstance(),this.longerSide=void 0,this.shorterSide=void 0,this.calculateSides(),this.checkCorridorWidth()}getMaxCorridorWidth(e,t){return this.houseWidth=e,this.houseHeight=t,this.calculateSides(e,t),this.longerSide-2}getMaxMinApWidth(e,t,n){return this.houseWidth=e,this.houseHeight=t,this.calculateSides(e,t),console.log("min upper limit for w/h -> ls/ss",e,t,this.longerSide,this.shorterSide),this.shorterSide}getMaxApWidthUpperLimit(e,t,n){return this.houseWidth=e,this.houseHeight=t,this.calculateSides(e,t),this.longerSide}isMinWidthTooBigForCorridor(e,t,n,s){let a=this.houseCalc.calculateK(e,1,n),c=this.houseCalc.calculateK(t,1,n);return a<s&&c<s?(console.log("> minWidth ",s,"is too big for corridor, because k1: ",a," k2:",c),!0):!1}getMaxWidthLowerLimit(e,t,n,s){console.log("> Get the lower max widht limit for non crashing! inputs: ",e,t,n,s);let a=e>t?e:t,c=e>t?t:e,u=this.houseCalc.calculateMaxAparmentsLayout(e,t,n,s);if(console.log("the layout with the max amount of apartments is this:",u),u==null)return console.log("max aps layout resulted in i = 0: no corridor!"),null;let[d,f,p]=u;console.log("The absolute max apartment layout is: on longerside placement ",d,"i:",f," k for this layout",p);let g=d?c:a,v=(g-n)/2,y=Math.floor(g/s),M=g/y,E;if(f==1)return console.log("lower limit max ap width for 1 corridor - from Full LA:",M," vs k ",p,"for this layout"),E=Math.max(M,p),E==p?console.log(" the final minimal comes from k!"):console.log("the final minimal comes from a LA average Ap"),Math.ceil(E);{let S=Math.floor(v/s),x=v/S;return console.log("lower limit max ap width for",f," corridors - from full LA:",M,"vs from half LA:",x," vs k ",p,"for this layout"),E=Math.max(M,x,p),E==p?console.log(" the final minimal comes from k!"):console.log("the final minimal comes from a LA average Ap"),console.log("final minimal value for max Width is",E,"rounded up: ",Math.ceil(E)),Math.ceil(E)}}getMaxN(e){if(e.length==1&&e[0].i==0)return 1;let t=[];for(let n of e)n.shorter!=null&&t.push(n.shorter.max),n.longer!=null&&t.push(n.longer.max);return Math.max(...t)}getMinN(e){if(e.length==1&&e[0].i==0)return 1;let t=[];for(let n of e)n.shorter!=null&&t.push(n.shorter.min),n.longer!=null&&t.push(n.longer.min);return Math.min(...t)}checkCorridorWidth(e,t,n){return this.calculateSides(e,t),this.corridorWidth>=this.longerSide?(console.error("Corridor too big to fit into the building"),!1):!0}setWidth(){}calculateSides(e,t){this.longerSide=Math.max(e,t),this.shorterSide=Math.min(e,t)}getNRange(){if(this.minApartmentWidth>shorterSide)return console.error("MinApartmentWidth exceeds shorter side of the building!"),[];let e=this.houseCalc.calculateK(shorterSide,1,this.corridorWidth),t=this.houseCalc.calculateK(longerSide,1,this.corridorWidth);console.log("k1 shorter side:",e),console.log("k2 longer side:",t);let n=e>t?e:t;if(console.log("maxK: ",n),this.minApartmentWidth>n)return console.log("only one apartment with no corridors possible!"),[1];this.houseCalc.calculateMaxCorridors(),this.houseCalc.calculateMaxCorridors()}}class WL{constructor(e){this.rendering=e,this.isRandom=!1,this.testHouse=new xi}testTests(){console.log("Tests work!")}testRendering(){const e=new Zo({color:16737095,wireframe:!0}),t=new na(4,4,4),n=new Pn(t,e);n.position.set(0,20,0),n.add(new Gv(5)),this.cube=n,this.rendering.addToScene(n)}testVectors(){console.log("Vector tests");let e=new Q(0,0),t=new Q(5,5);console.log("v1",e),console.log("v2",t);let n=e.addScaledVector(t,.1);console.log("vec3",n),console.log("vec1 new? ",e);let s=new Q(10,0),a=new Q(15,0);console.log("vec4",s,"vec5",a);let c=new Q;c.subVectors(a,s),console.log(" v6 = direction: ",c)}testEdges(){console.log("Edge tests");let e=new jn(new Q(0,0),new Q(0,5));console.log("Edge length",e.length);let t=new jn(new Q(0,5),new Q(0,0));console.log("Inv Edge length",t.length);let n=new jn(new Q(5,0),new Q(2,8));console.log("negEdge length",n.length),console.log("Edge even subedges");let s=new jn(new Q(15,20),new Q(2,4));console.log("Edge to split:"),s.printEdge(),console.log("Edge to split:",s,"New Edges through splitting:");let a=s.splitEvenly(5);for(let p of a)p.printEdge(),this.rendering.addToScene(this.rendering.generateMeshFromVertices(p.vertices,p.material));let c=new jn(new Q(5,5),new Q(2,1));console.log("Edge subedges by length of ",c,"new Edges through length splitting");let u=c.splitByLength(c.length/3);for(let p of u)p.printEdge();let d=new jn(new Q(0,0),new Q(0,10));console.log("Edge subedges by parts of ",d,"new Edges through parts splitting");let f=d.splitIntoParts([2,3,2,1,2]);for(let p of f)p.printEdge(),console.log("=",p.length)}testEdgeRectSpawn(){let e=new st(255,0,0),t=new st(0,255,0),n=new pt().fromCoords(10,5,10,10).setColor(e),s=n.edges.leftEdge.spawnRectangle(5,new Q(-1,0)).setColor(t),a=n.edges.rightEdge.spawnRectangle(5,new Q(1,0)).setColor(t),c=n.edges.upperEdge.spawnRectangle(5,new Q(0,1)).setColor(t),u=n.edges.lowerEdge.spawnRectangle(5,new Q(0,-1)).setColor(t),d=[n,s,a,c,u];for(let f of d)console.log(f);this.rendering.addAllToScene(d.map(f=>f.generateShapeMesh()))}testRectangles(){let e=new pt().fromCoords(10,10,0,0);console.log("new rect vertices values"),console.log("ul: ",e.vertices.upperLeft,"ur: ",e.vertices.upperRight,"lr",e.vertices.lowerRight,"ll",e.vertices.lowerLeft),this.rendering.generateMeshFromVertices(e.vertices);let t=new pt().fromVertices([new Q(-5,5),new Q(5,5),new Q(5,-5),new Q(-5,-5)]);console.log("BZZZZZZ"),console.log("ul: ",t.vertices.upperLeft,"ur: ",t.vertices.upperRight,"lr",t.vertices.lowerRight,"ll",t.vertices.lowerLeft),this.rendering.generateMeshFromVertices(t.vertices),console.log("Now from Object");let n={upperLeft:new Q(-5,5),upperRight:new Q(10,5),lowerRight:new Q(10,-5),lowerLeft:new Q(-5,-5)};new Q(-5,10),new Q(5,10),new Q(5,-10),new Q(-5,-10);let s=new pt().fromVertices(n);this.rendering.generateMeshFromVertices(s.vertices,s.material);let a=s.splitEvenlyOriented(6);console.log("Splitted rects:",a);for(e of a);let c=5,u=10,d=new pt().fromCoords(c,u,0,0);d.splitRandomlyMinMaxSizeOriented(5,12,15),d.splitRandomlyMinMaxSizeOriented(5,5,8),console.log("----splitRandomlyMinMaxOriented");let f=d.splitRandomlyMinMaxSizeOriented(5,5,15);console.log("Split sizes: ",f);let p=0;for(let g of f)p+=g._area;console.log("Splitsum ",p," should be",u*c),console.log("Visualise Random Splitting ");for(let g of f)this.rendering.addToScene(this.rendering.generateMeshFromVertices(g.vertices,g.material))}testRectangleColors(){let e=new pt().fromCoords(5,5,0,0);e.setColor(16776960),console.log(e.generateShapeMesh()),this.rendering.addToScene(e.generateShapeMesh())}testRectangleHelpers(){const e={upperLeft:new Q(-5,5),upperRight:new Q(10,5),lowerRight:new Q(10,-5),lowerLeft:new Q(-5,-5)},t=new pt().fromVertices(e),n=t.generateShapeMesh();this.rendering.addToScene(n);const s=t.getPointHelperMesh();this.rendering.addToScene(s);const a=t.getVerticesPointHelperMeshes();this.rendering.addAllToScene(a)}testRectangleSTMSplitting(){const e={upperLeft:new Q(0,10),upperRight:new Q(15,10),lowerRight:new Q(15,0),lowerLeft:new Q(0,0)},t=new pt().fromVertices(e);console.log("Rect upperedge: ",t.edges.upperEdge.length,"rect rightEdge: ",t.edges.rightEdge.length);const n=t.generateShapeMesh();n.add(new Gv(5)),this.rendering.addToScene(n);const s=t.getVerticesPointHelperMeshes();this.rendering.addAllToScene(s);let a=t.splitSTMMinMax(5,.1,.4),c=[];for(let u of a)c.push(u.generateShapeMesh());console.log("STM APARMTENT MESHES",c),this.rendering.addAllToScene(c)}testRectangleRandomWidthSplitting(){let e=new pt().fromCoords(20,10,0,0),t=e.splitRandomlyMinMaxWidthOriented(5,3);this.rendering.addAllToScene([e.generateShapeMesh(),...t.flatMap(n=>n.generateShapeMesh())])}testHouses(e,t){console.log("House test with ",e,"apartments");let n=new xi(80,null,null,null,null).randomizedICorridor(e,t);console.log("house",n,"houserects",n.totalRects);for(let s of n.mainCorridorRects)this.rendering.addToScene(s.generateShapeMesh());for(let s of n.apartmentRects)this.rendering.addToScene(s.generateShapeMesh())}testHouseWithSTMRooms(e,t){console.log("House test with ",e,"apartments");let n=new xi(80,null,null,null,null).randomizedICorridor(e,t);for(let s of n.apartmentRects)this.rendering.addToScene(s.generateShapeMesh());for(let s of n.roomRects)this.rendering.addToScene(s.generateShapeMesh());for(let s of n.mainCorridorRects)this.rendering.addToScene(s.generateShapeMesh())}testHouseCalculator(e,t,n,s){let c=js.getInstance().calculateMaxCorridors(e,n,s);console.log("maxCorridors for hw ",e," hh ",t," cw ",n," minApW ",s),console.log(">>",c)}testHouseDefinedShape(e,t){let n=new xi(e*t,null,null,e,t,null,null);this.rendering.addToScene(n.getHouseMesh())}testMultiCorridorHouse(e,t,n,s){console.log("> testMultiCorridorHouse");let a=new xi(e*t,null,null,e,t,null,null),c=a.multiCorridorLayout(n,s).mainCorridorRects;console.log("multi corridor rects:",c),this.rendering.addToScene(a.getHouseMesh());for(let u of c)this.rendering.addToScene(u.generateShapeMesh())}testLivingAreaGeneration(e,t,n,s){let a=new xi(e*t,null,null,e,t,null,null).multiCorridorLayout(n,s).generateLivingAreaRects(),c=a.mainCorridorRects,u=a.connectorRects,d=a.apartmentRects,f=a.livingAreaRects;console.log("CRECTS",c,"houseConnectorRects",u,"HLARECTS",f,"APRECTS",d),this.rendering.addAllToScene(c.concat(f).concat(u).map(p=>p.generateShapeMesh()))}testLivingAreaApartmentFilling(e,t,n,s,a){console.log("------ Test livingAreaApartmentFilling");let c=new xi().definedHouseShape(e,t).multiCorridorLayout(n,s).generateLivingAreaRects().fillLivingAreasWithApartments(a,3);console.log("Testhouse",c)}testAdaptiveMultiCorridorLayout(e,t,n,s,a){console.log(">testAdaptiveMultiCorridorLayout"),console.log("Removed all previous per scene"),this.rendering.clearScene();let c=new xi().definedHouseShape(e,t).adaptiveMultiCorridorLayout(n,s,a).generateLivingAreaRects().fillLivingAreasWithApartments(a,s);console.log("adaptive corr house: ",c),this.rendering.addAllToScene([c.houseRect.generateShapeMesh(),...c.mainCorridorRects.flatMap(u=>u.generateShapeMesh()),...c.connectorRects.flatMap(u=>u.generateShapeMesh()),...c.apartmentRects.flatMap(u=>u.generateShapeMesh())])}testMinMaxAdaptiveMultiCorridorLayout(e,t,n,s,a,c){let u=new xi().definedHouseShape(e,t).generateThresholds(n,s,a).adaptiveMinMaxMultiCorridorLayout(n,s,a,c);u!=null&&(u.generateLivingAreaRects().fillLivingAreasWithApartments(c,s,a),console.log("generated test house",u),this.rendering.clearScene(),this.rendering.addAllToScene([...u.mainCorridorRects.flatMap(d=>d.generateShapeMesh()),...u.connectorRects.flatMap(d=>d.generateShapeMesh()),...u.apartmentRects.flatMap(d=>d.generateShapeMesh())]))}testNonrandomMinMaxAdaptiveMultiCorridorLayout(e,t,n,s,a,c){let u=new xi().definedHouseShape(e,t).generateThresholds(n,s,a).adaptiveMinMaxMultiCorridorLayout(n,s,a,c);if(u==null){console.log("No House Produced, so no filling etc.!");return}u.generateLivingAreaRects().fillLivingAreasWithApartmentsEvenly(c,s,a),console.log("generated test house",u),this.rendering.clearScene(),this.rendering.addAllToScene([...u.mainCorridorRects.flatMap(d=>d.generateShapeMesh()),...u.connectorRects.flatMap(d=>d.generateShapeMesh()),...u.apartmentRects.flatMap(d=>d.generateShapeMesh())])}testNonrandomAdaptiveMultiCorridorLayout(e,t,n,s,a){console.log(">testAdaptiveMultiCorridorLayout"),console.log("Removed all previous per scene"),this.rendering.clearScene();let c=new xi().definedHouseShape(e,t).adaptiveMultiCorridorLayout(n,s,a);if(c==null){console.log("No House Produced, so no filling etc.!");return}c.generateLivingAreaRects().fillLivingAreasWithApartmentsEvenly(a,s),console.log("adaptive corr house: ",c),this.rendering.addAllToScene([...c.mainCorridorRects.flatMap(u=>u.generateShapeMesh()),...c.connectorRects.flatMap(u=>u.generateShapeMesh()),...c.apartmentRects.flatMap(u=>u.generateShapeMesh())])}testNewHouseConstructor(e,t){let n=new xi().definedHouseShape(e,t);this.rendering.addToScene(n.houseRect.generateShapeMesh()),console.log("House: ",n)}testHouseCalcMaxApWidth(){console.log("pop");let e=40,t=30,n=1,s=5,a=10;new pt().fromCoords(t,e,0,0);let u=js.getInstance().calculateMinMaxCorridorThresholds(e,t,n,s,a);console.log(">>>> THRESHODELS",u)}testCalcMaxAps(e,t,n,s){}unitTests(){let e=new nx,t=Math.ceil(Math.random()*40),n=Math.ceil(Math.random()*40);e.getMaxCorridorWidth(t,n)}widthHeightUnitTest(){console.log(">>>>>>>>>> Width / Height unit test");let e=new xi,t=100,n=[];for(let a=0;a<t;a++){let c=Math.round(Math.random()*40),u=Math.round(Math.random()*40),d=e.definedHouseShape(c,u).houseRect;d._width==c&&d._height==u?n.push(1):(console.log("w h unit test Failed for houseRect ",d," and w/h ",c,u),n.push(0))}let s=n.reduce((a,c)=>a+c,0);console.log("Tests successful: ",s," / ",t)}corridorWidthUnitTest(){}apartmentWidthUnitTest(){}nUnitTest(){}setIsRandom(e){this.isRandom=e}}const C_=r=>{let e;const t=new Set,n=(f,p)=>{const g=typeof f=="function"?f(e):f;if(!Object.is(g,e)){const v=e;e=p??(typeof g!="object"||g===null)?g:Object.assign({},e,g),t.forEach(y=>y(e,v))}},s=()=>e,u={setState:n,getState:s,getInitialState:()=>d,subscribe:f=>(t.add(f),()=>t.delete(f))},d=e=r(n,s,u);return u},XL=r=>r?C_(r):C_,YL=r=>r;function qL(r,e=YL){const t=nv.useSyncExternalStore(r.subscribe,()=>e(r.getState()),()=>e(r.getInitialState()));return nv.useDebugValue(t),t}const N_=r=>{const e=XL(r),t=n=>qL(e,n);return Object.assign(t,e),t},ix=r=>r?N_(r):N_,An=ix(r=>({maxCorridorWidth:"",minApartmentWidthLowerLimit:"",minApartmentWidthLimit:"",maxApartmentWidthLowerLimit:"",maxApartmentWidthLimit:"",maxN:"",minN:"",setMaxCorridorWidth:e=>r({maxCorridorWidth:e}),setMinApartmentWidthLowerLimit:e=>r({minApartmentWidthLowerLimit:e}),setMinApartmentWidthLimit:e=>r({minApartmentWidthLimit:e}),setMaxApartmentWidthLowerLimit:e=>r({maxApartmentWidthLowerLimit:e}),setMaxApartmentWidthLimit:e=>r({maxApartmentWidthLimit:e}),setMaxN:e=>r({maxN:e}),setMinN:e=>r({minN:e})})),ln=ix(r=>({houseWidth:"",houseHeight:"",corridorWidth:"",minApartmentWidth:"",maxApartmentWidth:"",n:0,isRandom:!1,setHouseWidth:e=>r({houseWidth:e}),setHouseHeight:e=>r({houseHeight:e}),setCorridorWidth:e=>r({corridorWidth:e}),setMinApartmentWidth:e=>r({minApartmentWidth:e}),setMaxApartmentWidth:e=>r({maxApartmentWidth:e}),setN:e=>r({n:e}),setRandom:e=>r({isRandom:e})})),jL=r=>{const e=yi.useRef(null),t=yi.useRef(null),n=yi.useRef(),s=An(I=>I.setMaxCorridorWidth),a=An(I=>I.setMinApartmentWidthLowerLimit),c=An(I=>I.setMinApartmentWidthLimit),u=An(I=>I.setMaxApartmentWidthLowerLimit),d=An(I=>I.setMaxApartmentWidthLimit),f=An(I=>I.setMaxN),p=An(I=>I.setMinN);An(I=>I.maxApartmentWidthLowerLimit),An(I=>I.maxApartmentWidthLimit);const g=An(I=>I.maxN),v=An(I=>I.minN),y=ln(I=>I.setCorridorWidth),M=ln(I=>I.setMinApartmentWidth),E=ln(I=>I.setMaxApartmentWidth),S=ln(I=>I.setN),x=ln(I=>I.houseWidth),L=ln(I=>I.houseHeight),R=ln(I=>I.corridorWidth),w=ln(I=>I.minApartmentWidth),z=ln(I=>I.maxApartmentWidth),U=ln(I=>I.n),O=ln(I=>I.isRandom),Y=new nx(30,20,3,3),P=js.getInstance();let N=I=>{var K,fe;let se=I||Number(U);if(console.log("------------------>Refresh Canvas with inputs ",Number(x),Number(L),Number(R),Number(w),Number(z),se),O){(K=t.current)==null||K.testMinMaxAdaptiveMultiCorridorLayout(Number(x),Number(L),Number(R),Number(w),Number(z),Number(U));return}else{(fe=t.current)==null||fe.testNonrandomMinMaxAdaptiveMultiCorridorLayout(Number(x),Number(L),Number(R),Number(w),Number(z),se);return}};return yi.useEffect(()=>{console.log("MOUNTING"),e.current=new HL(n,r.widthFactor,r.heightFactor),t.current=new WL(e.current),console.log(" Objects after mounting: ",e.current,t.current)},[]),yi.useEffect(()=>{if(x===""||L==="")return;a(1);let I=Y.getMaxMinApWidth(x,L);console.log(" INPUT:  on width/height input: maxminapwidth limit ",I),c(I);let se=Y.getMaxApWidthUpperLimit(Number(x),Number(L));d(se);let K=Y.getMaxCorridorWidth(Number(x),Number(L));s(K),y(""),E(""),M(""),S(""),console.log(" INPUT: on width/height input: maxCorrwidth limit ",K)},[x,L]),yi.useEffect(()=>{if(x===""||L===""||w===""||z===""||R==="")return;E(""),M(""),S(""),console.log("INPUT: on corr widht input"),console.log("calc thresholds");let I=P.calculateMinMaxCorridorThresholds(Number(x),Number(L),Number(R),Number(w),Number(z)),se=Y.getMaxN(I);f(se);let K=Y.getMinN(I);console.log("-> maxN:",se," minN: ",K),p(K)},[R]),yi.useEffect(()=>{if(x===""||L===""||R===""||w==="")return;console.log("INPUT: on minApWidth input");let I=Y.getMaxWidthLowerLimit(Number(x),Number(L),Number(R),Number(w));u(I),S(""),f(""),p(""),E(""),Y.isMinWidthTooBigForCorridor(Number(x),Number(L),Number(R),Number(w))&&(f(1),p(1),console.log("     single apartment Case detected! on minApartmentWidth input is too big for even one corridor"),u(Y.getMaxApWidthUpperLimit(Number(x),Number(L))),E(Y.getMaxApWidthUpperLimit(Number(x),Number(L))))},[w]),yi.useEffect(()=>{if(x===""||L===""||R===""||w===""||z==="")return;console.log("INPUT: on maxApWidth input"),console.log("-> calculating thresholds: ");let I=P.calculateMinMaxCorridorThresholds(Number(x),Number(L),Number(R),Number(w),Number(z));console.log(">THRESHOLDS after maxWidth Input: ",I);let se=Y.getMaxN(I);f(se);let K=Y.getMinN(I);if(p(K),console.log("-->  on maxApWidth input, set maxN:",se," set minN ",K),se!=-1/0&&K!=-1/0){console.log("on successful maxWidth INPUT, set nInput to minN "),console.log("fixedNInput is",K),S(K),N(K);return}},[z]),yi.useEffect(()=>{if(console.log("nInput Changed to ",U),x===""||L===""||R===""||w===""||z===""||U===""){console.log("but returned! because width",x," hei",L,"corr",R," min",w," max",z," n ",U);return}if(Number(U)>Number(g)){console.log("Entered n",U," is too big! maxNLimit is ",g);return}if(Number(U)<Number(v)){console.log("Entered n",U," is too small! minNLimit is ",v);return}if(Number(U)==0){console.log("Can't process 0 apartments");return}N()},[U]),yi.useEffect(()=>{console.log("isRandom im Canvas: ",O),!(x===""||L===""||R===""||w===""||U==="")&&N()},[O]),Ut.jsx("div",{id:"canvas-div",style:{height:"80vh",display:"flex",justifyContent:"center",alignContent:"center"},children:Ut.jsx("div",{id:"canvas-wrapper",style:{width:"60vw",height:"70vh",overflow:"hidden",margin:"auto"},children:Ut.jsx("canvas",{ref:n,style:{width:"100%",height:"100%",borderRadius:"8px"}})})})},of=r=>Ut.jsxs("div",{style:{margin:"5px",border:"1px solid grey",borderRadius:"5px",padding:"5px"},children:[Ut.jsx("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:r.labelText}),Ut.jsx("input",{type:"email",className:"form-control",id:"exampleFormControlInput1",placeholder:r.placeHolder,onChange:e=>{r.onDataChange(e.target.value)},style:{width:"80%"}}),r.limitValue&&Ut.jsxs("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:["Limit: ",r.limitValue]})]}),af=r=>Ut.jsxs("div",{style:{margin:"5px",border:"1px solid grey",borderRadius:"5px",padding:"5px"},children:[Ut.jsx("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:r.labelText}),Ut.jsx("input",{type:"range",className:"form-range",min:r.lowerLimitValue,max:r.limitValue,step:"1",id:"customRange3",onChange:e=>{r.onDataChange(e.target.value)}}),Ut.jsxs("div",{style:{width:"100%",height:"20%",display:"flex",justifyContent:"space-between",backgroundColor:"darkgrey"},children:[Ut.jsxs("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:["Von: ",r.lowerLimitValue]}),Ut.jsxs("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:["= ",r.currentValue]}),Ut.jsxs("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:["Bis: ",r.limitValue]})]})]}),$L=r=>Ut.jsxs("div",{style:{margin:"5px",border:"1px solid grey",borderRadius:"5px",padding:"5px"},children:[Ut.jsx("label",{htmlFor:"exampleFormControlInput1",className:"form-label",children:r.labelText}),Ut.jsx("div",{className:"form-check",children:Ut.jsx("input",{className:"form-check-input",type:"checkbox",value:"",id:"flexCheckDefault",onChange:e=>{r.onChange(e.target.checked)}})})]}),KL=r=>{const e="-",t=An(R=>R.maxCorridorWidth),n=An(R=>R.minApartmentWidthLowerLimit),s=An(R=>R.minApartmentWidthLimit),a=An(R=>R.maxApartmentWidthLowerLimit),c=An(R=>R.maxApartmentWidthLimit),u=An(R=>R.maxN),d=An(R=>R.minN),f=ln(R=>R.setHouseWidth),p=ln(R=>R.setHouseHeight),g=ln(R=>R.setCorridorWidth),v=ln(R=>R.setMinApartmentWidth),y=ln(R=>R.setMaxApartmentWidth),M=ln(R=>R.setN),E=ln(R=>R.setRandom),S=ln(R=>R.n),x=ln(R=>R.minApartmentWidth),L=ln(R=>R.maxApartmentWidth);return Ut.jsxs("div",{style:{width:"100vw",height:"20vh",display:"flex",justifyContent:"center",backgroundColor:"darkgrey"},children:[Ut.jsx(of,{placeHolder:e,labelText:"House Width",onDataChange:f}),Ut.jsx(of,{placeHolder:e,labelText:"House Height",onDataChange:p}),Ut.jsx(of,{placeHolder:e,labelText:"Corridor Width",limitValue:t||"x",onDataChange:g}),Ut.jsx(af,{labelText:"Min Apartment Width",lowerLimitValue:n,currentValue:x,limitValue:s!=""?s:"x",onDataChange:v}),Ut.jsx(af,{labelText:"Max Apartment Width",lowerLimitValue:a||"x",currentValue:L,limitValue:c||"x",onDataChange:y}),Ut.jsx(af,{labelText:"Apartments",limitValue:u||0,lowerLimitValue:d||0,currentValue:S,onDataChange:M}),Ut.jsx($L,{labelText:"Randomize?",onChange:E})]})},ZL=r=>{yi.useState(6);const e=1,t=1;console.log("Complete App component requested");const n=s=>{};return Ut.jsxs(Ut.Fragment,{children:[Ut.jsx(KL,{onDataChange:n}),Ut.jsx(jL,{widthFactor:e,heightFactor:t})]})};Yy.createRoot(document.getElementById("root")).render(Ut.jsx(yi.StrictMode,{children:Ut.jsx(ZL,{})}));
